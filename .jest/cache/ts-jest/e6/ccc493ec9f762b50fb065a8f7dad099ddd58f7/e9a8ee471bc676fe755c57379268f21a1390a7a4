[["D:\\projects\\Esportudo\\src\\context\\Players\\index.tsx",{"fileContent":"import * as React from 'react';\r\nimport { createContext, useContext } from 'react';\r\nimport RAPIDAPI from '../../services/Api';\r\n\r\ntype PlayersContextType = {\r\n    getPlayers: () => Promise<any>;\r\n}\r\n\r\nexport const PlayersContext = createContext<PlayersContextType>({} as PlayersContextType);\r\n\r\nexport const PlayersProvider = ({ children }: any) => {\r\n    const getPlayers = async () => {\r\n        try {\r\n            const response = RAPIDAPI.get(\"/players\", {\r\n                params: {\r\n                    season: 2022,\r\n                    team: 131\r\n                }\r\n            });\r\n\r\n            return response;\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    return <PlayersContext.Provider value={{ getPlayers }}>\r\n        {children}\r\n    </PlayersContext.Provider>\r\n}\r\n\r\nexport const usePlayers = () => useContext(PlayersContext);","resolvedModuleNames":["D:/projects/Esportudo/src/services/Api.tsx"]}],["D:\\projects\\Esportudo\\src\\services\\Api.tsx",{"fileContent":"import env from 'react-native-dotenv';\r\nimport axios from 'axios';\r\n\r\nconst RAPIDAPI = axios.create({\r\n    baseURL: env.API_URL,\r\n    headers: {\r\n        'x-rapidapi-key': env.API_KEY,\r\n        'x-rapidapi-host': env.API_HOST\r\n    }\r\n});\r\n\r\nexport default RAPIDAPI;\r\n","resolvedModuleNames":[]}],["D:\\projects\\Esportudo\\src\\screens\\Home\\index.tsx",{"fileContent":"import * as React from \"react\";\r\nimport { Image } from \"react-native\";\r\nimport {\r\n    StyledContainer,\r\n    StyledGradient,\r\n    StyledDiscoverImage,\r\n    StyledTag,\r\n    StyledTagText,\r\n    StyledTitle,\r\n    StyledDiscoverDate\r\n} from './styles';\r\n\r\nimport { ScrollView } from \"react-native\";\r\nimport News from \"../../components/News\";\r\n\r\nconst Home = ({ navigation }: any) => {\r\n    return (\r\n    <ScrollView>\r\n        <StyledContainer>\r\n            <StyledGradient\r\n                start={{ x: 0, y: 0 }}\r\n                end={{ x: 1, y: 0 }}\r\n                colors={['#4C4478', '#0C0C69']}\r\n            >\r\n                <StyledTag>\r\n                    <Image source={require('../../assets/iconly.soccer.png')} />\r\n                    <StyledTagText>Football</StyledTagText>\r\n                </StyledTag>\r\n                <StyledTitle>\r\n                    Zidane and Real Madrid: Where it went wrong and what's next\r\n                </StyledTitle>\r\n                <StyledDiscoverDate>\r\n                    Tomorrow, 10:00 AM\r\n                </StyledDiscoverDate>\r\n                <StyledDiscoverImage source={require('../../assets/discover.image.png')} />\r\n            </StyledGradient>\r\n            <News navigation={navigation} />\r\n        </StyledContainer>\r\n    </ScrollView>\r\n    );\r\n}\r\n\r\nexport default Home;","resolvedModuleNames":["D:/projects/Esportudo/src/screens/Home/styles.tsx","D:/projects/Esportudo/src/components/News/index.tsx","D:/projects/Esportudo/src/components/News/styles.tsx"]}],["D:\\projects\\Esportudo\\src\\screens\\Home\\styles.tsx",{"fileContent":"import styled from \"styled-components\";\r\nimport * as RN from \"react-native\";\r\nimport * as LG from \"react-native-linear-gradient\";\r\n\r\nexport const StyledContainer = styled(RN.View)`\r\n    position: relative;\r\n    width: 100%;    \r\n    box-sizing: border-box;\r\n    padding: 20px;\r\n`;\r\n\r\nexport const StyledGradient = styled(LG.default)`\r\n    width: 100%;\r\n    min-height: 30%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    justify-content: flex-start;\r\n    border-radius: 16px;\r\n    padding: 16px;\r\n    margin: 0 0 20px 0;\r\n`;\r\n\r\nexport const StyledDiscoverImage = styled(RN.Image)`\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 16px;\r\n    width: 50%;\r\n    height: 194px;\r\n`;\r\n\r\nexport const StyledTag = styled(RN.View)`\r\n    background-color: #fff;\r\n    border-radius: 50px;\r\n    padding: 6px;\r\n    flex-direction: row;\r\n    align-items: center;\r\n`;\r\n\r\nexport const StyledTagText = styled(RN.Text)`\r\n    font-size: 12px;\r\n    font-family: Roboto;\r\n    font-weight: 700;\r\n    color: #000;\r\n    margin: 0 0 0 5px;\r\n`;\r\n\r\nexport const StyledTitle = styled(RN.Text)`\r\n    max-width: 50%;\r\n    font-size: 20px;\r\n    font-family: Roboto;\r\n    font-weight: bold;\r\n    color: #fff;\r\n    margin: 5px 0;\r\n`;\r\n\r\nexport const StyledDiscoverDate = styled(RN.Text)`\r\n    font-size: 12px;\r\n    font-family: Roboto;\r\n    font-weight: 500;\r\n    color: #fff;\r\n`;","resolvedModuleNames":[]}],["D:\\projects\\Esportudo\\src\\components\\News\\index.tsx",{"fileContent":"import * as React from 'react';\r\nimport { ImageSourcePropType } from 'react-native';\r\nimport {\r\n    StyledContainer,\r\n    StyledNewsHeader,\r\n    StyledTitle,\r\n    StyledText,\r\n    StyledNotice,\r\n    StyledNoticeImage,\r\n    StyledNoticeContent,\r\n    StyledNoticeTitle,\r\n    StyledNoticeText,\r\n    StyledNoticeAuthor\r\n} from './styles';\r\n\r\ntype NoticeProps = {\r\n    title: string,\r\n    complete_title: string,\r\n    image: ImageSourcePropType & string,\r\n    views: string,\r\n    posted: string,\r\n    author: string\r\n}\r\n\r\nconst News = ({ navigation }: any) => {\r\n    const news = [\r\n        {\r\n            title: 'Ronaldo pushing for Man City move',\r\n            complete_title: 'LIVE Transfer Talk: Ronaldo pushing for Man City move',\r\n            image: require('../../assets/notice.1.jpg'),\r\n            views: '125,908',\r\n            posted: '2 days ago',\r\n            author: 'Gusta Mello'\r\n        },\r\n        {\r\n            title: \"City to sign Kane? Top clubs' needs ahead...\",\r\n            complete_title: 'LIVE Transfer Talk: Ronaldo pushing for Man City move',\r\n            image: require('../../assets/notice.2.jpg'),\r\n            views: '125,908',\r\n            posted: '2 days ago',\r\n            author: 'Iarlen Aquiles'\r\n        },\r\n        {\r\n            title: \"Vinicius Jr.'s been too busy becoming...\",\r\n            complete_title: 'LIVE Transfer Talk: Ronaldo pushing for Man City move',\r\n            image: require('../../assets/notice.3.jpg'),\r\n            views: '125,908',\r\n            posted: '2 days ago',\r\n            author: 'Bruno Araujo'\r\n        },\r\n        {\r\n            title: \"Vinicius Jr.'s been too busy becoming...\",\r\n            complete_title: 'LIVE Transfer Talk: Ronaldo pushing for Man City move',\r\n            image: require('../../assets/notice.3.jpg'),\r\n            views: '125,908',\r\n            posted: '2 days ago',\r\n            author: 'Bruno Araujo'\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <StyledContainer>\r\n            <StyledNewsHeader>\r\n                <StyledTitle>\r\n                    Latest News\r\n                </StyledTitle>\r\n                <StyledText>\r\n                    View all\r\n                </StyledText>\r\n            </StyledNewsHeader>\r\n            {news.map((notice: NoticeProps, index: number) => {\r\n                return <StyledNotice key={index}>\r\n                    <StyledNoticeImage source={notice.image} />\r\n                    <StyledNoticeContent>\r\n                        <StyledNoticeTitle>\r\n                            {notice.title}\r\n                        </StyledNoticeTitle>\r\n                        <StyledNoticeText>\r\n                            {notice.views} views   â€¢  {notice.posted}\r\n                        </StyledNoticeText>\r\n                        <StyledNoticeAuthor>\r\n                            {notice.author}\r\n                        </StyledNoticeAuthor>\r\n                    </StyledNoticeContent>\r\n                </StyledNotice>\r\n            })}\r\n        </StyledContainer>\r\n    );\r\n};\r\n\r\nexport default News;\r\n","resolvedModuleNames":["D:/projects/Esportudo/src/components/News/styles.tsx"]}],["D:\\projects\\Esportudo\\src\\components\\News\\styles.tsx",{"fileContent":"import styled, { StyledComponent } from 'styled-components';\r\nimport * as RN from 'react-native';\r\n\r\ntype ContainerProps = RN.ViewProps & {\r\n    children?: React.ReactNode | React.ReactNode[];\r\n}\r\n\r\nexport const StyledContainer = styled(RN.View) <ContainerProps>`\r\n    width: 100%;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    justify-content: flex-start;\r\n`;\r\n\r\nexport const StyledNewsHeader = styled(RN.View)`\r\n    width: 100%;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin: 0 0 5px 0;\r\n`;\r\n\r\nexport const StyledTitle = styled(RN.Text)`\r\n    font-size: 20px;\r\n    font-family: Roboto;\r\n    font-weight: bold;\r\n    color: #fff;\r\n`;\r\n\r\nexport const StyledText = styled(RN.Text)`\r\n    font-size: 12px;\r\n    font-family: Roboto;\r\n    color: #808191;\r\n    text-transform: uppercase;\r\n`;\r\n\r\nexport const StyledNotice = styled(RN.View)`\r\n    width: 100%;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin: 0 0 20px 0;\r\n`;\r\n\r\nexport const StyledNoticeImage = styled(RN.Image)`\r\n    width: 35%;\r\n    height: 100%;\r\n    border-radius: 10px;\r\n    margin: 0 10px 0 0;\r\n`;\r\n\r\nexport const StyledNoticeContent = styled(RN.View)`\r\n    width: 65%;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    justify-content: flex-start;\r\n`;\r\n\r\nexport const StyledNoticeTitle = styled(RN.Text)`\r\n    font-size: 16px;\r\n    font-family: Roboto;\r\n    font-weight: bold;\r\n    color: #fff;\r\n    margin: 0 0 5px 0;\r\n`;\r\n\r\nexport const StyledNoticeText = styled(RN.Text)`\r\n    font-size: 14px;\r\n    font-family: Roboto;\r\n    color: #808191;\r\n    margin: 0 0 5px 0;\r\n`;\r\n\r\nexport const StyledNoticeAuthor = styled(RN.Text)`\r\n    font-size: 14px;\r\n    font-family: Roboto;\r\n    color: #9780B5;\r\n`;","resolvedModuleNames":[]}],["D:\\projects\\Esportudo\\src\\screens\\Players\\index.tsx",{"fileContent":"import * as  React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { ScrollView } from 'react-native';\r\nimport {\r\n    StyledContainer,\r\n    StyledTable,\r\n    StyledTableContent,\r\n    StyledTableTitle,\r\n    StyledTableImage,\r\n    StyledTableText,\r\n    Hairline,\r\n    StyledTeam\r\n} from './styles';\r\nimport Loader from \"../../components/Loading\";\r\nimport { usePlayers } from \"../../context/Players\";\r\n\r\nconst Players = ({ navigation }: any) => {\r\n    const { getPlayers } = usePlayers();\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [players, setPlayers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getPlayers().then(response => {\r\n            if (response.status === 200) {\r\n                setPlayers(response.data.response);\r\n                setLoading(false);\r\n            } else setLoading(false);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <StyledContainer>\r\n            <StyledTeam>\r\n                <StyledTableImage\r\n                    resizeMode=\"contain\"\r\n                    source={{ uri: \"https://media.api-sports.io/football/teams/131.png\" }} />\r\n                <StyledTableContent>\r\n                    <StyledTableText>You are viewing players from</StyledTableText>\r\n                    <StyledTableTitle>Corinthians â€¢ 2022</StyledTableTitle>\r\n                </StyledTableContent>\r\n            </StyledTeam>\r\n            <Hairline />\r\n            {loading ? <Loader name=\"Players\" /> :\r\n                <ScrollView>\r\n                    {players.map((player: any, index: number) => {\r\n                        return <StyledTable key={index} identifier={index}>\r\n                            <StyledTableImage\r\n                                resizeMode=\"contain\"\r\n                                source={{ uri: player.player.photo }} />\r\n                            <StyledTableContent>\r\n                                <StyledTableTitle>{player.player.name}</StyledTableTitle>\r\n                                <StyledTableText>{player.player.nationality} â€¢ {player.player.birth.place}</StyledTableText>\r\n                                <StyledTableText>Height: {player.player.height}</StyledTableText>\r\n                                <StyledTableText>Age: {player.player.age}</StyledTableText>\r\n                            </StyledTableContent>\r\n                        </StyledTable>\r\n                    })}\r\n                </ScrollView>}\r\n        </StyledContainer>\r\n    );\r\n}\r\n\r\nexport default Players;","resolvedModuleNames":["D:/projects/Esportudo/src/screens/Players/styles.tsx","D:/projects/Esportudo/src/components/Loading/index.tsx","D:/projects/Esportudo/src/context/Players/index.tsx","D:/projects/Esportudo/src/components/Loading/styles.tsx","D:/projects/Esportudo/src/services/Api.tsx"]}],["D:\\projects\\Esportudo\\src\\screens\\Players\\styles.tsx",{"fileContent":"import styled from \"styled-components\";\r\nimport * as RN from 'react-native';\r\n\r\ntype ContainerProps = RN.ViewProps & {\r\n    children?: React.ReactNode | React.ReactNode[];\r\n}\r\n\r\ntype TableProps = RN.ViewProps & {\r\n    identifier: number;\r\n}\r\n\r\ntype TableContentProps = RN.ViewProps & {\r\n    width?: number | string;\r\n}\r\n\r\nexport const StyledContainer = styled(RN.View) <ContainerProps>`\r\n    width: 100%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const StyledTable = styled(RN.View) <TableProps>`\r\n    width: 100%;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    padding: 20px;\r\n    margin: 10px 0;\r\n    background-color: ${prop => prop.identifier % 2 === 0 ? 'transparent' : '#252836'};\r\n`;\r\n\r\nexport const StyledTableImage = styled(RN.Image)`\r\n    width: 20%;\r\n    height: 100%;\r\n    border-radius: 10px;\r\n`;\r\n\r\nexport const StyledTableContent = styled(RN.View) <TableContentProps>`\r\n    width: ${prop => prop.width || '80%'};\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    justify-content: flex-start;\r\n    margin: 0 0 0 10px;\r\n`;\r\n\r\nexport const StyledTableTitle = styled(RN.Text)`\r\n    font-size: 16px;\r\n    font-family: Roboto;\r\n    font-weight: bold;\r\n    color: #fff;\r\n    margin: 0 0 5px 0;\r\n`;\r\n\r\nexport const StyledTableText = styled(RN.Text)`\r\n    font-size: 14px;\r\n    font-family: Roboto;\r\n    color: #808191;\r\n    margin: 0 0 5px 0;\r\n`;\r\n\r\nexport const Hairline = styled(RN.View)`\r\n    width: 100%;\r\n    height: 1px;\r\n    background-color: #252836;\r\n`;\r\n\r\nexport const StyledTeam = styled(RN.View)`\r\n    width: 100%;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    padding: 20px;\r\n    margin: 10px 0;\r\n`;\r\n","resolvedModuleNames":[]}],["D:\\projects\\Esportudo\\src\\components\\Loading\\index.tsx",{"fileContent":"import * as React from 'react';\r\nimport { ActivityIndicator } from 'react-native';\r\nimport { StyledContainer, StyledText } from './styles';\r\n\r\ntype LoaderProps = {\r\n    name: string\r\n}\r\n\r\nconst Loader = ({ name }: LoaderProps) => {\r\n    return (<StyledContainer>\r\n        <StyledText>Loading information about {name}{'\\n'}it may take some time...</StyledText>\r\n        <ActivityIndicator size={30} color=\"#808191\" />\r\n    </StyledContainer>)\r\n}\r\n\r\nexport default Loader;","resolvedModuleNames":["D:/projects/Esportudo/src/components/Loading/styles.tsx"]}],["D:\\projects\\Esportudo\\src\\components\\Loading\\styles.tsx",{"fileContent":"import styled from \"styled-components\";\r\nimport * as RN from \"react-native\";\r\n\r\nexport const StyledContainer = styled(RN.View)`\r\n    width: 100%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 50% 0 0 0;\r\n`;\r\n\r\nexport const StyledText = styled(RN.Text)`\r\n    font-size: 14px;\r\n    font-family: Roboto;\r\n    color: #808191;\r\n    margin: 0 0 10px 0;\r\n    text-align: center;\r\n`;","resolvedModuleNames":[]}],["D:\\projects\\Esportudo\\src\\screens\\Leagues\\index.tsx",{"fileContent":"import * as  React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useLeagues } from \"../../context/Leagues\";\r\nimport { ScrollView } from \"react-native\";\r\nimport {\r\n    StyledContainer,\r\n    StyledLeague,\r\n    StyledLeagueContent,\r\n    StyledLeagueTitle,\r\n    StyledLeagueImage,\r\n    StyledLeagueText\r\n} from './styles';\r\nimport Loader from \"../../components/Loading\";\r\n\r\nconst Leagues = ({ navigation }: any) => {\r\n    const { getLeagues } = useLeagues();\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [leagues, setLeagues] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getLeagues().then(response => {\r\n            if (response.status === 200) {\r\n                setLeagues(response.data.response);\r\n                setLoading(false);\r\n            } else setLoading(false);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <StyledContainer>\r\n            {loading ? <Loader name=\"Leagues\" /> :\r\n                <ScrollView>\r\n                    {leagues.map((league: any, index: number) => {\r\n                        return <StyledLeague key={index} identifier={index}>\r\n                            <StyledLeagueImage\r\n                                resizeMode=\"contain\"\r\n                                source={{ uri: league.league.logo }} />\r\n                            <StyledLeagueContent>\r\n                                <StyledLeagueTitle>{league.league.name}</StyledLeagueTitle>\r\n                                <StyledLeagueText>League  â€¢  {league.country.name} - {league.country.code}</StyledLeagueText>\r\n                                <StyledLeagueText>Season 2022</StyledLeagueText>\r\n                            </StyledLeagueContent>\r\n                        </StyledLeague>\r\n                    })}\r\n                </ScrollView>}\r\n        </StyledContainer>\r\n    );\r\n}\r\n\r\nexport default Leagues;","resolvedModuleNames":["D:/projects/Esportudo/src/context/Leagues/index.tsx","D:/projects/Esportudo/src/screens/Leagues/styles.tsx","D:/projects/Esportudo/src/components/Loading/index.tsx","D:/projects/Esportudo/src/services/Api.tsx","D:/projects/Esportudo/src/components/Loading/styles.tsx"]}],["D:\\projects\\Esportudo\\src\\context\\Leagues\\index.tsx",{"fileContent":"import React, { createContext, useContext } from 'react';\r\nimport RAPIDAPI from '../../services/Api';\r\n\r\ntype LeaguesContextType = {\r\n    getLeagues: () => Promise<any>;\r\n}\r\n\r\nexport const LeaguesContext = createContext<LeaguesContextType>({} as LeaguesContextType);\r\n\r\nexport const LeaguesProvider = ({ children }: any) => {\r\n    const getLeagues = async () => {\r\n        try {\r\n            const response = RAPIDAPI.get('/leagues');\r\n\r\n            return response;\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    return <LeaguesContext.Provider value={{ getLeagues }}>\r\n        {children}\r\n    </LeaguesContext.Provider>\r\n}\r\n\r\nexport const useLeagues = () => useContext(LeaguesContext);","resolvedModuleNames":["D:/projects/Esportudo/src/services/Api.tsx"]}],["D:\\projects\\Esportudo\\src\\screens\\Leagues\\styles.tsx",{"fileContent":"import styled from \"styled-components\";\r\nimport * as RN from 'react-native';\r\n\r\ntype ContainerProps = RN.ViewProps & {\r\n    children?: React.ReactNode | React.ReactNode[];\r\n}\r\n\r\ntype LeagueProps = RN.ViewProps & {\r\n    identifier: number;\r\n}\r\n\r\nexport const StyledContainer = styled(RN.View) <ContainerProps>`\r\n    width: 100%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const StyledLeague = styled(RN.View) <LeagueProps>`\r\n    width: 100%;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    padding: 20px;\r\n    margin: 10px 0;\r\n    background-color: ${prop => prop.identifier % 2 === 0 ? 'transparent' : '#252836'};\r\n`;\r\n\r\nexport const StyledLeagueImage = styled(RN.Image)`\r\n    width: 35%;\r\n    height: 100%;\r\n    border-radius: 10px;\r\n`;\r\n\r\nexport const StyledLeagueContent = styled(RN.View)`\r\n    width: 70%;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    justify-content: flex-start;\r\n    margin: 0 0 0 10px;\r\n`;\r\n\r\nexport const StyledLeagueTitle = styled(RN.Text)`\r\n    font-size: 16px;\r\n    font-family: Roboto;\r\n    font-weight: bold;\r\n    color: #fff;\r\n    margin: 0 0 5px 0;\r\n`;\r\n\r\nexport const StyledLeagueText = styled(RN.Text)`\r\n    font-size: 14px;\r\n    font-family: Roboto;\r\n    color: #808191;\r\n    margin: 0 0 5px 0;\r\n`;\r\n","resolvedModuleNames":[]}],["D:\\projects\\Esportudo\\src\\screens\\Trophies\\index.tsx",{"fileContent":"import * as  React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { ScrollView } from 'react-native';\r\nimport {\r\n    StyledContainer,\r\n    StyledTable,\r\n    StyledTableContent,\r\n    StyledTableTitle,\r\n    StyledTableImage,\r\n    StyledTableText,\r\n    Hairline,\r\n    StyledTeam\r\n} from '../Players/styles';\r\nimport Loader from \"../../components/Loading\";\r\nimport { useTrophies } from \"../../context/Trophies\";\r\n\r\nconst Trophies = ({ navigation }: any) => {\r\n    const { getTrophies } = useTrophies();\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [trophies, setTrophies] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getTrophies().then(response => {\r\n            if (response.status === 200) {\r\n                setTrophies(response.data.response);\r\n                setLoading(false);\r\n            } else setLoading(false);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <StyledContainer>\r\n            <StyledTeam>\r\n                <StyledTableImage\r\n                    resizeMode=\"contain\"\r\n                    source={{ uri: \"https://media.api-sports.io/football/players/374.png\" }} />\r\n                <StyledTableContent>\r\n                    <StyledTableText>You are viewing trophies from</StyledTableText>\r\n                    <StyledTableTitle>JoÃ£o Pedro Maturano dos Santos</StyledTableTitle>\r\n                    <StyledTableText>Brazil</StyledTableText>\r\n                </StyledTableContent>\r\n            </StyledTeam>\r\n            <Hairline />\r\n            {loading ? <Loader name=\"Trophies\" /> :\r\n                <ScrollView>\r\n                    {trophies.map((trophie: any, index: number) => {\r\n                        return <StyledTable key={index} identifier={index}>\r\n                            <StyledTableContent width={\"100%\"}>\r\n                                <StyledTableTitle>{trophie.league}</StyledTableTitle>\r\n                                <StyledTableText>{trophie.country} â€¢ {trophie.season}</StyledTableText>\r\n                                <StyledTableText>{trophie.place}</StyledTableText>\r\n                            </StyledTableContent>\r\n                        </StyledTable>\r\n                    })}\r\n                </ScrollView>}\r\n        </StyledContainer>\r\n    );\r\n}\r\n\r\nexport default Trophies;","resolvedModuleNames":["D:/projects/Esportudo/src/screens/Players/styles.tsx","D:/projects/Esportudo/src/components/Loading/index.tsx","D:/projects/Esportudo/src/context/Trophies/index.tsx","D:/projects/Esportudo/src/components/Loading/styles.tsx","D:/projects/Esportudo/src/services/Api.tsx"]}],["D:\\projects\\Esportudo\\src\\screens\\Classifications\\index.tsx",{"fileContent":"import * as  React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { ScrollView } from 'react-native';\r\nimport {\r\n    StyledContainer,\r\n    StyledTable,\r\n    StyledTableContent,\r\n    StyledTableTitle,\r\n    StyledTableImage,\r\n    StyledTableText,\r\n    Hairline,\r\n    StyledTeam\r\n} from '../Players/styles';\r\nimport Loader from \"../../components/Loading\";\r\nimport { useClassifications } from \"../../context/Classifications\";\r\n\r\nconst Classifications = ({ navigation }: any) => {\r\n    const { getClassifications } = useClassifications();\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [classifications, setClassifications] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getClassifications().then(response => {\r\n            if (response.status === 200) {\r\n                setClassifications(response.data.response[0].league.standings.flat());\r\n                setLoading(false);\r\n            } else setLoading(false);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <StyledContainer>\r\n            <StyledTeam>\r\n                <StyledTableImage\r\n                    resizeMode=\"contain\"\r\n                    source={{ uri: \"https://media.api-sports.io/football/leagues/3.png\" }} />\r\n                <StyledTableContent>\r\n                    <StyledTableText>You are viewing classfications from</StyledTableText>\r\n                    <StyledTableTitle>UEFA Europa League</StyledTableTitle>\r\n                    <StyledTableText>Cup â€¢ World</StyledTableText>\r\n                    <StyledTableText>2021</StyledTableText>\r\n                </StyledTableContent>\r\n            </StyledTeam>\r\n            <Hairline />\r\n            {loading ? <Loader name=\"Classifications\" /> :\r\n                <ScrollView>\r\n                    {classifications.map((classfication: any, index: number) => {\r\n                        return <StyledTable key={index} identifier={index}>\r\n                            <StyledTableImage\r\n                                resizeMode=\"contain\"\r\n                                source={{ uri: classfication.team.logo }} />\r\n                            <StyledTableContent width={\"100%\"}>\r\n                                <StyledTableTitle>{classfication.team.name}</StyledTableTitle>\r\n                                <StyledTableText>Rank: {classfication.rank} â€¢ {classfication.group}</StyledTableText>\r\n                                <StyledTableText>Points: {classfication.points}</StyledTableText>\r\n                            </StyledTableContent>\r\n                        </StyledTable>\r\n                    })}\r\n                </ScrollView>}\r\n        </StyledContainer>\r\n    );\r\n}\r\n\r\nexport default Classifications;","resolvedModuleNames":["D:/projects/Esportudo/src/screens/Players/styles.tsx","D:/projects/Esportudo/src/components/Loading/index.tsx","D:/projects/Esportudo/src/context/Classifications/index.tsx","D:/projects/Esportudo/src/components/Loading/styles.tsx","D:/projects/Esportudo/src/services/Api.tsx"]}],["D:\\projects\\Esportudo\\src\\context\\Classifications\\index.tsx",{"fileContent":"import * as React from 'react';\r\nimport { createContext, useContext } from 'react';\r\nimport RAPIDAPI from '../../services/Api';\r\n\r\ntype ClassificationsContextType = {\r\n    getClassifications: () => Promise<any>;\r\n}\r\n\r\nexport const ClassificationsContext = createContext<ClassificationsContextType>({} as ClassificationsContextType);\r\n\r\nexport const ClassificationsProvider = ({ children }: any) => {\r\n    const getClassifications = async () => {\r\n        try {\r\n            const response = RAPIDAPI.get('/standings', {\r\n                params: {\r\n                    league: 3,\r\n                    season: 2021\r\n                }\r\n            });\r\n\r\n            return response;\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    return <ClassificationsContext.Provider value={{ getClassifications }}>\r\n        {children}\r\n    </ClassificationsContext.Provider>\r\n}\r\n\r\nexport const useClassifications = () => useContext(ClassificationsContext);","resolvedModuleNames":["D:/projects/Esportudo/src/services/Api.tsx"]}],["D:\\projects\\Esportudo\\src\\context\\Trophies\\index.tsx",{"fileContent":"import React, { createContext, useContext } from 'react';\r\nimport RAPIDAPI from '../../services/Api';\r\n\r\ntype TrophiesContextType = {\r\n    getTrophies: () => Promise<any>;\r\n}\r\n\r\nexport const TrophiesContext = createContext<TrophiesContextType>({} as TrophiesContextType);\r\n\r\nexport const TrophiesProvider = ({ children }: any) => {\r\n    const getTrophies = async () => {\r\n        try {\r\n            const response = RAPIDAPI.get(\"/trophies\", {\r\n                params: {\r\n                    player: 374,\r\n                }\r\n            });\r\n\r\n            return response;\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    return <TrophiesContext.Provider value={{ getTrophies }}>\r\n        {children}\r\n    </TrophiesContext.Provider>\r\n}\r\n\r\nexport const useTrophies = () => useContext(TrophiesContext);","resolvedModuleNames":["D:/projects/Esportudo/src/services/Api.tsx"]}],["D:\\projects\\Esportudo\\src\\screens\\Teams\\index.tsx",{"fileContent":"import * as  React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { ScrollView } from 'react-native';\r\nimport {\r\n    StyledContainer,\r\n    StyledTable,\r\n    StyledTableContent,\r\n    StyledTableTitle,\r\n    StyledTableImage,\r\n    StyledTableText,\r\n    Hairline,\r\n    StyledTeam\r\n} from '../Players/styles';\r\nimport Loader from \"../../components/Loading\";\r\nimport { useTeams } from \"../../context/Teams\";\r\n\r\nconst Teams = ({ navigation }: any) => {\r\n    const { getTeams } = useTeams();\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [teams, setTeams] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getTeams().then(response => {\r\n            if (response.status === 200) {\r\n                setTeams(response.data.response);\r\n                setLoading(false);\r\n            } else setLoading(false);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <StyledContainer>\r\n            <StyledTeam>\r\n                <StyledTableImage\r\n                    resizeMode=\"contain\"\r\n                    source={{ uri: \"https://media.api-sports.io/football/leagues/3.png\" }} />\r\n                <StyledTableContent>\r\n                    <StyledTableText>You are viewing teams from</StyledTableText>\r\n                    <StyledTableTitle>UEFA Europa League</StyledTableTitle>\r\n                    <StyledTableText>Cup â€¢ World</StyledTableText>\r\n                </StyledTableContent>\r\n            </StyledTeam>\r\n            <Hairline />\r\n            {loading ? <Loader name=\"Teams\" /> :\r\n                <ScrollView>\r\n                    {teams.map((team: any, index: number) => {\r\n                        return <StyledTable key={index} identifier={index}>\r\n                            <StyledTableImage\r\n                                resizeMode=\"contain\"\r\n                                source={{ uri: team.team.logo }} />\r\n                            <StyledTableContent width={\"100%\"}>\r\n                                <StyledTableTitle>{team.team.name}</StyledTableTitle>\r\n                                <StyledTableText>{team.team.country} â€¢ {team.venue.city}</StyledTableText>\r\n                            </StyledTableContent>\r\n                        </StyledTable>\r\n                    })}\r\n                </ScrollView>}\r\n        </StyledContainer>\r\n    );\r\n}\r\n\r\nexport default Teams;","resolvedModuleNames":["D:/projects/Esportudo/src/screens/Players/styles.tsx","D:/projects/Esportudo/src/components/Loading/index.tsx","D:/projects/Esportudo/src/context/Teams/index.tsx","D:/projects/Esportudo/src/components/Loading/styles.tsx","D:/projects/Esportudo/src/services/Api.tsx"]}],["D:\\projects\\Esportudo\\src\\context\\Teams\\index.tsx",{"fileContent":"import * as React from 'react';\r\nimport { createContext, useContext } from 'react';\r\nimport RAPIDAPI from '../../services/Api';\r\n\r\ntype TeamsContextType = {\r\n    getTeams: () => Promise<any>;\r\n}\r\n\r\nexport const TeamsContext = createContext<TeamsContextType>({} as TeamsContextType);\r\n\r\nexport const TeamsProvider = ({ children }: any) => {\r\n    const getTeams = async () => {\r\n        try {\r\n            const response = RAPIDAPI.get(\"/teams\", {\r\n                params: {\r\n                    league: 3,\r\n                    season: 2022\r\n                }\r\n            });\r\n\r\n            return response;\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    return <TeamsContext.Provider value={{ getTeams }}>\r\n        {children}\r\n    </TeamsContext.Provider>\r\n}\r\n\r\nexport const useTeams = () => useContext(TeamsContext);","resolvedModuleNames":["D:/projects/Esportudo/src/services/Api.tsx"]}]]