{"version":3,"names":["async","require","abort","module","exports","iterate","list","iterator","state","callback","key","index","jobs","runJob","error","output","results","item","aborter","length"],"sources":["iterate.js"],"sourcesContent":["var async = require('./async.js')\n  , abort = require('./abort.js')\n  ;\n\n// API\nmodule.exports = iterate;\n\n/**\n * Iterates over each job object\n *\n * @param {array|object} list - array or object (named list) to iterate over\n * @param {function} iterator - iterator to run\n * @param {object} state - current job status\n * @param {function} callback - invoked when all elements processed\n */\nfunction iterate(list, iterator, state, callback)\n{\n  // store current index\n  var key = state['keyedList'] ? state['keyedList'][state.index] : state.index;\n\n  state.jobs[key] = runJob(iterator, key, list[key], function(error, output)\n  {\n    // don't repeat yourself\n    // skip secondary callbacks\n    if (!(key in state.jobs))\n    {\n      return;\n    }\n\n    // clean up jobs\n    delete state.jobs[key];\n\n    if (error)\n    {\n      // don't process rest of the results\n      // stop still active jobs\n      // and reset the list\n      abort(state);\n    }\n    else\n    {\n      state.results[key] = output;\n    }\n\n    // return salvaged results\n    callback(error, state.results);\n  });\n}\n\n/**\n * Runs iterator over provided job element\n *\n * @param   {function} iterator - iterator to invoke\n * @param   {string|number} key - key/index of the element in the list of jobs\n * @param   {mixed} item - job description\n * @param   {function} callback - invoked after iterator is done with the job\n * @returns {function|mixed} - job abort function or something else\n */\nfunction runJob(iterator, key, item, callback)\n{\n  var aborter;\n\n  // allow shortcut if iterator expects only two arguments\n  if (iterator.length == 2)\n  {\n    aborter = iterator(item, async(callback));\n  }\n  // otherwise go with full three arguments\n  else\n  {\n    aborter = iterator(item, key, async(callback));\n  }\n\n  return aborter;\n}\n"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAAnB;AAAA,IACIC,KAAK,GAAGD,OAAO,CAAC,YAAD,CADnB;;AAKAE,MAAM,CAACC,OAAP,GAAiBC,OAAjB;;AAUA,SAASA,OAAT,CAAiBC,IAAjB,EAAuBC,QAAvB,EAAiCC,KAAjC,EAAwCC,QAAxC,EACA;EAEE,IAAIC,GAAG,GAAGF,KAAK,CAAC,WAAD,CAAL,GAAqBA,KAAK,CAAC,WAAD,CAAL,CAAmBA,KAAK,CAACG,KAAzB,CAArB,GAAuDH,KAAK,CAACG,KAAvE;EAEAH,KAAK,CAACI,IAAN,CAAWF,GAAX,IAAkBG,MAAM,CAACN,QAAD,EAAWG,GAAX,EAAgBJ,IAAI,CAACI,GAAD,CAApB,EAA2B,UAASI,KAAT,EAAgBC,MAAhB,EACnD;IAGE,IAAI,EAAEL,GAAG,IAAIF,KAAK,CAACI,IAAf,CAAJ,EACA;MACE;IACD;;IAGD,OAAOJ,KAAK,CAACI,IAAN,CAAWF,GAAX,CAAP;;IAEA,IAAII,KAAJ,EACA;MAIEZ,KAAK,CAACM,KAAD,CAAL;IACD,CAND,MAQA;MACEA,KAAK,CAACQ,OAAN,CAAcN,GAAd,IAAqBK,MAArB;IACD;;IAGDN,QAAQ,CAACK,KAAD,EAAQN,KAAK,CAACQ,OAAd,CAAR;EACD,CA1BuB,CAAxB;AA2BD;;AAWD,SAASH,MAAT,CAAgBN,QAAhB,EAA0BG,GAA1B,EAA+BO,IAA/B,EAAqCR,QAArC,EACA;EACE,IAAIS,OAAJ;;EAGA,IAAIX,QAAQ,CAACY,MAAT,IAAmB,CAAvB,EACA;IACED,OAAO,GAAGX,QAAQ,CAACU,IAAD,EAAOjB,KAAK,CAACS,QAAD,CAAZ,CAAlB;EACD,CAHD,MAMA;IACES,OAAO,GAAGX,QAAQ,CAACU,IAAD,EAAOP,GAAP,EAAYV,KAAK,CAACS,QAAD,CAAjB,CAAlB;EACD;;EAED,OAAOS,OAAP;AACD"}