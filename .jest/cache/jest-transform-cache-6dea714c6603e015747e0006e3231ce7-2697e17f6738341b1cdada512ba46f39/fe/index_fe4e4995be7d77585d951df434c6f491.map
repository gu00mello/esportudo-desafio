{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAQA;;AAEA,IAAMA,OAAO,GAAG,SAAVA,OAAU,OAAwB;EAAA,IAArBC,UAAqB,QAArBA,UAAqB;;EACpC,YAAuB,2BAAvB;EAAA,IAAQC,UAAR,SAAQA,UAAR;;EAEA,YAA8B,sBAAS,IAAT,CAA9B;EAAA;EAAA,IAAOC,OAAP;EAAA,IAAgBC,UAAhB;;EACA,YAA8B,sBAAS,EAAT,CAA9B;EAAA;EAAA,IAAOC,OAAP;EAAA,IAAgBC,UAAhB;;EAEA,uBAAU,YAAK;IACXJ,UAAU,GAAGK,IAAb,CAAkB,kBAAQ,EAAG;MACzB,IAAIC,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;QACzBH,UAAU,CAACE,QAAQ,CAACE,IAAT,CAAcF,QAAf,CAAV;QACAJ,UAAU,CAAC,KAAD,CAAV;MACH,CAHD,MAGOA,UAAU,CAAC,KAAD,CAAV;IACV,CALD;EAMH,CAPD,EAOG,EAPH;EASA,OACI,oBAAC,QAAD,CAAC,eAAD,QACKD,OAAO,GAAG,oBAAC,SAAD,CAAC,OAAD;IAAQ,IAAI,EAAC;EAAb,EAAH,GACJ,oBAAC,cAAD,CAAC,UAAD,QACKE,OAAO,CAACM,GAAR,CAAY,UAACC,MAAD,EAAcC,KAAd,EAA+B;IACxC,OAAO,oBAAC,QAAD,CAAC,YAAD;MAAc,GAAG,EAAEA,KAAnB;MAA0B,UAAU,EAAEA;IAAtC,GACH,oBAAC,QAAD,CAAC,iBAAD;MACI,UAAU,EAAC,SADf;MAEI,MAAM,EAAE;QAAEC,GAAG,EAAEF,MAAM,CAACA,MAAP,CAAcG;MAArB;IAFZ,EADG,EAIH,oBAAC,QAAD,CAAC,mBAAD,QACI,oBAAC,QAAD,CAAC,iBAAD,QAAoBH,MAAM,CAACA,MAAP,CAAcI,IAAlC,CADJ,EAEI,oBAAC,QAAD,CAAC,gBAAD,4BAA8BJ,MAAM,CAACK,OAAP,CAAeD,IAA7C,SAAsDJ,MAAM,CAACK,OAAP,CAAeC,IAArE,CAFJ,EAGI,oBAAC,QAAD,CAAC,gBAAD,sBAHJ,CAJG,CAAP;EAUH,CAXA,CADL,CAFR,CADJ;AAmBH,CAlCD;;AAoCAC,kBAAenB,OAAf","names":["Leagues","navigation","getLeagues","loading","setLoading","leagues","setLeagues","then","response","status","data","map","league","index","uri","logo","name","country","code","exports"],"sources":["D:\\projects\\Esportudo\\src\\screens\\Leagues\\index.tsx"],"sourcesContent":["import * as  React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useLeagues } from \"../../context/Leagues\";\r\nimport { ScrollView } from \"react-native\";\r\nimport {\r\n    StyledContainer,\r\n    StyledLeague,\r\n    StyledLeagueContent,\r\n    StyledLeagueTitle,\r\n    StyledLeagueImage,\r\n    StyledLeagueText\r\n} from './styles';\r\nimport Loader from \"../../components/Loading\";\r\n\r\nconst Leagues = ({ navigation }: any) => {\r\n    const { getLeagues } = useLeagues();\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [leagues, setLeagues] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getLeagues().then(response => {\r\n            if (response.status === 200) {\r\n                setLeagues(response.data.response);\r\n                setLoading(false);\r\n            } else setLoading(false);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <StyledContainer>\r\n            {loading ? <Loader name=\"Leagues\" /> :\r\n                <ScrollView>\r\n                    {leagues.map((league: any, index: number) => {\r\n                        return <StyledLeague key={index} identifier={index}>\r\n                            <StyledLeagueImage\r\n                                resizeMode=\"contain\"\r\n                                source={{ uri: league.league.logo }} />\r\n                            <StyledLeagueContent>\r\n                                <StyledLeagueTitle>{league.league.name}</StyledLeagueTitle>\r\n                                <StyledLeagueText>League  â€¢  {league.country.name} - {league.country.code}</StyledLeagueText>\r\n                                <StyledLeagueText>Season 2022</StyledLeagueText>\r\n                            </StyledLeagueContent>\r\n                        </StyledLeague>\r\n                    })}\r\n                </ScrollView>}\r\n        </StyledContainer>\r\n    );\r\n}\r\n\r\nexport default Leagues;"]}