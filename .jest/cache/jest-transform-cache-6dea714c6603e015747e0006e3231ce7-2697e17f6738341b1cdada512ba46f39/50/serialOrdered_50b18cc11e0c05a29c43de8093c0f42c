53602f57f1dae13423a49e9bee46beaa
var iterate = require('./lib/iterate.js'),
    initState = require('./lib/state.js'),
    terminator = require('./lib/terminator.js');

module.exports = serialOrdered;
module.exports.ascending = ascending;
module.exports.descending = descending;

function serialOrdered(list, iterator, sortMethod, callback) {
  var state = initState(list, sortMethod);
  iterate(list, iterator, state, function iteratorHandler(error, result) {
    if (error) {
      callback(error, result);
      return;
    }

    state.index++;

    if (state.index < (state['keyedList'] || list).length) {
      iterate(list, iterator, state, iteratorHandler);
      return;
    }

    callback(null, state.results);
  });
  return terminator.bind(state, callback);
}

function ascending(a, b) {
  return a < b ? -1 : a > b ? 1 : 0;
}

function descending(a, b) {
  return -1 * ascending(a, b);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJpdGVyYXRlIiwicmVxdWlyZSIsImluaXRTdGF0ZSIsInRlcm1pbmF0b3IiLCJtb2R1bGUiLCJleHBvcnRzIiwic2VyaWFsT3JkZXJlZCIsImFzY2VuZGluZyIsImRlc2NlbmRpbmciLCJsaXN0IiwiaXRlcmF0b3IiLCJzb3J0TWV0aG9kIiwiY2FsbGJhY2siLCJzdGF0ZSIsIml0ZXJhdG9ySGFuZGxlciIsImVycm9yIiwicmVzdWx0IiwiaW5kZXgiLCJsZW5ndGgiLCJyZXN1bHRzIiwiYmluZCIsImEiLCJiIl0sInNvdXJjZXMiOlsic2VyaWFsT3JkZXJlZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaXRlcmF0ZSAgICA9IHJlcXVpcmUoJy4vbGliL2l0ZXJhdGUuanMnKVxuICAsIGluaXRTdGF0ZSAgPSByZXF1aXJlKCcuL2xpYi9zdGF0ZS5qcycpXG4gICwgdGVybWluYXRvciA9IHJlcXVpcmUoJy4vbGliL3Rlcm1pbmF0b3IuanMnKVxuICA7XG5cbi8vIFB1YmxpYyBBUElcbm1vZHVsZS5leHBvcnRzID0gc2VyaWFsT3JkZXJlZDtcbi8vIHNvcnRpbmcgaGVscGVyc1xubW9kdWxlLmV4cG9ydHMuYXNjZW5kaW5nICA9IGFzY2VuZGluZztcbm1vZHVsZS5leHBvcnRzLmRlc2NlbmRpbmcgPSBkZXNjZW5kaW5nO1xuXG4vKipcbiAqIFJ1bnMgaXRlcmF0b3Igb3ZlciBwcm92aWRlZCBzb3J0ZWQgYXJyYXkgZWxlbWVudHMgaW4gc2VyaWVzXG4gKlxuICogQHBhcmFtICAge2FycmF5fG9iamVjdH0gbGlzdCAtIGFycmF5IG9yIG9iamVjdCAobmFtZWQgbGlzdCkgdG8gaXRlcmF0ZSBvdmVyXG4gKiBAcGFyYW0gICB7ZnVuY3Rpb259IGl0ZXJhdG9yIC0gaXRlcmF0b3IgdG8gcnVuXG4gKiBAcGFyYW0gICB7ZnVuY3Rpb259IHNvcnRNZXRob2QgLSBjdXN0b20gc29ydCBmdW5jdGlvblxuICogQHBhcmFtICAge2Z1bmN0aW9ufSBjYWxsYmFjayAtIGludm9rZWQgd2hlbiBhbGwgZWxlbWVudHMgcHJvY2Vzc2VkXG4gKiBAcmV0dXJucyB7ZnVuY3Rpb259IC0gam9icyB0ZXJtaW5hdG9yXG4gKi9cbmZ1bmN0aW9uIHNlcmlhbE9yZGVyZWQobGlzdCwgaXRlcmF0b3IsIHNvcnRNZXRob2QsIGNhbGxiYWNrKVxue1xuICB2YXIgc3RhdGUgPSBpbml0U3RhdGUobGlzdCwgc29ydE1ldGhvZCk7XG5cbiAgaXRlcmF0ZShsaXN0LCBpdGVyYXRvciwgc3RhdGUsIGZ1bmN0aW9uIGl0ZXJhdG9ySGFuZGxlcihlcnJvciwgcmVzdWx0KVxuICB7XG4gICAgaWYgKGVycm9yKVxuICAgIHtcbiAgICAgIGNhbGxiYWNrKGVycm9yLCByZXN1bHQpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHN0YXRlLmluZGV4Kys7XG5cbiAgICAvLyBhcmUgd2UgdGhlcmUgeWV0P1xuICAgIGlmIChzdGF0ZS5pbmRleCA8IChzdGF0ZVsna2V5ZWRMaXN0J10gfHwgbGlzdCkubGVuZ3RoKVxuICAgIHtcbiAgICAgIGl0ZXJhdGUobGlzdCwgaXRlcmF0b3IsIHN0YXRlLCBpdGVyYXRvckhhbmRsZXIpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIGRvbmUgaGVyZVxuICAgIGNhbGxiYWNrKG51bGwsIHN0YXRlLnJlc3VsdHMpO1xuICB9KTtcblxuICByZXR1cm4gdGVybWluYXRvci5iaW5kKHN0YXRlLCBjYWxsYmFjayk7XG59XG5cbi8qXG4gKiAtLSBTb3J0IG1ldGhvZHNcbiAqL1xuXG4vKipcbiAqIHNvcnQgaGVscGVyIHRvIHNvcnQgYXJyYXkgZWxlbWVudHMgaW4gYXNjZW5kaW5nIG9yZGVyXG4gKlxuICogQHBhcmFtICAge21peGVkfSBhIC0gYW4gaXRlbSB0byBjb21wYXJlXG4gKiBAcGFyYW0gICB7bWl4ZWR9IGIgLSBhbiBpdGVtIHRvIGNvbXBhcmVcbiAqIEByZXR1cm5zIHtudW1iZXJ9IC0gY29tcGFyaXNvbiByZXN1bHRcbiAqL1xuZnVuY3Rpb24gYXNjZW5kaW5nKGEsIGIpXG57XG4gIHJldHVybiBhIDwgYiA/IC0xIDogYSA+IGIgPyAxIDogMDtcbn1cblxuLyoqXG4gKiBzb3J0IGhlbHBlciB0byBzb3J0IGFycmF5IGVsZW1lbnRzIGluIGRlc2NlbmRpbmcgb3JkZXJcbiAqXG4gKiBAcGFyYW0gICB7bWl4ZWR9IGEgLSBhbiBpdGVtIHRvIGNvbXBhcmVcbiAqIEBwYXJhbSAgIHttaXhlZH0gYiAtIGFuIGl0ZW0gdG8gY29tcGFyZVxuICogQHJldHVybnMge251bWJlcn0gLSBjb21wYXJpc29uIHJlc3VsdFxuICovXG5mdW5jdGlvbiBkZXNjZW5kaW5nKGEsIGIpXG57XG4gIHJldHVybiAtMSAqIGFzY2VuZGluZyhhLCBiKTtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsT0FBTyxHQUFNQyxPQUFPLENBQUMsa0JBQUQsQ0FBeEI7QUFBQSxJQUNJQyxTQUFTLEdBQUlELE9BQU8sQ0FBQyxnQkFBRCxDQUR4QjtBQUFBLElBRUlFLFVBQVUsR0FBR0YsT0FBTyxDQUFDLHFCQUFELENBRnhCOztBQU1BRyxNQUFNLENBQUNDLE9BQVAsR0FBaUJDLGFBQWpCO0FBRUFGLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlRSxTQUFmLEdBQTRCQSxTQUE1QjtBQUNBSCxNQUFNLENBQUNDLE9BQVAsQ0FBZUcsVUFBZixHQUE0QkEsVUFBNUI7O0FBV0EsU0FBU0YsYUFBVCxDQUF1QkcsSUFBdkIsRUFBNkJDLFFBQTdCLEVBQXVDQyxVQUF2QyxFQUFtREMsUUFBbkQsRUFDQTtFQUNFLElBQUlDLEtBQUssR0FBR1gsU0FBUyxDQUFDTyxJQUFELEVBQU9FLFVBQVAsQ0FBckI7RUFFQVgsT0FBTyxDQUFDUyxJQUFELEVBQU9DLFFBQVAsRUFBaUJHLEtBQWpCLEVBQXdCLFNBQVNDLGVBQVQsQ0FBeUJDLEtBQXpCLEVBQWdDQyxNQUFoQyxFQUMvQjtJQUNFLElBQUlELEtBQUosRUFDQTtNQUNFSCxRQUFRLENBQUNHLEtBQUQsRUFBUUMsTUFBUixDQUFSO01BQ0E7SUFDRDs7SUFFREgsS0FBSyxDQUFDSSxLQUFOOztJQUdBLElBQUlKLEtBQUssQ0FBQ0ksS0FBTixHQUFjLENBQUNKLEtBQUssQ0FBQyxXQUFELENBQUwsSUFBc0JKLElBQXZCLEVBQTZCUyxNQUEvQyxFQUNBO01BQ0VsQixPQUFPLENBQUNTLElBQUQsRUFBT0MsUUFBUCxFQUFpQkcsS0FBakIsRUFBd0JDLGVBQXhCLENBQVA7TUFDQTtJQUNEOztJQUdERixRQUFRLENBQUMsSUFBRCxFQUFPQyxLQUFLLENBQUNNLE9BQWIsQ0FBUjtFQUNELENBbkJNLENBQVA7RUFxQkEsT0FBT2hCLFVBQVUsQ0FBQ2lCLElBQVgsQ0FBZ0JQLEtBQWhCLEVBQXVCRCxRQUF2QixDQUFQO0FBQ0Q7O0FBYUQsU0FBU0wsU0FBVCxDQUFtQmMsQ0FBbkIsRUFBc0JDLENBQXRCLEVBQ0E7RUFDRSxPQUFPRCxDQUFDLEdBQUdDLENBQUosR0FBUSxDQUFDLENBQVQsR0FBYUQsQ0FBQyxHQUFHQyxDQUFKLEdBQVEsQ0FBUixHQUFZLENBQWhDO0FBQ0Q7O0FBU0QsU0FBU2QsVUFBVCxDQUFvQmEsQ0FBcEIsRUFBdUJDLENBQXZCLEVBQ0E7RUFDRSxPQUFPLENBQUMsQ0FBRCxHQUFLZixTQUFTLENBQUNjLENBQUQsRUFBSUMsQ0FBSixDQUFyQjtBQUNEIn0=