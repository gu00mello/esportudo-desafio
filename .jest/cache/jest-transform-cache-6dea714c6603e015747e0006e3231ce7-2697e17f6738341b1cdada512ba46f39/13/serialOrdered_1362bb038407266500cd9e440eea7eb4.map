{"version":3,"names":["iterate","require","initState","terminator","module","exports","serialOrdered","ascending","descending","list","iterator","sortMethod","callback","state","iteratorHandler","error","result","index","length","results","bind","a","b"],"sources":["serialOrdered.js"],"sourcesContent":["var iterate    = require('./lib/iterate.js')\n  , initState  = require('./lib/state.js')\n  , terminator = require('./lib/terminator.js')\n  ;\n\n// Public API\nmodule.exports = serialOrdered;\n// sorting helpers\nmodule.exports.ascending  = ascending;\nmodule.exports.descending = descending;\n\n/**\n * Runs iterator over provided sorted array elements in series\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} sortMethod - custom sort function\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction serialOrdered(list, iterator, sortMethod, callback)\n{\n  var state = initState(list, sortMethod);\n\n  iterate(list, iterator, state, function iteratorHandler(error, result)\n  {\n    if (error)\n    {\n      callback(error, result);\n      return;\n    }\n\n    state.index++;\n\n    // are we there yet?\n    if (state.index < (state['keyedList'] || list).length)\n    {\n      iterate(list, iterator, state, iteratorHandler);\n      return;\n    }\n\n    // done here\n    callback(null, state.results);\n  });\n\n  return terminator.bind(state, callback);\n}\n\n/*\n * -- Sort methods\n */\n\n/**\n * sort helper to sort array elements in ascending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction ascending(a, b)\n{\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n\n/**\n * sort helper to sort array elements in descending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction descending(a, b)\n{\n  return -1 * ascending(a, b);\n}\n"],"mappings":"AAAA,IAAIA,OAAO,GAAMC,OAAO,CAAC,kBAAD,CAAxB;AAAA,IACIC,SAAS,GAAID,OAAO,CAAC,gBAAD,CADxB;AAAA,IAEIE,UAAU,GAAGF,OAAO,CAAC,qBAAD,CAFxB;;AAMAG,MAAM,CAACC,OAAP,GAAiBC,aAAjB;AAEAF,MAAM,CAACC,OAAP,CAAeE,SAAf,GAA4BA,SAA5B;AACAH,MAAM,CAACC,OAAP,CAAeG,UAAf,GAA4BA,UAA5B;;AAWA,SAASF,aAAT,CAAuBG,IAAvB,EAA6BC,QAA7B,EAAuCC,UAAvC,EAAmDC,QAAnD,EACA;EACE,IAAIC,KAAK,GAAGX,SAAS,CAACO,IAAD,EAAOE,UAAP,CAArB;EAEAX,OAAO,CAACS,IAAD,EAAOC,QAAP,EAAiBG,KAAjB,EAAwB,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,MAAhC,EAC/B;IACE,IAAID,KAAJ,EACA;MACEH,QAAQ,CAACG,KAAD,EAAQC,MAAR,CAAR;MACA;IACD;;IAEDH,KAAK,CAACI,KAAN;;IAGA,IAAIJ,KAAK,CAACI,KAAN,GAAc,CAACJ,KAAK,CAAC,WAAD,CAAL,IAAsBJ,IAAvB,EAA6BS,MAA/C,EACA;MACElB,OAAO,CAACS,IAAD,EAAOC,QAAP,EAAiBG,KAAjB,EAAwBC,eAAxB,CAAP;MACA;IACD;;IAGDF,QAAQ,CAAC,IAAD,EAAOC,KAAK,CAACM,OAAb,CAAR;EACD,CAnBM,CAAP;EAqBA,OAAOhB,UAAU,CAACiB,IAAX,CAAgBP,KAAhB,EAAuBD,QAAvB,CAAP;AACD;;AAaD,SAASL,SAAT,CAAmBc,CAAnB,EAAsBC,CAAtB,EACA;EACE,OAAOD,CAAC,GAAGC,CAAJ,GAAQ,CAAC,CAAT,GAAaD,CAAC,GAAGC,CAAJ,GAAQ,CAAR,GAAY,CAAhC;AACD;;AASD,SAASd,UAAT,CAAoBa,CAApB,EAAuBC,CAAvB,EACA;EACE,OAAO,CAAC,CAAD,GAAKf,SAAS,CAACc,CAAD,EAAIC,CAAJ,CAArB;AACD"}