{"version":3,"names":["convertPoint","name","point","Array","isArray","console","warn","x","y","validNumber","defaultValue","value","LinearGradient","props","gradientRef","setNativeProps","children","colors","end","locations","useAngle","angleCenter","angle","start","style","otherProps","length","flatStyle","StyleSheet","flatten","borderRadius","validRadius","borderRadiiPerCorner","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","component","position","top","left","bottom","right","map","processColor","slice","Component","defaultProps"],"sources":["index.android.js"],"sourcesContent":["/**\n * @providesModule LinearGradient\n * @flow\n */\nimport React, { Component } from 'react';\nimport { processColor, StyleSheet, View } from 'react-native';\n\nimport NativeLinearGradient, { type Props } from './common';\n\nconst convertPoint = (name, point) => {\n  if (Array.isArray(point)) {\n    console.warn(\n      `LinearGradient '${name}' property should be an object with fields 'x' and 'y', ` +\n      'Array type is deprecated.'\n    );\n  }\n  // TODO: Update Android native code to receive a {x, y} object, not an array\n  if (point !== null && typeof point === 'object') {\n    return [point.x, point.y];\n  }\n  return point;\n};\n\n/**\n * Checks if value is a valid number. Otherwise, defaults to defaultValue.\n *\n * @param {number} defaultValue\n */\nconst validNumber = (defaultValue) => (value) => {\n  return typeof value === 'number' ? value : defaultValue;\n};\n\nexport default class LinearGradient extends Component<Props> {\n  props: Props;\n  gradientRef: any;\n\n  static defaultProps = {\n    start: { x: 0.5, y: 0.0 },\n    end: { x: 0.5, y: 1.0 },\n  };\n\n  setNativeProps(props: Props) {\n    this.gradientRef.setNativeProps(props);\n  }\n\n  render() {\n    const {\n      children,\n      colors,\n      end,\n      locations,\n      useAngle,\n      angleCenter,\n      angle,\n      start,\n      style,\n      ...otherProps\n    } = this.props;\n\n    if ((colors && locations) && (colors.length !== locations.length)) {\n      console.warn('LinearGradient colors and locations props should be arrays of the same length');\n    }\n\n    // inherit container borderRadius until this issue is resolved:\n    // https://github.com/facebook/react-native/issues/3198\n    const flatStyle = StyleSheet.flatten(style) || {};\n    const borderRadius = flatStyle.borderRadius || 0;\n    const validRadius = validNumber(borderRadius);\n\n    // this is the format taken by:\n    // http://developer.android.com/reference/android/graphics/Path.html#addRoundRect(android.graphics.RectF, float[], android.graphics.Path.Direction)\n    const borderRadiiPerCorner = [\n      validRadius(flatStyle.borderTopLeftRadius),\n      validRadius(flatStyle.borderTopLeftRadius),\n      validRadius(flatStyle.borderTopRightRadius),\n      validRadius(flatStyle.borderTopRightRadius),\n      validRadius(flatStyle.borderBottomRightRadius),\n      validRadius(flatStyle.borderBottomRightRadius),\n      validRadius(flatStyle.borderBottomLeftRadius),\n      validRadius(flatStyle.borderBottomLeftRadius)\n    ];\n\n    return (\n      <View ref={(component) => { this.gradientRef = component; }} {...otherProps} style={style}>\n        <NativeLinearGradient\n          style={{position: 'absolute', top: 0, left: 0, bottom: 0, right: 0}}\n          colors={colors.map(processColor)}\n          startPoint={convertPoint('start', start)}\n          endPoint={convertPoint('end', end)}\n          locations={locations ? locations.slice(0, colors.length) : null}\n          useAngle={useAngle}\n          angleCenter={convertPoint('angleCenter', angleCenter)}\n          angle={angle}\n          borderRadii={borderRadiiPerCorner}\n        />\n        { children }\n      </View>\n    );\n  }\n}\n"],"mappings":"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"}