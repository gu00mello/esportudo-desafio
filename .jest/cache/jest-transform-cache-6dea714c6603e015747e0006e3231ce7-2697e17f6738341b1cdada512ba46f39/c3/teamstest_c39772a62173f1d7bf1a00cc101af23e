f613cca95bfbd7af0671d7922e6fef29
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var React = _interopRequireWildcard(require("react"));

var _Teams = require("../src/context/Teams");

var _reactTestRenderer = require("react-test-renderer");

var _Teams2 = _interopRequireDefault(require("../src/screens/Teams"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

jest.useFakeTimers();
var tree = (0, _reactTestRenderer.create)(React.createElement(_Teams.TeamsProvider, null, React.createElement(_Teams2.default, null)));
describe('Teams', function () {
  test('renders correctly', function () {
    expect(tree.toJSON()).toMatchSnapshot();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJqZXN0IiwidXNlRmFrZVRpbWVycyIsInRyZWUiLCJjcmVhdGUiLCJkZXNjcmliZSIsInRlc3QiLCJleHBlY3QiLCJ0b0pTT04iLCJ0b01hdGNoU25hcHNob3QiXSwic291cmNlcyI6WyJ0ZWFtcy50ZXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHtUZWFtc1Byb3ZpZGVyfSBmcm9tICcuLi9zcmMvY29udGV4dC9UZWFtcyc7XHJcbmltcG9ydCB7Y3JlYXRlfSBmcm9tICdyZWFjdC10ZXN0LXJlbmRlcmVyJztcclxuaW1wb3J0IFRlYW1zIGZyb20gJy4uL3NyYy9zY3JlZW5zL1RlYW1zJztcclxuXHJcbmplc3QudXNlRmFrZVRpbWVycygpO1xyXG5cclxuY29uc3QgdHJlZSA9IGNyZWF0ZShcclxuICAgIDxUZWFtc1Byb3ZpZGVyPlxyXG4gICAgICAgIDxUZWFtcyAvPlxyXG4gICAgPC9UZWFtc1Byb3ZpZGVyPlxyXG4pO1xyXG5cclxuZGVzY3JpYmUoJ1RlYW1zJywgKCkgPT4ge1xyXG4gICAgdGVzdCgncmVuZGVycyBjb3JyZWN0bHknLCAoKSA9PiB7XHJcbiAgICAgICAgZXhwZWN0KHRyZWUudG9KU09OKCkpLnRvTWF0Y2hTbmFwc2hvdCgpO1xyXG4gICAgfSk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7OztBQUVBQSxJQUFJLENBQUNDLGFBQUw7QUFFQSxJQUFNQyxJQUFJLEdBQUcsSUFBQUMseUJBQUEsRUFDVCxvQkFBQyxvQkFBRCxRQUNJLG9CQUFDLGVBQUQsT0FESixDQURTLENBQWI7QUFNQUMsUUFBUSxDQUFDLE9BQUQsRUFBVSxZQUFNO0VBQ3BCQyxJQUFJLENBQUMsbUJBQUQsRUFBc0IsWUFBTTtJQUM1QkMsTUFBTSxDQUFDSixJQUFJLENBQUNLLE1BQUwsRUFBRCxDQUFOLENBQXNCQyxlQUF0QjtFQUNILENBRkcsQ0FBSjtBQUdILENBSk8sQ0FBUiJ9