4c1d17448eba7f650d8b3c33c6ee4bc7
_getJestObj().mock('axios');

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _readOnlyError2 = _interopRequireDefault(require("@babel/runtime/helpers/readOnlyError"));

var _react = _interopRequireDefault(require("react"));

var _reactTestRenderer = require("react-test-renderer");

var _Players = require("../src/context/Players");

var _Players2 = _interopRequireDefault(require("../src/screens/Players"));

function _getJestObj() {
  var _require = require("@jest/globals"),
      jest = _require.jest;

  _getJestObj = function _getJestObj() {
    return jest;
  };

  return jest;
}

jest.useFakeTimers();
var tree = (0, _reactTestRenderer.create)(_react.default.createElement(_Players.PlayersProvider, null, _react.default.createElement(_Players2.default, null)));

var _usePlayers = (0, _Players.usePlayers)(),
    getPlayers = _usePlayers.getPlayers;

describe('Players', function () {
  test('renders correctly', function () {
    (0, _reactTestRenderer.create)(_react.default.createElement(_Players2.default, null)).toJSON(), (0, _readOnlyError2.default)("tree");
    expect(tree).toMatchSnapshot();
  });
  test('get players correctly', (0, _asyncToGenerator2.default)(function* () {
    var players = yield getPlayers();
    expect(players.data.response).toEqual([]);
  }));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb2NrIiwiamVzdCIsInVzZUZha2VUaW1lcnMiLCJ0cmVlIiwiY3JlYXRlIiwidXNlUGxheWVycyIsImdldFBsYXllcnMiLCJkZXNjcmliZSIsInRlc3QiLCJ0b0pTT04iLCJleHBlY3QiLCJ0b01hdGNoU25hcHNob3QiLCJwbGF5ZXJzIiwiZGF0YSIsInJlc3BvbnNlIiwidG9FcXVhbCJdLCJzb3VyY2VzIjpbInBsYXllcnMudGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5cclxuamVzdC51c2VGYWtlVGltZXJzKCk7XHJcbmplc3QubW9jaygnYXhpb3MnKTtcclxuXHJcbmltcG9ydCB7Y3JlYXRlfSBmcm9tICdyZWFjdC10ZXN0LXJlbmRlcmVyJztcclxuaW1wb3J0IHtQbGF5ZXJzUHJvdmlkZXJ9IGZyb20gJy4uL3NyYy9jb250ZXh0L1BsYXllcnMnO1xyXG5pbXBvcnQgUGxheWVycyBmcm9tICcuLi9zcmMvc2NyZWVucy9QbGF5ZXJzJztcclxuaW1wb3J0IHt1c2VQbGF5ZXJzfSBmcm9tICcuLi9zcmMvY29udGV4dC9QbGF5ZXJzJztcclxuXHJcbmNvbnN0IHRyZWUgPSBjcmVhdGUoXHJcbiAgICA8UGxheWVyc1Byb3ZpZGVyPlxyXG4gICAgICAgIDxQbGF5ZXJzIC8+XHJcbiAgICA8L1BsYXllcnNQcm92aWRlcj5cclxuKTtcclxuXHJcbmNvbnN0IHtnZXRQbGF5ZXJzfSA9IHVzZVBsYXllcnMoKTtcclxuXHJcbmRlc2NyaWJlKCdQbGF5ZXJzJywgKCkgPT4ge1xyXG4gICAgdGVzdCgncmVuZGVycyBjb3JyZWN0bHknLCAoKSA9PiB7XHJcbiAgICAgICAgdHJlZSA9IGNyZWF0ZSg8UGxheWVycyAvPikudG9KU09OKCk7XHJcbiAgICAgICAgZXhwZWN0KHRyZWUpLnRvTWF0Y2hTbmFwc2hvdCgpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGVzdCgnZ2V0IHBsYXllcnMgY29ycmVjdGx5JywgYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHBsYXllcnMgPSBhd2FpdCBnZXRQbGF5ZXJzKCk7XHJcbiAgICAgICAgZXhwZWN0KHBsYXllcnMuZGF0YS5yZXNwb25zZSkudG9FcXVhbChbXSk7XHJcbiAgICB9KTtcclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBR0EsY0FBS0EsSUFBTCxDQUFVLE9BQVY7Ozs7Ozs7O0FBSEE7O0FBS0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7QUFMQUMsSUFBSSxDQUFDQyxhQUFMO0FBUUEsSUFBTUMsSUFBSSxHQUFHLElBQUFDLHlCQUFBLEVBQ1QsNkJBQUMsd0JBQUQsUUFDSSw2QkFBQyxpQkFBRCxPQURKLENBRFMsQ0FBYjs7QUFNQSxrQkFBcUIsSUFBQUMsbUJBQUEsR0FBckI7QUFBQSxJQUFPQyxVQUFQLGVBQU9BLFVBQVA7O0FBRUFDLFFBQVEsQ0FBQyxTQUFELEVBQVksWUFBTTtFQUN0QkMsSUFBSSxDQUFDLG1CQUFELEVBQXNCLFlBQU07SUFDckIsSUFBQUoseUJBQUEsRUFBTyw2QkFBQyxpQkFBRCxPQUFQLEVBQW9CSyxNQUFwQixFQUFQO0lBQ0FDLE1BQU0sQ0FBQ1AsSUFBRCxDQUFOLENBQWFRLGVBQWI7RUFDSCxDQUhHLENBQUo7RUFLQUgsSUFBSSxDQUFDLHVCQUFELGtDQUEwQixhQUFZO0lBQ3RDLElBQU1JLE9BQU8sU0FBU04sVUFBVSxFQUFoQztJQUNBSSxNQUFNLENBQUNFLE9BQU8sQ0FBQ0MsSUFBUixDQUFhQyxRQUFkLENBQU4sQ0FBOEJDLE9BQTlCLENBQXNDLEVBQXRDO0VBQ0gsQ0FIRyxFQUFKO0FBSUgsQ0FWTyxDQUFSIn0=