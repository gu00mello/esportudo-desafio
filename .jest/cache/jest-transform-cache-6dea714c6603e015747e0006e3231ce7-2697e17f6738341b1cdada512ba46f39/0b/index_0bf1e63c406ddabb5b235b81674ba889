dd90ce7f61db839c0e40d613c0dcf1d5
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  var desc = Object.getOwnPropertyDescriptor(m, k);

  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
    desc = {
      enumerable: true,
      get: function get() {
        return m[k];
      }
    };
  }

  Object.defineProperty(o, k2, desc);
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  }

  __setModuleDefault(result, mod);

  return result;
};

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = __importStar(require("react"));

var react_1 = require("react");

var react_native_1 = require("react-native");

var styles_1 = require("../Players/styles");

var Loading_1 = __importDefault(require("../../components/Loading"));

var Trophies_1 = require("../../context/Trophies");

var Trophies = function Trophies(_ref) {
  var navigation = _ref.navigation;

  var _ref2 = (0, Trophies_1.useTrophies)(),
      getTrophies = _ref2.getTrophies;

  var _ref3 = (0, react_1.useState)(true),
      _ref4 = (0, _slicedToArray2.default)(_ref3, 2),
      loading = _ref4[0],
      setLoading = _ref4[1];

  var _ref5 = (0, react_1.useState)([]),
      _ref6 = (0, _slicedToArray2.default)(_ref5, 2),
      trophies = _ref6[0],
      setTrophies = _ref6[1];

  (0, react_1.useEffect)(function () {
    getTrophies().then(function (response) {
      if (response.status === 200) {
        setTrophies(response.data.response);
        setLoading(false);
      } else setLoading(false);
    });
  }, []);
  return React.createElement(styles_1.StyledContainer, null, React.createElement(styles_1.StyledTeam, null, React.createElement(styles_1.StyledTableImage, {
    resizeMode: "contain",
    source: {
      uri: "https://media.api-sports.io/football/players/374.png"
    }
  }), React.createElement(styles_1.StyledTableContent, null, React.createElement(styles_1.StyledTableText, null, "You are viewing trophies from"), React.createElement(styles_1.StyledTableTitle, null, "Jo\xE3o Pedro Maturano dos Santos"), React.createElement(styles_1.StyledTableText, null, "Brazil"))), React.createElement(styles_1.Hairline, null), loading ? React.createElement(Loading_1.default, {
    name: "Trophies"
  }) : React.createElement(react_native_1.ScrollView, null, trophies.map(function (trophie, index) {
    return React.createElement(styles_1.StyledTable, {
      key: index,
      identifier: index
    }, React.createElement(styles_1.StyledTableContent, {
      width: "100%"
    }, React.createElement(styles_1.StyledTableTitle, null, trophie.league), React.createElement(styles_1.StyledTableText, null, trophie.country, " \u2022 ", trophie.season), React.createElement(styles_1.StyledTableText, null, trophie.place)));
  })));
};

exports.default = Trophies;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFVQTs7QUFDQTs7QUFFQSxJQUFNQSxRQUFRLEdBQUcsU0FBWEEsUUFBVyxPQUF3QjtFQUFBLElBQXJCQyxVQUFxQixRQUFyQkEsVUFBcUI7O0VBQ3JDLFlBQXdCLDZCQUF4QjtFQUFBLElBQVFDLFdBQVIsU0FBUUEsV0FBUjs7RUFFQSxZQUE4QixzQkFBUyxJQUFULENBQTlCO0VBQUE7RUFBQSxJQUFPQyxPQUFQO0VBQUEsSUFBZ0JDLFVBQWhCOztFQUNBLFlBQWdDLHNCQUFTLEVBQVQsQ0FBaEM7RUFBQTtFQUFBLElBQU9DLFFBQVA7RUFBQSxJQUFpQkMsV0FBakI7O0VBRUEsdUJBQVUsWUFBSztJQUNYSixXQUFXLEdBQUdLLElBQWQsQ0FBbUIsa0JBQVEsRUFBRztNQUMxQixJQUFJQyxRQUFRLENBQUNDLE1BQVQsS0FBb0IsR0FBeEIsRUFBNkI7UUFDekJILFdBQVcsQ0FBQ0UsUUFBUSxDQUFDRSxJQUFULENBQWNGLFFBQWYsQ0FBWDtRQUNBSixVQUFVLENBQUMsS0FBRCxDQUFWO01BQ0gsQ0FIRCxNQUdPQSxVQUFVLENBQUMsS0FBRCxDQUFWO0lBQ1YsQ0FMRDtFQU1ILENBUEQsRUFPRyxFQVBIO0VBU0EsT0FDSSxvQkFBQyxRQUFELENBQUMsZUFBRCxRQUNJLG9CQUFDLFFBQUQsQ0FBQyxVQUFELFFBQ0ksb0JBQUMsUUFBRCxDQUFDLGdCQUFEO0lBQ0ksVUFBVSxFQUFDLFNBRGY7SUFFSSxNQUFNLEVBQUU7TUFBRU8sR0FBRyxFQUFFO0lBQVA7RUFGWixFQURKLEVBSUksb0JBQUMsUUFBRCxDQUFDLGtCQUFELFFBQ0ksb0JBQUMsUUFBRCxDQUFDLGVBQUQsd0NBREosRUFFSSxvQkFBQyxRQUFELENBQUMsZ0JBQUQsNENBRkosRUFHSSxvQkFBQyxRQUFELENBQUMsZUFBRCxpQkFISixDQUpKLENBREosRUFXSSxvQkFBQyxRQUFELENBQUMsUUFBRCxPQVhKLEVBWUtSLE9BQU8sR0FBRyxvQkFBQyxTQUFELENBQUMsT0FBRDtJQUFRLElBQUksRUFBQztFQUFiLEVBQUgsR0FDSixvQkFBQyxjQUFELENBQUMsVUFBRCxRQUNLRSxRQUFRLENBQUNPLEdBQVQsQ0FBYSxVQUFDQyxPQUFELEVBQWVDLEtBQWYsRUFBZ0M7SUFDMUMsT0FBTyxvQkFBQyxRQUFELENBQUMsV0FBRDtNQUFhLEdBQUcsRUFBRUEsS0FBbEI7TUFBeUIsVUFBVSxFQUFFQTtJQUFyQyxHQUNILG9CQUFDLFFBQUQsQ0FBQyxrQkFBRDtNQUFvQixLQUFLLEVBQUU7SUFBM0IsR0FDSSxvQkFBQyxRQUFELENBQUMsZ0JBQUQsUUFBbUJELE9BQU8sQ0FBQ0UsTUFBM0IsQ0FESixFQUVJLG9CQUFDLFFBQUQsQ0FBQyxlQUFELFFBQWtCRixPQUFPLENBQUNHLE9BQTFCLGNBQXNDSCxPQUFPLENBQUNJLE1BQTlDLENBRkosRUFHSSxvQkFBQyxRQUFELENBQUMsZUFBRCxRQUFrQkosT0FBTyxDQUFDSyxLQUExQixDQUhKLENBREcsQ0FBUDtFQU9ILENBUkEsQ0FETCxDQWJSLENBREo7QUEyQkgsQ0ExQ0Q7O0FBNENBQyxrQkFBZW5CLFFBQWYiLCJuYW1lcyI6WyJUcm9waGllcyIsIm5hdmlnYXRpb24iLCJnZXRUcm9waGllcyIsImxvYWRpbmciLCJzZXRMb2FkaW5nIiwidHJvcGhpZXMiLCJzZXRUcm9waGllcyIsInRoZW4iLCJyZXNwb25zZSIsInN0YXR1cyIsImRhdGEiLCJ1cmkiLCJtYXAiLCJ0cm9waGllIiwiaW5kZXgiLCJsZWFndWUiLCJjb3VudHJ5Iiwic2Vhc29uIiwicGxhY2UiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiRDpcXHByb2plY3RzXFxFc3BvcnR1ZG9cXHNyY1xcc2NyZWVuc1xcVHJvcGhpZXNcXGluZGV4LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyAgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgU2Nyb2xsVmlldyB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XHJcbmltcG9ydCB7XHJcbiAgICBTdHlsZWRDb250YWluZXIsXHJcbiAgICBTdHlsZWRUYWJsZSxcclxuICAgIFN0eWxlZFRhYmxlQ29udGVudCxcclxuICAgIFN0eWxlZFRhYmxlVGl0bGUsXHJcbiAgICBTdHlsZWRUYWJsZUltYWdlLFxyXG4gICAgU3R5bGVkVGFibGVUZXh0LFxyXG4gICAgSGFpcmxpbmUsXHJcbiAgICBTdHlsZWRUZWFtXHJcbn0gZnJvbSAnLi4vUGxheWVycy9zdHlsZXMnO1xyXG5pbXBvcnQgTG9hZGVyIGZyb20gXCIuLi8uLi9jb21wb25lbnRzL0xvYWRpbmdcIjtcclxuaW1wb3J0IHsgdXNlVHJvcGhpZXMgfSBmcm9tIFwiLi4vLi4vY29udGV4dC9Ucm9waGllc1wiO1xyXG5cclxuY29uc3QgVHJvcGhpZXMgPSAoeyBuYXZpZ2F0aW9uIH06IGFueSkgPT4ge1xyXG4gICAgY29uc3QgeyBnZXRUcm9waGllcyB9ID0gdXNlVHJvcGhpZXMoKTtcclxuXHJcbiAgICBjb25zdCBbbG9hZGluZywgc2V0TG9hZGluZ10gPSB1c2VTdGF0ZSh0cnVlKTtcclxuICAgIGNvbnN0IFt0cm9waGllcywgc2V0VHJvcGhpZXNdID0gdXNlU3RhdGUoW10pO1xyXG5cclxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgZ2V0VHJvcGhpZXMoKS50aGVuKHJlc3BvbnNlID0+IHtcclxuICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwKSB7XHJcbiAgICAgICAgICAgICAgICBzZXRUcm9waGllcyhyZXNwb25zZS5kYXRhLnJlc3BvbnNlKTtcclxuICAgICAgICAgICAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xyXG4gICAgICAgICAgICB9IGVsc2Ugc2V0TG9hZGluZyhmYWxzZSk7XHJcbiAgICAgICAgfSlcclxuICAgIH0sIFtdKTtcclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxTdHlsZWRDb250YWluZXI+XHJcbiAgICAgICAgICAgIDxTdHlsZWRUZWFtPlxyXG4gICAgICAgICAgICAgICAgPFN0eWxlZFRhYmxlSW1hZ2VcclxuICAgICAgICAgICAgICAgICAgICByZXNpemVNb2RlPVwiY29udGFpblwiXHJcbiAgICAgICAgICAgICAgICAgICAgc291cmNlPXt7IHVyaTogXCJodHRwczovL21lZGlhLmFwaS1zcG9ydHMuaW8vZm9vdGJhbGwvcGxheWVycy8zNzQucG5nXCIgfX0gLz5cclxuICAgICAgICAgICAgICAgIDxTdHlsZWRUYWJsZUNvbnRlbnQ+XHJcbiAgICAgICAgICAgICAgICAgICAgPFN0eWxlZFRhYmxlVGV4dD5Zb3UgYXJlIHZpZXdpbmcgdHJvcGhpZXMgZnJvbTwvU3R5bGVkVGFibGVUZXh0PlxyXG4gICAgICAgICAgICAgICAgICAgIDxTdHlsZWRUYWJsZVRpdGxlPkpvw6NvIFBlZHJvIE1hdHVyYW5vIGRvcyBTYW50b3M8L1N0eWxlZFRhYmxlVGl0bGU+XHJcbiAgICAgICAgICAgICAgICAgICAgPFN0eWxlZFRhYmxlVGV4dD5CcmF6aWw8L1N0eWxlZFRhYmxlVGV4dD5cclxuICAgICAgICAgICAgICAgIDwvU3R5bGVkVGFibGVDb250ZW50PlxyXG4gICAgICAgICAgICA8L1N0eWxlZFRlYW0+XHJcbiAgICAgICAgICAgIDxIYWlybGluZSAvPlxyXG4gICAgICAgICAgICB7bG9hZGluZyA/IDxMb2FkZXIgbmFtZT1cIlRyb3BoaWVzXCIgLz4gOlxyXG4gICAgICAgICAgICAgICAgPFNjcm9sbFZpZXc+XHJcbiAgICAgICAgICAgICAgICAgICAge3Ryb3BoaWVzLm1hcCgodHJvcGhpZTogYW55LCBpbmRleDogbnVtYmVyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiA8U3R5bGVkVGFibGUga2V5PXtpbmRleH0gaWRlbnRpZmllcj17aW5kZXh9PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPFN0eWxlZFRhYmxlQ29udGVudCB3aWR0aD17XCIxMDAlXCJ9PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxTdHlsZWRUYWJsZVRpdGxlPnt0cm9waGllLmxlYWd1ZX08L1N0eWxlZFRhYmxlVGl0bGU+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPFN0eWxlZFRhYmxlVGV4dD57dHJvcGhpZS5jb3VudHJ5fSDigKIge3Ryb3BoaWUuc2Vhc29ufTwvU3R5bGVkVGFibGVUZXh0PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxTdHlsZWRUYWJsZVRleHQ+e3Ryb3BoaWUucGxhY2V9PC9TdHlsZWRUYWJsZVRleHQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1N0eWxlZFRhYmxlQ29udGVudD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9TdHlsZWRUYWJsZT5cclxuICAgICAgICAgICAgICAgICAgICB9KX1cclxuICAgICAgICAgICAgICAgIDwvU2Nyb2xsVmlldz59XHJcbiAgICAgICAgPC9TdHlsZWRDb250YWluZXI+XHJcbiAgICApO1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBUcm9waGllczsiXX0=