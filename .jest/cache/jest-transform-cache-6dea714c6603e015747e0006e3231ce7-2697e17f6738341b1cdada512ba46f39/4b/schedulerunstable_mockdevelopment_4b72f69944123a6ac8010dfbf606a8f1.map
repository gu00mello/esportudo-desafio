{"version":3,"names":["enableSchedulerDebugging","enableProfiling","push","heap","node","index","length","siftUp","peek","pop","first","last","siftDown","i","parentIndex","parent","compare","halfLength","leftIndex","left","rightIndex","right","a","b","diff","sortIndex","id","ImmediatePriority","UserBlockingPriority","NormalPriority","LowPriority","IdlePriority","markTaskErrored","task","ms","maxSigned31BitInt","IMMEDIATE_PRIORITY_TIMEOUT","USER_BLOCKING_PRIORITY_TIMEOUT","NORMAL_PRIORITY_TIMEOUT","LOW_PRIORITY_TIMEOUT","IDLE_PRIORITY_TIMEOUT","taskQueue","timerQueue","taskIdCounter","currentTask","currentPriorityLevel","isPerformingWork","isHostCallbackScheduled","isHostTimeoutScheduled","currentMockTime","scheduledCallback","scheduledTimeout","timeoutTime","yieldedValues","expectedNumberOfYields","didStop","isFlushing","needsPaint","shouldYieldForPaint","disableYieldValue","setDisableYieldValue","newValue","advanceTimers","currentTime","timer","callback","startTime","expirationTime","handleTimeout","requestHostCallback","flushWork","firstTimer","requestHostTimeout","hasTimeRemaining","initialTime","cancelHostTimeout","previousPriorityLevel","workLoop","error","getCurrentTime","isQueued","shouldYieldToHost","priorityLevel","didUserCallbackTimeout","continuationCallback","unstable_runWithPriority","eventHandler","unstable_next","unstable_wrapCallback","parentPriorityLevel","apply","arguments","unstable_scheduleCallback","options","delay","timeout","newTask","unstable_pauseExecution","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_cancelCallback","unstable_getCurrentPriorityLevel","forceFrameRate","reset","Error","unstable_flushNumberOfYields","count","cb","hasMoreWork","unstable_flushUntilNextPaint","unstable_flushExpired","unstable_flushAllWithoutAsserting","unstable_clearYields","values","unstable_flushAll","unstable_yieldValue","value","console","log","name","unstable_advanceTime","requestPaint","unstable_Profiling","exports","unstable_IdlePriority","unstable_ImmediatePriority","unstable_LowPriority","unstable_NormalPriority","unstable_UserBlockingPriority","unstable_forceFrameRate","unstable_now","unstable_requestPaint","unstable_setDisableYieldValue","unstable_shouldYield"],"sources":["scheduler-unstable_mock.development.js"],"sourcesContent":["/**\n * @license React\n * scheduler-unstable_mock.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar enableSchedulerDebugging = false;\nvar enableProfiling = false;\n\nfunction push(heap, node) {\n  var index = heap.length;\n  heap.push(node);\n  siftUp(heap, node, index);\n}\nfunction peek(heap) {\n  return heap.length === 0 ? null : heap[0];\n}\nfunction pop(heap) {\n  if (heap.length === 0) {\n    return null;\n  }\n\n  var first = heap[0];\n  var last = heap.pop();\n\n  if (last !== first) {\n    heap[0] = last;\n    siftDown(heap, last, 0);\n  }\n\n  return first;\n}\n\nfunction siftUp(heap, node, i) {\n  var index = i;\n\n  while (index > 0) {\n    var parentIndex = index - 1 >>> 1;\n    var parent = heap[parentIndex];\n\n    if (compare(parent, node) > 0) {\n      // The parent is larger. Swap positions.\n      heap[parentIndex] = node;\n      heap[index] = parent;\n      index = parentIndex;\n    } else {\n      // The parent is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction siftDown(heap, node, i) {\n  var index = i;\n  var length = heap.length;\n  var halfLength = length >>> 1;\n\n  while (index < halfLength) {\n    var leftIndex = (index + 1) * 2 - 1;\n    var left = heap[leftIndex];\n    var rightIndex = leftIndex + 1;\n    var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.\n\n    if (compare(left, node) < 0) {\n      if (rightIndex < length && compare(right, left) < 0) {\n        heap[index] = right;\n        heap[rightIndex] = node;\n        index = rightIndex;\n      } else {\n        heap[index] = left;\n        heap[leftIndex] = node;\n        index = leftIndex;\n      }\n    } else if (rightIndex < length && compare(right, node) < 0) {\n      heap[index] = right;\n      heap[rightIndex] = node;\n      index = rightIndex;\n    } else {\n      // Neither child is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction compare(a, b) {\n  // Compare sort index first, then task id.\n  var diff = a.sortIndex - b.sortIndex;\n  return diff !== 0 ? diff : a.id - b.id;\n}\n\n// TODO: Use symbols?\nvar ImmediatePriority = 1;\nvar UserBlockingPriority = 2;\nvar NormalPriority = 3;\nvar LowPriority = 4;\nvar IdlePriority = 5;\n\nfunction markTaskErrored(task, ms) {\n}\n\n/* eslint-disable no-var */\n// Math.pow(2, 30) - 1\n// 0b111111111111111111111111111111\n\nvar maxSigned31BitInt = 1073741823; // Times out immediately\n\nvar IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out\n\nvar USER_BLOCKING_PRIORITY_TIMEOUT = 250;\nvar NORMAL_PRIORITY_TIMEOUT = 5000;\nvar LOW_PRIORITY_TIMEOUT = 10000; // Never times out\n\nvar IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap\n\nvar taskQueue = [];\nvar timerQueue = []; // Incrementing id counter. Used to maintain insertion order.\n\nvar taskIdCounter = 1; // Pausing the scheduler is useful for debugging.\nvar currentTask = null;\nvar currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrance.\n\nvar isPerformingWork = false;\nvar isHostCallbackScheduled = false;\nvar isHostTimeoutScheduled = false;\nvar currentMockTime = 0;\nvar scheduledCallback = null;\nvar scheduledTimeout = null;\nvar timeoutTime = -1;\nvar yieldedValues = null;\nvar expectedNumberOfYields = -1;\nvar didStop = false;\nvar isFlushing = false;\nvar needsPaint = false;\nvar shouldYieldForPaint = false;\nvar disableYieldValue = false;\n\nfunction setDisableYieldValue(newValue) {\n  disableYieldValue = newValue;\n}\n\nfunction advanceTimers(currentTime) {\n  // Check for tasks that are no longer delayed and add them to the queue.\n  var timer = peek(timerQueue);\n\n  while (timer !== null) {\n    if (timer.callback === null) {\n      // Timer was cancelled.\n      pop(timerQueue);\n    } else if (timer.startTime <= currentTime) {\n      // Timer fired. Transfer to the task queue.\n      pop(timerQueue);\n      timer.sortIndex = timer.expirationTime;\n      push(taskQueue, timer);\n    } else {\n      // Remaining timers are pending.\n      return;\n    }\n\n    timer = peek(timerQueue);\n  }\n}\n\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = false;\n  advanceTimers(currentTime);\n\n  if (!isHostCallbackScheduled) {\n    if (peek(taskQueue) !== null) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    } else {\n      var firstTimer = peek(timerQueue);\n\n      if (firstTimer !== null) {\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n      }\n    }\n  }\n}\n\nfunction flushWork(hasTimeRemaining, initialTime) {\n\n\n  isHostCallbackScheduled = false;\n\n  if (isHostTimeoutScheduled) {\n    // We scheduled a timeout but it's no longer needed. Cancel it.\n    isHostTimeoutScheduled = false;\n    cancelHostTimeout();\n  }\n\n  isPerformingWork = true;\n  var previousPriorityLevel = currentPriorityLevel;\n\n  try {\n    if (enableProfiling) {\n      try {\n        return workLoop(hasTimeRemaining, initialTime);\n      } catch (error) {\n        if (currentTask !== null) {\n          var currentTime = getCurrentTime();\n          markTaskErrored(currentTask, currentTime);\n          currentTask.isQueued = false;\n        }\n\n        throw error;\n      }\n    } else {\n      // No catch in prod code path.\n      return workLoop(hasTimeRemaining, initialTime);\n    }\n  } finally {\n    currentTask = null;\n    currentPriorityLevel = previousPriorityLevel;\n    isPerformingWork = false;\n  }\n}\n\nfunction workLoop(hasTimeRemaining, initialTime) {\n  var currentTime = initialTime;\n  advanceTimers(currentTime);\n  currentTask = peek(taskQueue);\n\n  while (currentTask !== null && !(enableSchedulerDebugging )) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      // This currentTask hasn't expired, and we've reached the deadline.\n      break;\n    }\n\n    var callback = currentTask.callback;\n\n    if (typeof callback === 'function') {\n      currentTask.callback = null;\n      currentPriorityLevel = currentTask.priorityLevel;\n      var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n\n      var continuationCallback = callback(didUserCallbackTimeout);\n      currentTime = getCurrentTime();\n\n      if (typeof continuationCallback === 'function') {\n        currentTask.callback = continuationCallback;\n      } else {\n\n        if (currentTask === peek(taskQueue)) {\n          pop(taskQueue);\n        }\n      }\n\n      advanceTimers(currentTime);\n    } else {\n      pop(taskQueue);\n    }\n\n    currentTask = peek(taskQueue);\n  } // Return whether there's additional work\n\n\n  if (currentTask !== null) {\n    return true;\n  } else {\n    var firstTimer = peek(timerQueue);\n\n    if (firstTimer !== null) {\n      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n\n    return false;\n  }\n}\n\nfunction unstable_runWithPriority(priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n    case LowPriority:\n    case IdlePriority:\n      break;\n\n    default:\n      priorityLevel = NormalPriority;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_next(eventHandler) {\n  var priorityLevel;\n\n  switch (currentPriorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n      // Shift down to normal priority\n      priorityLevel = NormalPriority;\n      break;\n\n    default:\n      // Anything lower than normal priority should remain at the current level.\n      priorityLevel = currentPriorityLevel;\n      break;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_wrapCallback(callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function () {\n    // This is a fork of runWithPriority, inlined for performance.\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n}\n\nfunction unstable_scheduleCallback(priorityLevel, callback, options) {\n  var currentTime = getCurrentTime();\n  var startTime;\n\n  if (typeof options === 'object' && options !== null) {\n    var delay = options.delay;\n\n    if (typeof delay === 'number' && delay > 0) {\n      startTime = currentTime + delay;\n    } else {\n      startTime = currentTime;\n    }\n  } else {\n    startTime = currentTime;\n  }\n\n  var timeout;\n\n  switch (priorityLevel) {\n    case ImmediatePriority:\n      timeout = IMMEDIATE_PRIORITY_TIMEOUT;\n      break;\n\n    case UserBlockingPriority:\n      timeout = USER_BLOCKING_PRIORITY_TIMEOUT;\n      break;\n\n    case IdlePriority:\n      timeout = IDLE_PRIORITY_TIMEOUT;\n      break;\n\n    case LowPriority:\n      timeout = LOW_PRIORITY_TIMEOUT;\n      break;\n\n    case NormalPriority:\n    default:\n      timeout = NORMAL_PRIORITY_TIMEOUT;\n      break;\n  }\n\n  var expirationTime = startTime + timeout;\n  var newTask = {\n    id: taskIdCounter++,\n    callback: callback,\n    priorityLevel: priorityLevel,\n    startTime: startTime,\n    expirationTime: expirationTime,\n    sortIndex: -1\n  };\n\n  if (startTime > currentTime) {\n    // This is a delayed task.\n    newTask.sortIndex = startTime;\n    push(timerQueue, newTask);\n\n    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {\n      // All tasks are delayed, and this is the task with the earliest delay.\n      if (isHostTimeoutScheduled) {\n        // Cancel an existing timeout.\n        cancelHostTimeout();\n      } else {\n        isHostTimeoutScheduled = true;\n      } // Schedule a timeout.\n\n\n      requestHostTimeout(handleTimeout, startTime - currentTime);\n    }\n  } else {\n    newTask.sortIndex = expirationTime;\n    push(taskQueue, newTask);\n    // wait until the next time we yield.\n\n\n    if (!isHostCallbackScheduled && !isPerformingWork) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    }\n  }\n\n  return newTask;\n}\n\nfunction unstable_pauseExecution() {\n}\n\nfunction unstable_continueExecution() {\n\n  if (!isHostCallbackScheduled && !isPerformingWork) {\n    isHostCallbackScheduled = true;\n    requestHostCallback(flushWork);\n  }\n}\n\nfunction unstable_getFirstCallbackNode() {\n  return peek(taskQueue);\n}\n\nfunction unstable_cancelCallback(task) {\n  // remove from the queue because you can't remove arbitrary nodes from an\n  // array based heap, only the first one.)\n\n\n  task.callback = null;\n}\n\nfunction unstable_getCurrentPriorityLevel() {\n  return currentPriorityLevel;\n}\n\nfunction requestHostCallback(callback) {\n  scheduledCallback = callback;\n}\n\nfunction requestHostTimeout(callback, ms) {\n  scheduledTimeout = callback;\n  timeoutTime = currentMockTime + ms;\n}\n\nfunction cancelHostTimeout() {\n  scheduledTimeout = null;\n  timeoutTime = -1;\n}\n\nfunction shouldYieldToHost() {\n  if (expectedNumberOfYields === 0 && yieldedValues === null || expectedNumberOfYields !== -1 && yieldedValues !== null && yieldedValues.length >= expectedNumberOfYields || shouldYieldForPaint && needsPaint) {\n    // We yielded at least as many values as expected. Stop flushing.\n    didStop = true;\n    return true;\n  }\n\n  return false;\n}\n\nfunction getCurrentTime() {\n  return currentMockTime;\n}\n\nfunction forceFrameRate() {// No-op\n}\n\nfunction reset() {\n  if (isFlushing) {\n    throw new Error('Cannot reset while already flushing work.');\n  }\n\n  currentMockTime = 0;\n  scheduledCallback = null;\n  scheduledTimeout = null;\n  timeoutTime = -1;\n  yieldedValues = null;\n  expectedNumberOfYields = -1;\n  didStop = false;\n  isFlushing = false;\n  needsPaint = false;\n} // Should only be used via an assertion helper that inspects the yielded values.\n\n\nfunction unstable_flushNumberOfYields(count) {\n  if (isFlushing) {\n    throw new Error('Already flushing work.');\n  }\n\n  if (scheduledCallback !== null) {\n    var cb = scheduledCallback;\n    expectedNumberOfYields = count;\n    isFlushing = true;\n\n    try {\n      var hasMoreWork = true;\n\n      do {\n        hasMoreWork = cb(true, currentMockTime);\n      } while (hasMoreWork && !didStop);\n\n      if (!hasMoreWork) {\n        scheduledCallback = null;\n      }\n    } finally {\n      expectedNumberOfYields = -1;\n      didStop = false;\n      isFlushing = false;\n    }\n  }\n}\n\nfunction unstable_flushUntilNextPaint() {\n  if (isFlushing) {\n    throw new Error('Already flushing work.');\n  }\n\n  if (scheduledCallback !== null) {\n    var cb = scheduledCallback;\n    shouldYieldForPaint = true;\n    needsPaint = false;\n    isFlushing = true;\n\n    try {\n      var hasMoreWork = true;\n\n      do {\n        hasMoreWork = cb(true, currentMockTime);\n      } while (hasMoreWork && !didStop);\n\n      if (!hasMoreWork) {\n        scheduledCallback = null;\n      }\n    } finally {\n      shouldYieldForPaint = false;\n      didStop = false;\n      isFlushing = false;\n    }\n  }\n}\n\nfunction unstable_flushExpired() {\n  if (isFlushing) {\n    throw new Error('Already flushing work.');\n  }\n\n  if (scheduledCallback !== null) {\n    isFlushing = true;\n\n    try {\n      var hasMoreWork = scheduledCallback(false, currentMockTime);\n\n      if (!hasMoreWork) {\n        scheduledCallback = null;\n      }\n    } finally {\n      isFlushing = false;\n    }\n  }\n}\n\nfunction unstable_flushAllWithoutAsserting() {\n  // Returns false if no work was flushed.\n  if (isFlushing) {\n    throw new Error('Already flushing work.');\n  }\n\n  if (scheduledCallback !== null) {\n    var cb = scheduledCallback;\n    isFlushing = true;\n\n    try {\n      var hasMoreWork = true;\n\n      do {\n        hasMoreWork = cb(true, currentMockTime);\n      } while (hasMoreWork);\n\n      if (!hasMoreWork) {\n        scheduledCallback = null;\n      }\n\n      return true;\n    } finally {\n      isFlushing = false;\n    }\n  } else {\n    return false;\n  }\n}\n\nfunction unstable_clearYields() {\n  if (yieldedValues === null) {\n    return [];\n  }\n\n  var values = yieldedValues;\n  yieldedValues = null;\n  return values;\n}\n\nfunction unstable_flushAll() {\n  if (yieldedValues !== null) {\n    throw new Error('Log is not empty. Assert on the log of yielded values before ' + 'flushing additional work.');\n  }\n\n  unstable_flushAllWithoutAsserting();\n\n  if (yieldedValues !== null) {\n    throw new Error('While flushing work, something yielded a value. Use an ' + 'assertion helper to assert on the log of yielded values, e.g. ' + 'expect(Scheduler).toFlushAndYield([...])');\n  }\n}\n\nfunction unstable_yieldValue(value) {\n  // eslint-disable-next-line react-internal/no-production-logging\n  if (console.log.name === 'disabledLog' || disableYieldValue) {\n    // If console.log has been patched, we assume we're in render\n    // replaying and we ignore any values yielding in the second pass.\n    return;\n  }\n\n  if (yieldedValues === null) {\n    yieldedValues = [value];\n  } else {\n    yieldedValues.push(value);\n  }\n}\n\nfunction unstable_advanceTime(ms) {\n  // eslint-disable-next-line react-internal/no-production-logging\n  if (console.log.name === 'disabledLog' || disableYieldValue) {\n    // If console.log has been patched, we assume we're in render\n    // replaying and we ignore any time advancing in the second pass.\n    return;\n  }\n\n  currentMockTime += ms;\n\n  if (scheduledTimeout !== null && timeoutTime <= currentMockTime) {\n    scheduledTimeout(currentMockTime);\n    timeoutTime = -1;\n    scheduledTimeout = null;\n  }\n}\n\nfunction requestPaint() {\n  needsPaint = true;\n}\nvar unstable_Profiling =  null;\n\nexports.reset = reset;\nexports.unstable_IdlePriority = IdlePriority;\nexports.unstable_ImmediatePriority = ImmediatePriority;\nexports.unstable_LowPriority = LowPriority;\nexports.unstable_NormalPriority = NormalPriority;\nexports.unstable_Profiling = unstable_Profiling;\nexports.unstable_UserBlockingPriority = UserBlockingPriority;\nexports.unstable_advanceTime = unstable_advanceTime;\nexports.unstable_cancelCallback = unstable_cancelCallback;\nexports.unstable_clearYields = unstable_clearYields;\nexports.unstable_continueExecution = unstable_continueExecution;\nexports.unstable_flushAll = unstable_flushAll;\nexports.unstable_flushAllWithoutAsserting = unstable_flushAllWithoutAsserting;\nexports.unstable_flushExpired = unstable_flushExpired;\nexports.unstable_flushNumberOfYields = unstable_flushNumberOfYields;\nexports.unstable_flushUntilNextPaint = unstable_flushUntilNextPaint;\nexports.unstable_forceFrameRate = forceFrameRate;\nexports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;\nexports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;\nexports.unstable_next = unstable_next;\nexports.unstable_now = getCurrentTime;\nexports.unstable_pauseExecution = unstable_pauseExecution;\nexports.unstable_requestPaint = requestPaint;\nexports.unstable_runWithPriority = unstable_runWithPriority;\nexports.unstable_scheduleCallback = unstable_scheduleCallback;\nexports.unstable_setDisableYieldValue = setDisableYieldValue;\nexports.unstable_shouldYield = shouldYieldToHost;\nexports.unstable_wrapCallback = unstable_wrapCallback;\nexports.unstable_yieldValue = unstable_yieldValue;\n  })();\n}\n"],"mappings":"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"}