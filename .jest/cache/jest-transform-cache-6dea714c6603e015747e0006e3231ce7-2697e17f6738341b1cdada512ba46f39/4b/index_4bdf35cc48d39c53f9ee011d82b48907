dde0914f52c229ad5f086bef74e7b662
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  var desc = Object.getOwnPropertyDescriptor(m, k);

  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
    desc = {
      enumerable: true,
      get: function get() {
        return m[k];
      }
    };
  }

  Object.defineProperty(o, k2, desc);
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  }

  __setModuleDefault(result, mod);

  return result;
};

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = __importStar(require("react"));

var react_1 = require("react");

var react_native_1 = require("react-native");

var styles_1 = require("../Players/styles");

var Loading_1 = __importDefault(require("../../components/Loading"));

var Teams_1 = require("../../context/Teams");

var Teams = function Teams(_ref) {
  var navigation = _ref.navigation;

  var _ref2 = (0, Teams_1.useTeams)(),
      getTeams = _ref2.getTeams;

  var _ref3 = (0, react_1.useState)(true),
      _ref4 = (0, _slicedToArray2.default)(_ref3, 2),
      loading = _ref4[0],
      setLoading = _ref4[1];

  var _ref5 = (0, react_1.useState)([]),
      _ref6 = (0, _slicedToArray2.default)(_ref5, 2),
      teams = _ref6[0],
      setTeams = _ref6[1];

  (0, react_1.useEffect)(function () {
    getTeams().then(function (response) {
      if (response.status === 200) {
        setTeams(response.data.response);
        setLoading(false);
      } else setLoading(false);
    });
  }, []);
  return React.createElement(styles_1.StyledContainer, null, React.createElement(styles_1.StyledTeam, null, React.createElement(styles_1.StyledTableImage, {
    resizeMode: "contain",
    source: {
      uri: "https://media.api-sports.io/football/leagues/3.png"
    }
  }), React.createElement(styles_1.StyledTableContent, null, React.createElement(styles_1.StyledTableText, null, "You are viewing teams from"), React.createElement(styles_1.StyledTableTitle, null, "UEFA Europa League"), React.createElement(styles_1.StyledTableText, null, "Cup \u2022 World"))), React.createElement(styles_1.Hairline, null), loading ? React.createElement(Loading_1.default, {
    name: "Teams"
  }) : React.createElement(react_native_1.ScrollView, null, teams.map(function (team, index) {
    return React.createElement(styles_1.StyledTable, {
      key: index,
      identifier: index
    }, React.createElement(styles_1.StyledTableImage, {
      resizeMode: "contain",
      source: {
        uri: team.team.logo
      }
    }), React.createElement(styles_1.StyledTableContent, {
      width: "100%"
    }, React.createElement(styles_1.StyledTableTitle, null, team.team.name), React.createElement(styles_1.StyledTableText, null, team.team.country, " \u2022 ", team.venue.city)));
  })));
};

exports.default = Teams;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFVQTs7QUFDQTs7QUFFQSxJQUFNQSxLQUFLLEdBQUcsU0FBUkEsS0FBUSxPQUF3QjtFQUFBLElBQXJCQyxVQUFxQixRQUFyQkEsVUFBcUI7O0VBQ2xDLFlBQXFCLHVCQUFyQjtFQUFBLElBQVFDLFFBQVIsU0FBUUEsUUFBUjs7RUFFQSxZQUE4QixzQkFBUyxJQUFULENBQTlCO0VBQUE7RUFBQSxJQUFPQyxPQUFQO0VBQUEsSUFBZ0JDLFVBQWhCOztFQUNBLFlBQTBCLHNCQUFTLEVBQVQsQ0FBMUI7RUFBQTtFQUFBLElBQU9DLEtBQVA7RUFBQSxJQUFjQyxRQUFkOztFQUVBLHVCQUFVLFlBQUs7SUFDWEosUUFBUSxHQUFHSyxJQUFYLENBQWdCLGtCQUFRLEVBQUc7TUFDdkIsSUFBSUMsUUFBUSxDQUFDQyxNQUFULEtBQW9CLEdBQXhCLEVBQTZCO1FBQ3pCSCxRQUFRLENBQUNFLFFBQVEsQ0FBQ0UsSUFBVCxDQUFjRixRQUFmLENBQVI7UUFDQUosVUFBVSxDQUFDLEtBQUQsQ0FBVjtNQUNILENBSEQsTUFHT0EsVUFBVSxDQUFDLEtBQUQsQ0FBVjtJQUNWLENBTEQ7RUFNSCxDQVBELEVBT0csRUFQSDtFQVNBLE9BQ0ksb0JBQUMsUUFBRCxDQUFDLGVBQUQsUUFDSSxvQkFBQyxRQUFELENBQUMsVUFBRCxRQUNJLG9CQUFDLFFBQUQsQ0FBQyxnQkFBRDtJQUNJLFVBQVUsRUFBQyxTQURmO0lBRUksTUFBTSxFQUFFO01BQUVPLEdBQUcsRUFBRTtJQUFQO0VBRlosRUFESixFQUlJLG9CQUFDLFFBQUQsQ0FBQyxrQkFBRCxRQUNJLG9CQUFDLFFBQUQsQ0FBQyxlQUFELHFDQURKLEVBRUksb0JBQUMsUUFBRCxDQUFDLGdCQUFELDZCQUZKLEVBR0ksb0JBQUMsUUFBRCxDQUFDLGVBQUQsMkJBSEosQ0FKSixDQURKLEVBV0ksb0JBQUMsUUFBRCxDQUFDLFFBQUQsT0FYSixFQVlLUixPQUFPLEdBQUcsb0JBQUMsU0FBRCxDQUFDLE9BQUQ7SUFBUSxJQUFJLEVBQUM7RUFBYixFQUFILEdBQ0osb0JBQUMsY0FBRCxDQUFDLFVBQUQsUUFDS0UsS0FBSyxDQUFDTyxHQUFOLENBQVUsVUFBQ0MsSUFBRCxFQUFZQyxLQUFaLEVBQTZCO0lBQ3BDLE9BQU8sb0JBQUMsUUFBRCxDQUFDLFdBQUQ7TUFBYSxHQUFHLEVBQUVBLEtBQWxCO01BQXlCLFVBQVUsRUFBRUE7SUFBckMsR0FDSCxvQkFBQyxRQUFELENBQUMsZ0JBQUQ7TUFDSSxVQUFVLEVBQUMsU0FEZjtNQUVJLE1BQU0sRUFBRTtRQUFFSCxHQUFHLEVBQUVFLElBQUksQ0FBQ0EsSUFBTCxDQUFVRTtNQUFqQjtJQUZaLEVBREcsRUFJSCxvQkFBQyxRQUFELENBQUMsa0JBQUQ7TUFBb0IsS0FBSyxFQUFFO0lBQTNCLEdBQ0ksb0JBQUMsUUFBRCxDQUFDLGdCQUFELFFBQW1CRixJQUFJLENBQUNBLElBQUwsQ0FBVUcsSUFBN0IsQ0FESixFQUVJLG9CQUFDLFFBQUQsQ0FBQyxlQUFELFFBQWtCSCxJQUFJLENBQUNBLElBQUwsQ0FBVUksT0FBNUIsY0FBd0NKLElBQUksQ0FBQ0ssS0FBTCxDQUFXQyxJQUFuRCxDQUZKLENBSkcsQ0FBUDtFQVNILENBVkEsQ0FETCxDQWJSLENBREo7QUE2QkgsQ0E1Q0Q7O0FBOENBQyxrQkFBZXBCLEtBQWYiLCJuYW1lcyI6WyJUZWFtcyIsIm5hdmlnYXRpb24iLCJnZXRUZWFtcyIsImxvYWRpbmciLCJzZXRMb2FkaW5nIiwidGVhbXMiLCJzZXRUZWFtcyIsInRoZW4iLCJyZXNwb25zZSIsInN0YXR1cyIsImRhdGEiLCJ1cmkiLCJtYXAiLCJ0ZWFtIiwiaW5kZXgiLCJsb2dvIiwibmFtZSIsImNvdW50cnkiLCJ2ZW51ZSIsImNpdHkiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiRDpcXHByb2plY3RzXFxFc3BvcnR1ZG9cXHNyY1xcc2NyZWVuc1xcVGVhbXNcXGluZGV4LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyAgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgU2Nyb2xsVmlldyB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XHJcbmltcG9ydCB7XHJcbiAgICBTdHlsZWRDb250YWluZXIsXHJcbiAgICBTdHlsZWRUYWJsZSxcclxuICAgIFN0eWxlZFRhYmxlQ29udGVudCxcclxuICAgIFN0eWxlZFRhYmxlVGl0bGUsXHJcbiAgICBTdHlsZWRUYWJsZUltYWdlLFxyXG4gICAgU3R5bGVkVGFibGVUZXh0LFxyXG4gICAgSGFpcmxpbmUsXHJcbiAgICBTdHlsZWRUZWFtXHJcbn0gZnJvbSAnLi4vUGxheWVycy9zdHlsZXMnO1xyXG5pbXBvcnQgTG9hZGVyIGZyb20gXCIuLi8uLi9jb21wb25lbnRzL0xvYWRpbmdcIjtcclxuaW1wb3J0IHsgdXNlVGVhbXMgfSBmcm9tIFwiLi4vLi4vY29udGV4dC9UZWFtc1wiO1xyXG5cclxuY29uc3QgVGVhbXMgPSAoeyBuYXZpZ2F0aW9uIH06IGFueSkgPT4ge1xyXG4gICAgY29uc3QgeyBnZXRUZWFtcyB9ID0gdXNlVGVhbXMoKTtcclxuXHJcbiAgICBjb25zdCBbbG9hZGluZywgc2V0TG9hZGluZ10gPSB1c2VTdGF0ZSh0cnVlKTtcclxuICAgIGNvbnN0IFt0ZWFtcywgc2V0VGVhbXNdID0gdXNlU3RhdGUoW10pO1xyXG5cclxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgZ2V0VGVhbXMoKS50aGVuKHJlc3BvbnNlID0+IHtcclxuICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwKSB7XHJcbiAgICAgICAgICAgICAgICBzZXRUZWFtcyhyZXNwb25zZS5kYXRhLnJlc3BvbnNlKTtcclxuICAgICAgICAgICAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xyXG4gICAgICAgICAgICB9IGVsc2Ugc2V0TG9hZGluZyhmYWxzZSk7XHJcbiAgICAgICAgfSlcclxuICAgIH0sIFtdKTtcclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxTdHlsZWRDb250YWluZXI+XHJcbiAgICAgICAgICAgIDxTdHlsZWRUZWFtPlxyXG4gICAgICAgICAgICAgICAgPFN0eWxlZFRhYmxlSW1hZ2VcclxuICAgICAgICAgICAgICAgICAgICByZXNpemVNb2RlPVwiY29udGFpblwiXHJcbiAgICAgICAgICAgICAgICAgICAgc291cmNlPXt7IHVyaTogXCJodHRwczovL21lZGlhLmFwaS1zcG9ydHMuaW8vZm9vdGJhbGwvbGVhZ3Vlcy8zLnBuZ1wiIH19IC8+XHJcbiAgICAgICAgICAgICAgICA8U3R5bGVkVGFibGVDb250ZW50PlxyXG4gICAgICAgICAgICAgICAgICAgIDxTdHlsZWRUYWJsZVRleHQ+WW91IGFyZSB2aWV3aW5nIHRlYW1zIGZyb208L1N0eWxlZFRhYmxlVGV4dD5cclxuICAgICAgICAgICAgICAgICAgICA8U3R5bGVkVGFibGVUaXRsZT5VRUZBIEV1cm9wYSBMZWFndWU8L1N0eWxlZFRhYmxlVGl0bGU+XHJcbiAgICAgICAgICAgICAgICAgICAgPFN0eWxlZFRhYmxlVGV4dD5DdXAg4oCiIFdvcmxkPC9TdHlsZWRUYWJsZVRleHQ+XHJcbiAgICAgICAgICAgICAgICA8L1N0eWxlZFRhYmxlQ29udGVudD5cclxuICAgICAgICAgICAgPC9TdHlsZWRUZWFtPlxyXG4gICAgICAgICAgICA8SGFpcmxpbmUgLz5cclxuICAgICAgICAgICAge2xvYWRpbmcgPyA8TG9hZGVyIG5hbWU9XCJUZWFtc1wiIC8+IDpcclxuICAgICAgICAgICAgICAgIDxTY3JvbGxWaWV3PlxyXG4gICAgICAgICAgICAgICAgICAgIHt0ZWFtcy5tYXAoKHRlYW06IGFueSwgaW5kZXg6IG51bWJlcikgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gPFN0eWxlZFRhYmxlIGtleT17aW5kZXh9IGlkZW50aWZpZXI9e2luZGV4fT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxTdHlsZWRUYWJsZUltYWdlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzaXplTW9kZT1cImNvbnRhaW5cIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNvdXJjZT17eyB1cmk6IHRlYW0udGVhbS5sb2dvIH19IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8U3R5bGVkVGFibGVDb250ZW50IHdpZHRoPXtcIjEwMCVcIn0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPFN0eWxlZFRhYmxlVGl0bGU+e3RlYW0udGVhbS5uYW1lfTwvU3R5bGVkVGFibGVUaXRsZT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8U3R5bGVkVGFibGVUZXh0Pnt0ZWFtLnRlYW0uY291bnRyeX0g4oCiIHt0ZWFtLnZlbnVlLmNpdHl9PC9TdHlsZWRUYWJsZVRleHQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1N0eWxlZFRhYmxlQ29udGVudD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9TdHlsZWRUYWJsZT5cclxuICAgICAgICAgICAgICAgICAgICB9KX1cclxuICAgICAgICAgICAgICAgIDwvU2Nyb2xsVmlldz59XHJcbiAgICAgICAgPC9TdHlsZWRDb250YWluZXI+XHJcbiAgICApO1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBUZWFtczsiXX0=