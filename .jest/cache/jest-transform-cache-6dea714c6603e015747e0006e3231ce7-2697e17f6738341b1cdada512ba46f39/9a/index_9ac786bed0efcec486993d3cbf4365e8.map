{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAUA;;AACA;;AAEA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,OAAwB;EAAA,IAArBC,UAAqB,QAArBA,UAAqB;;EAC5C,YAA+B,2CAA/B;EAAA,IAAQC,kBAAR,SAAQA,kBAAR;;EAEA,YAA8B,sBAAS,IAAT,CAA9B;EAAA;EAAA,IAAOC,OAAP;EAAA,IAAgBC,UAAhB;;EACA,YAA8C,sBAAS,EAAT,CAA9C;EAAA;EAAA,IAAOC,eAAP;EAAA,IAAwBC,kBAAxB;;EAEA,uBAAU,YAAK;IACXJ,kBAAkB,GAAGK,IAArB,CAA0B,kBAAQ,EAAG;MACjC,IAAIC,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;QACzBH,kBAAkB,CAACE,QAAQ,CAACE,IAAT,CAAcF,QAAd,CAAuB,CAAvB,EAA0BG,MAA1B,CAAiCC,SAAjC,CAA2CC,IAA3C,EAAD,CAAlB;QACAT,UAAU,CAAC,KAAD,CAAV;MACH,CAHD,MAGOA,UAAU,CAAC,KAAD,CAAV;IACV,CALD;EAMH,CAPD,EAOG,EAPH;EASA,OACI,oBAAC,QAAD,CAAC,eAAD,QACI,oBAAC,QAAD,CAAC,UAAD,QACI,oBAAC,QAAD,CAAC,gBAAD;IACI,UAAU,EAAC,SADf;IAEI,MAAM,EAAE;MAAEU,GAAG,EAAE;IAAP;EAFZ,EADJ,EAII,oBAAC,QAAD,CAAC,kBAAD,QACI,oBAAC,QAAD,CAAC,eAAD,8CADJ,EAEI,oBAAC,QAAD,CAAC,gBAAD,6BAFJ,EAGI,oBAAC,QAAD,CAAC,eAAD,2BAHJ,EAII,oBAAC,QAAD,CAAC,eAAD,eAJJ,CAJJ,CADJ,EAYI,oBAAC,QAAD,CAAC,QAAD,OAZJ,EAaKX,OAAO,GAAG,oBAAC,SAAD,CAAC,OAAD;IAAQ,IAAI,EAAC;EAAb,EAAH,GACJ,oBAAC,cAAD,CAAC,UAAD,QACKE,eAAe,CAACU,GAAhB,CAAoB,UAACC,aAAD,EAAqBC,KAArB,EAAsC;IACvD,OAAO,oBAAC,QAAD,CAAC,WAAD;MAAa,GAAG,EAAEA,KAAlB;MAAyB,UAAU,EAAEA;IAArC,GACH,oBAAC,QAAD,CAAC,gBAAD;MACI,UAAU,EAAC,SADf;MAEI,MAAM,EAAE;QAAEH,GAAG,EAAEE,aAAa,CAACE,IAAd,CAAmBC;MAA1B;IAFZ,EADG,EAIH,oBAAC,QAAD,CAAC,kBAAD;MAAoB,KAAK,EAAE;IAA3B,GACI,oBAAC,QAAD,CAAC,gBAAD,QAAmBH,aAAa,CAACE,IAAd,CAAmBE,IAAtC,CADJ,EAEI,oBAAC,QAAD,CAAC,eAAD,kBAAwBJ,aAAa,CAACK,IAAtC,cAA+CL,aAAa,CAACM,KAA7D,CAFJ,EAGI,oBAAC,QAAD,CAAC,eAAD,oBAA0BN,aAAa,CAACO,MAAxC,CAHJ,CAJG,CAAP;EAUH,CAXA,CADL,CAdR,CADJ;AA+BH,CA9CD;;AAgDAC,kBAAexB,eAAf","names":["Classifications","navigation","getClassifications","loading","setLoading","classifications","setClassifications","then","response","status","data","league","standings","flat","uri","map","classfication","index","team","logo","name","rank","group","points","exports"],"sources":["D:\\projects\\Esportudo\\src\\screens\\Classifications\\index.tsx"],"sourcesContent":["import * as  React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { ScrollView } from 'react-native';\r\nimport {\r\n    StyledContainer,\r\n    StyledTable,\r\n    StyledTableContent,\r\n    StyledTableTitle,\r\n    StyledTableImage,\r\n    StyledTableText,\r\n    Hairline,\r\n    StyledTeam\r\n} from '../Players/styles';\r\nimport Loader from \"../../components/Loading\";\r\nimport { useClassifications } from \"../../context/Classifications\";\r\n\r\nconst Classifications = ({ navigation }: any) => {\r\n    const { getClassifications } = useClassifications();\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [classifications, setClassifications] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getClassifications().then(response => {\r\n            if (response.status === 200) {\r\n                setClassifications(response.data.response[0].league.standings.flat());\r\n                setLoading(false);\r\n            } else setLoading(false);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <StyledContainer>\r\n            <StyledTeam>\r\n                <StyledTableImage\r\n                    resizeMode=\"contain\"\r\n                    source={{ uri: \"https://media.api-sports.io/football/leagues/3.png\" }} />\r\n                <StyledTableContent>\r\n                    <StyledTableText>You are viewing classfications from</StyledTableText>\r\n                    <StyledTableTitle>UEFA Europa League</StyledTableTitle>\r\n                    <StyledTableText>Cup • World</StyledTableText>\r\n                    <StyledTableText>2021</StyledTableText>\r\n                </StyledTableContent>\r\n            </StyledTeam>\r\n            <Hairline />\r\n            {loading ? <Loader name=\"Classifications\" /> :\r\n                <ScrollView>\r\n                    {classifications.map((classfication: any, index: number) => {\r\n                        return <StyledTable key={index} identifier={index}>\r\n                            <StyledTableImage\r\n                                resizeMode=\"contain\"\r\n                                source={{ uri: classfication.team.logo }} />\r\n                            <StyledTableContent width={\"100%\"}>\r\n                                <StyledTableTitle>{classfication.team.name}</StyledTableTitle>\r\n                                <StyledTableText>Rank: {classfication.rank} • {classfication.group}</StyledTableText>\r\n                                <StyledTableText>Points: {classfication.points}</StyledTableText>\r\n                            </StyledTableContent>\r\n                        </StyledTable>\r\n                    })}\r\n                </ScrollView>}\r\n        </StyledContainer>\r\n    );\r\n}\r\n\r\nexport default Classifications;"]}