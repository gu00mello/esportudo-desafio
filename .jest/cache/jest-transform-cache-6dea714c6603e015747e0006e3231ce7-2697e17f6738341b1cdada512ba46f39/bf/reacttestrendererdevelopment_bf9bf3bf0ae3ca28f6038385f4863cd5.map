{"version":3,"names":["React","require","Scheduler","Scheduler$1","ReactSharedInternals","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","warn","format","_len","arguments","length","args","Array","_key","printWarning","error","_len2","_key2","level","ReactDebugCurrentFrame","stack","getStackAddendum","concat","argsWithFormat","map","item","String","unshift","Function","prototype","apply","call","console","_defineProperties","target","props","i","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","_objectWithoutPropertiesLoose","source","excluded","sourceKeys","keys","indexOf","assign","get","_reactInternals","set","value","enableSchedulingProfiler","enableProfilerTimer","enableProfilerCommitHooks","enableLazyElements","warnAboutStringRefs","enableSuspenseAvoidThisFallback","enableNewReconciler","enableLazyContextPropagation","enableLegacyHidden","FunctionComponent","ClassComponent","IndeterminateComponent","HostRoot","HostPortal","HostComponent","HostText","Fragment","Mode","ContextConsumer","ContextProvider","ForwardRef","Profiler","SuspenseComponent","MemoComponent","SimpleMemoComponent","LazyComponent","IncompleteClassComponent","DehydratedFragment","SuspenseListComponent","ScopeComponent","OffscreenComponent","LegacyHiddenComponent","CacheComponent","TracingMarkerComponent","REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_SCOPE_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_OFFSCREEN_TYPE","REACT_LEGACY_HIDDEN_TYPE","REACT_CACHE_TYPE","REACT_TRACING_MARKER_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","getWrappedName","outerType","innerType","wrapperName","displayName","functionName","name","getContextName","type","getComponentNameFromType","tag","$$typeof","context","provider","_context","render","outerName","lazyComponent","payload","_payload","init","_init","x","getWrappedName$1","getContextName$1","getComponentNameFromFiber","fiber","NoFlags","PerformedWork","Placement","Update","PlacementAndUpdate","ChildDeletion","ContentReset","Callback","DidCapture","ForceClientRender","Ref","Snapshot","Passive","Hydrating","HydratingAndUpdate","Visibility","StoreConsistency","LifecycleEffectMask","HostEffectMask","Incomplete","ShouldCapture","ForceUpdateForLegacySuspense","Forked","RefStatic","LayoutStatic","PassiveStatic","BeforeMutationMask","MutationMask","LayoutMask","PassiveMask","StaticMask","ReactCurrentOwner","getNearestMountedFiber","node","nearestMounted","alternate","nextNode","flags","return","isFiberMounted","isMounted","component","owner","current","ownerFiber","instance","stateNode","_warnedAboutRefsInRender","assertIsMounted","Error","findCurrentFiberUsingSlowPath","a","b","parentA","parentB","nextParent","child","sibling","didFindChild","_child","findCurrentHostFiber","parent","currentParent","findCurrentHostFiberImpl","match","isArrayImpl","isArray","scheduleCallback","unstable_scheduleCallback","cancelCallback","unstable_cancelCallback","shouldYield","unstable_shouldYield","requestPaint","unstable_requestPaint","now","unstable_now","ImmediatePriority","unstable_ImmediatePriority","UserBlockingPriority","unstable_UserBlockingPriority","NormalPriority","unstable_NormalPriority","IdlePriority","unstable_IdlePriority","disabledDepth","prevLog","prevInfo","prevWarn","prevError","prevGroup","prevGroupCollapsed","prevGroupEnd","disabledLog","__reactDisabledLog","disableLogs","log","info","group","groupCollapsed","groupEnd","defineProperties","reenableLogs","rendererID","injectedHook","hasLoggedError","isDevToolsPresent","__REACT_DEVTOOLS_GLOBAL_HOOK__","injectInternals","internals","hook","isDisabled","supportsFiber","getLaneLabelMap","injectProfilingHooks","inject","err","checkDCE","onScheduleRoot","root","children","onScheduleFiberRoot","onCommitRoot","eventPriority","onCommitFiberRoot","didError","schedulerPriority","DiscreteEventPriority","ContinuousEventPriority","DefaultEventPriority","IdleEventPriority","undefined","onPostCommitRoot","onPostCommitFiberRoot","onCommitUnmount","onCommitFiberUnmount","profilingHooks","markComponentRenderStopped","markComponentErrored","thrownValue","lanes","markComponentSuspended","wakeable","NoMode","ConcurrentMode","ProfileMode","StrictLegacyMode","clz32","Math","clz32Fallback","LN2","asUint","TotalLanes","NoLanes","NoLane","SyncLane","InputContinuousHydrationLane","InputContinuousLane","DefaultHydrationLane","DefaultLane","TransitionHydrationLane","TransitionLanes","TransitionLane1","TransitionLane2","TransitionLane3","TransitionLane4","TransitionLane5","TransitionLane6","TransitionLane7","TransitionLane8","TransitionLane9","TransitionLane10","TransitionLane11","TransitionLane12","TransitionLane13","TransitionLane14","TransitionLane15","TransitionLane16","RetryLanes","RetryLane1","RetryLane2","RetryLane3","RetryLane4","RetryLane5","SomeRetryLane","SelectiveHydrationLane","NonIdleLanes","IdleHydrationLane","IdleLane","OffscreenLane","NoTimestamp","nextTransitionLane","nextRetryLane","getHighestPriorityLanes","getHighestPriorityLane","getNextLanes","wipLanes","pendingLanes","nextLanes","suspendedLanes","pingedLanes","nonIdlePendingLanes","nonIdleUnblockedLanes","nonIdlePingedLanes","unblockedLanes","nextLane","wipLane","entangledLanes","entanglements","index","pickArbitraryLaneIndex","lane","getMostRecentEventTime","eventTimes","mostRecentEventTime","eventTime","computeExpirationTime","currentTime","markStarvedLanesAsExpired","expirationTimes","expirationTime","expiredLanes","getLanesToRetrySynchronouslyOnError","everythingButOffscreen","includesSyncLane","includesNonIdleWork","includesOnlyRetries","includesOnlyTransitions","includesBlockingLane","SyncDefaultLanes","includesExpiredLane","isTransitionLane","claimNextTransitionLane","claimNextRetryLane","pickArbitraryLane","laneToIndex","includesSomeLane","isSubsetOfLanes","subset","mergeLanes","removeLanes","intersectLanes","laneToLanes","createLaneMap","initial","laneMap","push","markRootUpdated","updateLane","markRootSuspended","markRootPinged","markRootFinished","remainingLanes","noLongerPendingLanes","mutableReadLanes","markRootEntangled","rootEntangledLanes","currentUpdatePriority","getCurrentUpdatePriority","setCurrentUpdatePriority","newPriority","higherEventPriority","lowerEventPriority","isHigherEventPriority","lanesToEventPriority","shim","isSuspenseInstancePending","isSuspenseInstanceFallback","hydrateTextInstance","errorHydratingContainer","NO_CONTEXT","UPDATE_SIGNAL","nodeToInstanceMap","WeakMap","freeze","getPublicInstance","inst","createNodeMock","rootContainerInstance","mockNode","appendChild","parentInstance","splice","insertBefore","beforeChild","beforeIndex","removeChild","clearContainer","container","getRootHostContext","getChildHostContext","parentHostContext","prepareForCommit","containerInfo","resetAfterCommit","createInstance","hostContext","internalInstanceHandle","isHidden","appendInitialChild","prepareUpdate","testElement","oldProps","newProps","shouldSetTextContent","createTextInstance","text","getCurrentEventPriority","scheduleTimeout","setTimeout","cancelTimeout","clearTimeout","noTimeout","commitUpdate","updatePayload","commitTextUpdate","textInstance","oldText","newText","resetTextContent","appendChildToContainer","insertInContainerBefore","removeChildFromContainer","hideInstance","hideTextInstance","unhideInstance","unhideTextInstance","preparePortalMount","portalInstance","ReactCurrentDispatcher","prefix","describeBuiltInComponentFrame","ownerFn","trim","reentry","componentFrameCache","PossiblyWeakMap","Map","describeNativeComponentFrame","fn","construct","frame","control","previousPrepareStackTrace","prepareStackTrace","previousDispatcher","Fake","Reflect","sample","sampleLines","split","controlLines","s","c","_frame","replace","includes","syntheticFrame","describeClassComponentFrame","ctor","describeFunctionComponentFrame","shouldConstruct","Component","isReactComponent","describeUnknownElementTypeFrameInDEV","hasOwnProperty","loggedTypeFailures","setCurrentlyValidatingElement","element","_owner","_source","setExtraStackFrame","checkPropTypes","typeSpecs","values","location","componentName","has","bind","typeSpecName","error$1","ex","message","valueStack","fiberStack","createCursor","defaultValue","pop","cursor","warnedAboutMissingGetChildContext","emptyContextObject","contextStackCursor","didPerformWorkStackCursor","previousContext","getUnmaskedContext","workInProgress","didPushOwnContextIfProvider","isContextProvider","cacheContext","unmaskedContext","maskedContext","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","getMaskedContext","contextTypes","hasContextChanged","childContextTypes","popContext","popTopLevelContextObject","pushTopLevelContextObject","didChange","processChildContext","parentContext","getChildContext","childContext","contextKey","pushContextProvider","memoizedMergedChildContext","__reactInternalMemoizedMergedChildContext","invalidateContextProvider","mergedContext","findCurrentUnmaskedContext","LegacyRoot","ConcurrentRoot","is","y","objectIs","syncQueue","includesLegacySyncCallbacks","isFlushingSyncQueue","scheduleSyncCallback","callback","scheduleLegacySyncCallback","flushSyncCallbacksOnlyInLegacyMode","flushSyncCallbacks","previousUpdatePriority","isSync","queue","slice","isRootDehydrated","currentState","memoizedState","isDehydrated","ReactCurrentBatchConfig","NoTransition","requestCurrentTransition","transition","shallowEqual","objA","objB","keysA","keysB","currentKey","describeFiber","_debugOwner","_debugSource","getStackByFiberInDevAndProd","ReactDebugCurrentFrame$1","isRendering","getCurrentFiberOwnerNameInDevOrNull","getCurrentFiberStackInDev","resetCurrentFiber","getCurrentStack","setCurrentFiber","setIsRendering","rendering","ReactStrictModeWarnings","recordUnsafeLifecycleWarnings","flushPendingUnsafeLifecycleWarnings","recordLegacyContextWarning","flushLegacyContextWarning","discardPendingWarnings","findStrictRoot","maybeStrictRoot","mode","setToSortedString","array","forEach","sort","join","pendingComponentWillMountWarnings","pendingUNSAFE_ComponentWillMountWarnings","pendingComponentWillReceivePropsWarnings","pendingUNSAFE_ComponentWillReceivePropsWarnings","pendingComponentWillUpdateWarnings","pendingUNSAFE_ComponentWillUpdateWarnings","didWarnAboutUnsafeLifecycles","Set","componentWillMount","__suppressDeprecationWarning","UNSAFE_componentWillMount","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","componentWillUpdate","UNSAFE_componentWillUpdate","componentWillMountUniqueNames","add","UNSAFE_componentWillMountUniqueNames","componentWillReceivePropsUniqueNames","UNSAFE_componentWillReceivePropsUniqueNames","componentWillUpdateUniqueNames","UNSAFE_componentWillUpdateUniqueNames","size","sortedNames","_sortedNames","_sortedNames2","_sortedNames3","_sortedNames4","_sortedNames5","pendingLegacyContextWarning","didWarnAboutLegacyContext","strictRoot","warningsForRoot","fiberArray","firstFiber","uniqueNames","typeName","hasToStringTag","toStringTag","constructor","willCoercionThrow","testStringCoercion","e","checkPropStringCoercion","propName","resolveDefaultProps","baseProps","defaultProps","valueCursor","rendererSigil","currentlyRenderingFiber","lastContextDependency","lastFullyObservedContext","isDisallowedContextReadInDEV","resetContextDependencies","enterDisallowedContextReadInDEV","exitDisallowedContextReadInDEV","pushProvider","providerFiber","nextValue","_currentValue2","_currentRenderer2","popProvider","currentValue","scheduleContextWorkOnParentPath","renderLanes","propagationRoot","childLanes","propagateContextChange","propagateContextChange_eager","nextFiber","list","dependencies","dependency","firstContext","update","createUpdate","ForceUpdate","updateQueue","sharedQueue","shared","pending","next","prepareToReadContext","markWorkInProgressReceivedUpdate","readContext","contextItem","memoizedValue","interleavedQueues","pushInterleavedQueue","enqueueInterleavedUpdates","lastInterleavedUpdate","interleaved","firstInterleavedUpdate","lastPendingUpdate","firstPendingUpdate","UpdateState","ReplaceState","CaptureUpdate","hasForceUpdate","didWarnUpdateInsideUpdate","currentlyProcessingQueue","initializeUpdateQueue","baseState","firstBaseUpdate","lastBaseUpdate","effects","cloneUpdateQueue","currentQueue","clone","enqueueUpdate","isInterleavedUpdate","entangleTransitions","queueLanes","newQueueLanes","enqueueCapturedUpdate","capturedUpdate","newFirst","newLast","getStateFromUpdate","prevState","nextProps","nextState","partialState","processUpdateQueue","pendingQueue","currentLastBaseUpdate","newState","newLanes","newBaseState","newFirstBaseUpdate","newLastBaseUpdate","updateEventTime","_clone","_lastPendingUpdate","_firstPendingUpdate","lastInterleaved","markSkippedUpdateLanes","callCallback","resetHasForceUpdateBeforeProcessing","checkHasForceUpdateAfterProcessing","commitUpdateQueue","finishedWork","finishedQueue","effect","fakeInternalInstance","emptyRefsObject","refs","didWarnAboutStateAssignmentForComponent","didWarnAboutUninitializedState","didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate","didWarnAboutLegacyLifecyclesAndDerivedState","didWarnAboutUndefinedDerivedState","warnOnUndefinedDerivedState","warnOnInvalidCallback","didWarnAboutDirectlyAssigningPropsToState","didWarnAboutContextTypeAndContextTypes","didWarnAboutInvalidateContextType","didWarnOnInvalidCallback","callerName","applyDerivedStateFromProps","getDerivedStateFromProps","classComponentUpdater","enqueueSetState","requestEventTime","requestUpdateLane","scheduleUpdateOnFiber","enqueueReplaceState","enqueueForceUpdate","checkShouldComponentUpdate","oldState","nextContext","shouldComponentUpdate","shouldUpdate","isPureReactComponent","checkClassInstance","renderPresent","getInitialState","isReactClassApproved","state","getDefaultProps","propTypes","contextType","componentShouldUpdate","componentDidUnmount","componentDidReceiveProps","componentWillRecieveProps","UNSAFE_componentWillRecieveProps","hasMutatedProps","getSnapshotBeforeUpdate","componentDidUpdate","getDerivedStateFromError","_state","adoptClassInstance","updater","_reactInternalInstance","constructClassInstance","isLegacyContextConsumer","isValid","addendum","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","_componentName","newApiName","callComponentWillMount","callComponentWillReceiveProps","mountClassInstance","componentDidMount","fiberFlags","resumeMountClassInstance","memoizedProps","oldContext","nextLegacyUnmaskedContext","hasNewLifecycles","_fiberFlags","_fiberFlags2","updateClassInstance","unresolvedOldProps","elementType","unresolvedNewProps","pendingProps","nextUnmaskedContext","forkStack","forkStackIndex","treeForkProvider","treeForkCount","idStack","idStackIndex","treeContextProvider","treeContextId","treeContextOverflow","popTreeContext","isHydrating","prepareToHydrateHostInstance","prepareToHydrateHostTextInstance","popHydrationState","getIsHydrating","didWarnAboutMaps","didWarnAboutGenerators","didWarnAboutStringRefs","ownerHasKeyUseWarning","ownerHasFunctionTypeWarning","warnForMissingKey","returnFiber","_store","validated","coerceRef","mixedRef","ref","_self","resolvedInst","stringRef","_stringRef","throwOnInvalidObjectType","newChild","childString","toString","warnOnFunctionType","ChildReconciler","shouldTrackSideEffects","deleteChild","childToDelete","deletions","deleteRemainingChildren","currentFirstChild","mapRemainingChildren","existingChildren","existingChild","useFiber","createWorkInProgress","placeChild","newFiber","lastPlacedIndex","newIndex","oldIndex","placeSingleChild","updateTextNode","textContent","created","createFiberFromText","existing","updateElement","updateFragment","isCompatibleFamilyForHotReloading","createFiberFromElement","updatePortal","portal","implementation","createFiberFromPortal","fragment","createFiberFromFragment","createChild","_created","_created2","_created3","updateSlot","oldFiber","updateFromMap","newIdx","matchedFiber","_matchedFiber","_matchedFiber2","_matchedFiber3","warnOnInvalidKey","knownKeys","reconcileChildrenArray","newChildren","resultingFirstChild","previousNewFiber","nextOldFiber","_newFiber","_newFiber2","delete","reconcileChildrenIterator","newChildrenIterable","iteratorFn","entries","_newChildren","_step","done","step","_newFiber3","_newFiber4","reconcileSingleTextNode","reconcileSingleElement","_existing","_created4","reconcileSinglePortal","reconcileChildFibers","isUnkeyedTopLevelFragment","mountChildFibers","cloneChildFibers","currentChild","resetChildFibers","resetWorkInProgress","NO_CONTEXT$1","contextStackCursor$1","contextFiberStackCursor","rootInstanceStackCursor","requiredContext","getRootHostContainer","rootInstance","pushHostContainer","nextRootInstance","nextRootContext","popHostContainer","getHostContext","pushHostContext","popHostContext","DefaultSuspenseContext","SubtreeSuspenseContextMask","InvisibleParentSuspenseContext","ForceSuspenseFallback","suspenseStackCursor","hasSuspenseContext","flag","setDefaultShallowSuspenseContext","setShallowSuspenseContext","shallowContext","addSubtreeSuspenseContext","subtreeContext","pushSuspenseContext","newContext","popSuspenseContext","shouldCaptureSuspense","hasInvisibleParent","dehydrated","findFirstSuspended","row","revealOrder","didSuspend","NoFlags$1","HasEffect","Insertion","Layout","Passive$1","workInProgressSources","resetWorkInProgressVersions","mutableSource","_workInProgressVersionSecondary","ReactCurrentDispatcher$1","ReactCurrentBatchConfig$1","didWarnAboutMismatchedHooksForComponent","didWarnUncachedGetSnapshot","currentlyRenderingFiber$1","currentHook","workInProgressHook","didScheduleRenderPhaseUpdate","didScheduleRenderPhaseUpdateDuringThisPass","globalClientIdCounter","RE_RENDER_LIMIT","currentHookNameInDev","hookTypesDev","hookTypesUpdateIndexDev","ignorePreviousDependencies","mountHookTypesDev","hookName","updateHookTypesDev","warnOnHookMismatchInDev","checkDepsAreArrayDev","deps","currentHookName","table","secondColumnStart","oldHookName","newHookName","throwInvalidHookError","areHookInputsEqual","nextDeps","prevDeps","renderWithHooks","secondArg","nextRenderLanes","_debugHookTypes","HooksDispatcherOnUpdateInDEV","HooksDispatcherOnMountWithHookTypesInDEV","HooksDispatcherOnMountInDEV","numberOfReRenders","HooksDispatcherOnRerenderInDEV","ContextOnlyDispatcher","didRenderTooFewHooks","bailoutHooks","resetHooksAfterThrow","isUpdatingOpaqueValueInRenderPhase","mountWorkInProgressHook","baseQueue","updateWorkInProgressHook","nextCurrentHook","nextWorkInProgressHook","newHook","createFunctionComponentUpdateQueue","lastEffect","stores","basicStateReducer","action","mountReducer","reducer","initialArg","initialState","dispatch","lastRenderedReducer","lastRenderedState","dispatchReducerAction","updateReducer","baseFirst","pendingFirst","first","newBaseQueueFirst","newBaseQueueLast","hasEagerState","eagerState","interleavedLane","rerenderReducer","lastRenderPhaseUpdate","firstRenderPhaseUpdate","mountMutableSource","getSnapshot","subscribe","updateMutableSource","mountSyncExternalStore","getServerSnapshot","nextSnapshot","cachedSnapshot","getWorkInProgressRoot","pushStoreConsistencyCheck","mountEffect","subscribeToStore","pushEffect","updateStoreInstance","updateSyncExternalStore","prevSnapshot","snapshotChanged","updateEffect","renderedSnapshot","check","componentUpdateQueue","checkIfSnapshotChanged","forceStoreRerender","handleStoreChange","latestGetSnapshot","prevValue","mountState","dispatchSetState","updateState","rerenderState","create","destroy","firstEffect","mountRef","initialValue","_ref2","updateRef","mountEffectImpl","hookFlags","updateEffectImpl","prevEffect","mountInsertionEffect","updateInsertionEffect","mountLayoutEffect","updateLayoutEffect","imperativeHandleEffect","refCallback","_inst","refObject","_inst2","mountImperativeHandle","effectDeps","updateImperativeHandle","mountDebugValue","formatterFn","updateDebugValue","mountCallback","updateCallback","mountMemo","nextCreate","updateMemo","mountDeferredValue","_mountState","setValue","prevTransition","updateDeferredValue","_updateState","rerenderDeferredValue","_rerenderState","startTransition","setPending","options","previousPriority","currentTransition","_updatedFibers","updatedFibersCount","clear","mountTransition","_mountState2","isPending","start","updateTransition","_updateState2","rerenderTransition","_rerenderState2","getIsUpdatingOpaqueValueInRenderPhaseInDEV","mountId","identifierPrefix","id","globalClientId","updateId","isRenderPhaseUpdate","enqueueRenderPhaseUpdate","enqueueUpdate$1","entangleTransitionUpdate","prevDispatcher","InvalidNestedHooksDispatcherOnUpdateInDEV","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","InvalidNestedHooksDispatcherOnMountInDEV","InvalidNestedHooksDispatcherOnRerenderInDEV","warnInvalidContextAccess","warnInvalidHookAccess","now$1","commitTime","layoutEffectStartTime","profilerStartTime","passiveEffectStartTime","currentUpdateIsNested","nestedUpdateScheduled","isCurrentUpdateNested","markNestedUpdateScheduled","resetNestedUpdateFlag","syncNestedUpdateFlag","getCommitTime","recordCommitTime","startProfilerTimer","actualStartTime","stopProfilerTimerIfRunning","stopProfilerTimerIfRunningAndRecordDelta","overrideBaseTime","elapsedTime","actualDuration","selfBaseDuration","recordLayoutEffectDuration","parentFiber","effectDuration","parentStateNode","recordPassiveEffectDuration","passiveEffectDuration","startLayoutEffectTimer","startPassiveEffectTimer","transferActualDuration","createCapturedValue","showErrorDialog","boundary","errorInfo","logCapturedError","logError","componentStack","_suppressLogging","componentNameMessage","errorBoundaryMessage","errorBoundaryName","combinedMessage","PossiblyWeakMap$1","createRootErrorUpdate","onUncaughtError","createClassErrorUpdate","markFailedErrorBoundaryForHotReloading","componentDidCatch","markLegacyErrorBoundaryAsFailed","attachPingListener","pingCache","threadIDs","ping","pingSuspendedRoot","then","attachRetryListener","suspenseBoundary","wakeables","resetSuspendedComponent","sourceFiber","rootRenderLanes","currentSource","getNearestSuspenseBoundaryToCapture","markSuspenseBoundaryShouldCapture","currentSourceFiber","throwException","renderDidSuspendDelayIfPossible","uncaughtSuspenseError","renderDidError","_errorInfo","isAlreadyFailedLegacyErrorBoundary","_lane","_update","getSuspendedCache","markUpdate","markRef","appendAllChildren","updateHostContainer","updateHostComponent","updateHostText","needsVisibilityToggle","currentHostContext","cutOffTailIfNeeded","renderState","hasRenderedATailFallback","tailMode","tailNode","tail","lastTailNode","_tailNode","_lastTailNode","bubbleProperties","completedWork","didBailout","newChildLanes","subtreeFlags","treeBaseDuration","_treeBaseDuration","_child2","_child3","completeWork","fiberRoot","pendingContext","wasHydrated","_wasHydrated","_rootContainerInstance","_currentHostContext","_wasHydrated2","nextDidTimeout","prevDidTimeout","_prevState","_offscreenFiber","hasInvisibleChildContext","unstable_avoidThisFallback","renderDidSuspend","_primaryChildFragment2","_Component","didSuspendAlready","renderedTail","cannotBeSuspended","renderHasNotSuspendedYet","suspended","newThenables","getRenderTargetTime","_suspended","_newThenables","renderingStartTime","isBackwards","previousSibling","last","suspenseContext","popRenderLanes","_nextState","nextIsHidden","_prevState2","prevIsHidden","subtreeRenderLanes","ReactCurrentOwner$1","didReceiveUpdate","didWarnAboutBadClass","didWarnAboutModulePatternComponent","didWarnAboutContextTypeOnFunctionComponent","didWarnAboutGetDerivedStateOnFunctionComponent","didWarnAboutFunctionRefs","didWarnAboutReassigningProps","didWarnAboutRevealOrder","didWarnAboutTailOptions","reconcileChildren","nextChildren","forceUnmountCurrentAndReconcile","updateForwardRef","innerPropTypes","bailoutOnAlreadyFinishedWork","updateMemoComponent","isSimpleFunctionComponent","compare","resolvedType","resolveFunctionForHotReloading","validateFunctionComponentInDev","updateSimpleMemoComponent","createFiberFromTypeAndProps","_type","_innerPropTypes","hasScheduledUpdateOrContext","checkScheduledUpdateOrContext","prevProps","outerMemoType","outerPropTypes","updateFunctionComponent","updateOffscreenComponent","baseLanes","cachePool","pushRenderLanes","spawnedCachePool","nextBaseLanes","prevBaseLanes","_nextState2","_subtreeRenderLanes","updateMode","updateProfiler","markRef$1","updateClassComponent","shouldError","_instance","tempInstance","hasContext","nextUnitOfWork","finishClassComponent","didCaptureError","pushHostRootContext","updateHostRoot","prevChildren","updateHostComponent$1","updateHostText$1","mountLazyComponent","_current","resolvedTag","resolveLazyComponentTag","resolvedProps","resolveClassForHotReloading","resolveForwardRefForHotReloading","hint","mountIncompleteClassComponent","mountIndeterminateComponent","_componentName2","ownerName","warningKey","debugSource","fileName","lineNumber","_componentName3","_componentName4","SUSPENDED_MARKER","treeContext","retryLane","mountSuspenseOffscreenState","updateSuspenseOffscreenState","prevOffscreenState","shouldRemainOnFallback","suspenseState","getRemainingWorkInPrimaryTree","updateSuspenseComponent","shouldSuspend","showFallback","nextPrimaryChildren","nextFallbackChildren","fallback","fallbackFragment","mountSuspenseFallbackChildren","primaryChildFragment","mountSuspensePrimaryChildren","_nextFallbackChildren2","_nextPrimaryChildren2","_fallbackChildFragment","updateSuspenseFallbackChildren","_primaryChildFragment3","_nextPrimaryChildren3","_primaryChildFragment4","updateSuspensePrimaryChildren","_nextFallbackChildren3","_nextPrimaryChildren4","_fallbackChildFragment2","_primaryChildFragment5","_prevOffscreenState","_nextPrimaryChildren5","_primaryChildFragment6","primaryChildren","primaryChildProps","mountWorkInProgressOffscreenFiber","fallbackChildren","progressedPrimaryFragment","fallbackChildFragment","offscreenProps","createFiberFromOffscreen","updateWorkInProgressOffscreenFiber","currentPrimaryChildFragment","currentFallbackChildFragment","scheduleSuspenseWorkOnFiber","propagateSuspenseContextChange","firstChild","findLastContentRow","lastContentRow","currentRow","validateRevealOrder","toLowerCase","validateTailOptions","validateSuspenseListNestedChild","childSlot","isAnArray","isIterable","validateSuspenseListChildren","childrenIterator","_i","initSuspenseListRenderState","updateSuspenseListComponent","shouldForceFallback","didSuspendBefore","_tail","nextRow","updatePortalComponent","hasWarnedAboutUsingNoValuePropOnContextProvider","updateContextProvider","providerType","newValue","providerPropTypes","oldValue","hasWarnedAboutUsingContextAsConsumer","updateContextConsumer","Consumer","remountFiber","oldWorkInProgress","newWorkInProgress","prevSibling","updateLanes","attemptEarlyBailoutIfNoScheduledUpdate","hasChildWork","primaryChildLanes","_hasChildWork","beginWork","_debugNeedsRemount","unresolvedProps","_unresolvedProps","_resolvedProps","_unresolvedProps2","_resolvedProps2","_type2","_unresolvedProps3","_resolvedProps3","_Component2","_unresolvedProps4","_resolvedProps4","unwindWork","_flags","_flags2","unwindInterruptedWork","interruptedWork","invokeGuardedCallbackProd","func","d","f","funcArgs","onError","invokeGuardedCallbackImpl","window","dispatchEvent","document","createEvent","fakeNode","createElement","invokeGuardedCallbackDev","evt","didCall","windowEvent","event","windowEventDescriptor","getOwnPropertyDescriptor","restoreAfterDispatch","removeEventListener","evtType","didSetError","isCrossOriginError","handleWindowError","colno","lineno","defaultPrevented","inner","addEventListener","initEvent","invokeGuardedCallbackImpl$1","hasError","caughtError","reporter","invokeGuardedCallback","clearCaughtError","didWarnAboutUndefinedSnapshotBeforeUpdate","PossiblyWeakSet","WeakSet","nextEffect","reportUncaughtErrorInDEV","callComponentWillUnmountWithTimer","componentWillUnmount","safelyCallComponentWillUnmount","nearestMountedAncestor","captureCommitPhaseError","safelyDetachRef","retVal","safelyCallDestroy","focusedInstanceHandle","shouldFireAfterActiveInstanceBlur","commitBeforeMutationEffects","commitBeforeMutationEffects_begin","shouldFire","ensureCorrectReturnPointer","commitBeforeMutationEffects_complete","commitBeforeMutationEffectsOnFiber","snapshot","didWarnSet","__reactInternalSnapshotBeforeUpdate","commitHookEffectListUnmount","commitHookEffectListMount","commitPassiveEffectDurations","finishedRoot","_finishedWork$memoize","onPostCommit","phase","outer","commitLayoutEffectOnFiber","committedLanes","_updateQueue","_instance2","_finishedWork$memoize2","onCommit","onRender","enqueuePendingPassiveProfilerEffect","commitAttachRef","hideOrUnhideAllChildren","hostSubtreeRoot","_instance3","instanceToUse","commitDetachRef","currentRef","commitUnmount","_effect","unmountHostComponents","commitNestedUnmounts","detachFiberMutation","detachFiberAfterEffects","hostInstance","getHostParentFiber","isHostParent","getHostSibling","siblings","commitPlacement","before","insertOrAppendPlacementNode","_parent","_before","insertOrAppendPlacementNodeIntoContainer","isHost","currentParentIsValid","currentParentIsContainer","findParent","commitDeletion","commitWork","commitSuspenseCallback","attachSuspenseRetryListeners","retryCache","retry","resolveRetryWakeable","commitResetTextContent","commitMutationEffects","commitMutationEffects_begin","commitMutationEffects_complete","commitMutationEffectsOnFiber","wasHidden","markCommitTimeOfFallback","_newState","_isHidden","_current2","_wasHidden","offscreenBoundary","primaryFlags","_current3","_current4","_current5","commitLayoutEffects","commitLayoutEffects_begin","subtreeRoot","isModernRoot","commitLayoutMountEffects_complete","commitPassiveMountEffects","commitPassiveMountEffects_begin","commitPassiveMountEffects_complete","commitPassiveMountOnFiber","commitPassiveUnmountEffects","commitPassiveUnmountEffects_begin","fiberToDelete","commitPassiveUnmountEffectsInsideOfDeletedTree_begin","previousFiber","detachedChild","detachedSibling","commitPassiveUnmountEffects_complete","commitPassiveUnmountOnFiber","deletedSubtreeRoot","commitPassiveUnmountInsideDeletedTreeOnFiber","commitPassiveUnmountEffectsInsideOfDeletedTree_complete","didWarnWrongReturnPointer","expectedReturnFiber","COMPONENT_TYPE","HAS_PSEUDO_CLASS_TYPE","ROLE_TYPE","TEST_NAME_TYPE","TEXT_TYPE","symbolFor","ReactCurrentActQueue","isLegacyActEnvironment","isReactActEnvironmentGlobal","IS_REACT_ACT_ENVIRONMENT","jestIsDefined","jest","isConcurrentActEnvironment","ceil","ReactCurrentDispatcher$2","ReactCurrentOwner$2","ReactCurrentBatchConfig$2","ReactCurrentActQueue$1","NoContext","BatchedContext","RenderContext","CommitContext","RootInProgress","RootFatalErrored","RootErrored","RootSuspended","RootSuspendedWithDelay","RootCompleted","RootDidNotComplete","executionContext","workInProgressRoot","workInProgressRootRenderLanes","subtreeRenderLanesCursor","workInProgressRootExitStatus","workInProgressRootFatalError","workInProgressRootIncludedLanes","workInProgressRootSkippedLanes","workInProgressRootInterleavedUpdatedLanes","workInProgressRootPingedLanes","workInProgressRootConcurrentErrors","workInProgressRootRecoverableErrors","globalMostRecentFallbackTime","FALLBACK_THROTTLE_MS","workInProgressRootRenderTargetTime","Infinity","RENDER_TIMEOUT_MS","resetRenderTimer","hasUncaughtError","firstUncaughtError","legacyErrorBoundariesThatAlreadyFailed","rootDoesHavePassiveEffects","rootWithPendingPassiveEffects","pendingPassiveEffectsLanes","pendingPassiveProfilerEffects","NESTED_UPDATE_LIMIT","nestedUpdateCount","rootWithNestedUpdates","NESTED_PASSIVE_UPDATE_LIMIT","nestedPassiveUpdateCount","currentEventTime","currentEventTransitionLane","isTransition","eventLane","requestRetryLane","checkForNestedUpdates","markUpdateLaneFromFiberToRoot","warnAboutRenderPhaseUpdatesInDEV","warnIfUpdatesNotWrappedWithActDEV","markRootSuspended$1","ensureRootIsScheduled","isBatchingLegacy","warnAboutUpdateOnNotYetMountedFiberInDEV","existingCallbackNode","callbackNode","cancelCallback$1","callbackPriority","newCallbackPriority","existingCallbackPriority","fakeActCallbackNode","newCallbackNode","didScheduleLegacyUpdate","performSyncWorkOnRoot","scheduleCallback$1","schedulerPriorityLevel","performConcurrentWorkOnRoot","didTimeout","originalCallbackNode","didFlushPassiveEffects","flushPassiveEffects","shouldTimeSlice","exitStatus","renderRootConcurrent","renderRootSync","errorRetryLanes","recoverFromConcurrentError","fatalError","prepareFreshStack","renderWasConcurrent","isRenderConsistentWithExternalStores","_errorRetryLanes","_fatalError","finishedLanes","finishConcurrentRender","errorsFromFirstAttempt","rootWorkInProgress","errorsFromSecondAttempt","queueRecoverableErrors","errors","commitRoot","shouldForceFlushFallbacksInDEV","msUntilTimeout","timeoutHandle","eventTimeMs","timeElapsedMs","_msUntilTimeout","jnd","checks","renderedValue","batchedUpdates","prevExecutionContext","flushSync","handleError","erroredWork","completeUnitOfWork","yetAnotherThrownValue","pushDispatcher","popDispatcher","workLoopSync","performUnitOfWork","workLoopConcurrent","unitOfWork","beginWork$1","_next","siblingFiber","recoverableErrors","previousUpdateLanePriority","commitRootImpl","renderPriorityLevel","flushRenderPhaseStrictModeWarningsInDEV","subtreeHasEffects","rootHasEffect","onRecoverableError","recoverableError","renderPriority","priority","flushPassiveEffectsImpl","profilerEffects","_fiber","prepareToThrowUncaughtError","captureCommitPhaseErrorOnRoot","rootFiber","warnIfSuspenseResolutionNotWrappedWithActDEV","retryTimedOutBoundary","boundaryFiber","timeElapsed","didWarnStateUpdateForNotYetMountedComponent","didWarnAboutUpdateInRender","didWarnAboutUpdateInRenderForAnotherComponent","renderingComponentName","dedupeKey","setStateComponentName","priorityLevel","actQueue","resolveFamily","failedBoundaries","setRefreshHandler","handler","family","currentRender","syntheticType","prevType","nextType","needsCompareFamilies","$$typeofNextType","prevFamily","scheduleRefresh","staleFamilies","updatedFamilies","scheduleFibersWithFamiliesRecursively","scheduleRoot","updateContainer","candidateType","needsRender","needsRemount","findHostInstancesForRefresh","families","hostInstances","types","findHostInstancesForMatchingFibersRecursively","didMatch","findHostInstancesForFiberShallowly","foundHostInstances","findChildHostInstancesForFiberShallowly","hasBadMapPolyfill","nonExtensibleObject","preventExtensions","FiberNode","Number","NaN","createFiber","shouldConstruct$1","currentDependencies","createHostRootFiber","isStrictMode","concurrentUpdatesByDefaultOverride","fiberTag","getTag","createFiberFromProfiler","createFiberFromSuspense","createFiberFromSuspenseList","elements","primaryChildInstance","content","pendingChildren","FiberRootNode","hydrate","_debugRootType","createFiberRoot","initialChildren","hydrationCallbacks","transitionCallbacks","uninitializedFiber","_initialState","cache","transitions","ReactVersion","didWarnAboutNestedUpdates","getContextForSubtree","parentComponent","createContainer","current$1","getPublicRootInstance","containerFiber","shouldErrorImpl","shouldSuspendImpl","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","scheduleUpdate","setErrorHandler","setSuspenseHandler","copyWithDeleteImpl","obj","path","updated","copyWithDelete","copyWithRenameImpl","oldPath","newPath","oldKey","newKey","copyWithRename","copyWithSetImpl","copyWithSet","findHook","newShouldErrorImpl","newShouldSuspendImpl","findHostInstanceByFiber","hostFiber","emptyFindFiberByHostInstance","getCurrentFiberForDevTools","injectIntoDevTools","devToolsConfig","findFiberByHostInstance","bundleType","version","rendererPackageName","rendererConfig","currentDispatcherRef","getCurrentFiber","reconcilerVersion","act","unstable_act","defaultTestOptions","toJSON","_inst$props","renderedChildren","renderedChild","json","childrenToTree","nodeAndSiblingsArray","toTree","flatten","nodeWithSibling","arr","result","n","el","nodeType","rendered","validWrapperTypes","getChildren","startingNode","descend","wrapFiber","ReactTestInstance","_proto","_currentFiber","find","predicate","expectOne","findAll","deep","findByType","findAllByType","findByProps","findAllByProps","JSON","stringify","_findAll","propsMatch","results","all","filter","isConcurrent","concurrentUpdatesByDefault","unstable_isConcurrent","unstable_strictMode","entry","_Scheduler","newElement","unmount","getInstance","unstable_flushSync","fiberToWrapper","wrapper","exports","unstable_batchedUpdates"],"sources":["react-test-renderer.development.js"],"sourcesContent":["/**\n * @license React\n * react-test-renderer.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar React = require('react');\nvar Scheduler = require('scheduler/unstable_mock');\nvar Scheduler$1 = require('scheduler');\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      printWarning('warn', format, args);\n    }\n  }\n}\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar assign = Object.assign;\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n *\n * Note that this module is currently shared and assumed to be stateless.\n * If this becomes an actual Map, that will break.\n */\nfunction get(key) {\n  return key._reactInternals;\n}\nfunction set(key, value) {\n  key._reactInternals = value;\n}\n\nvar enableSchedulingProfiler = false;\nvar enableProfilerTimer = true;\nvar enableProfilerCommitHooks = true;\nvar enableLazyElements = false;\nvar warnAboutStringRefs = false;\nvar enableSuspenseAvoidThisFallback = false;\nvar enableNewReconciler = false;\nvar enableLazyContextPropagation = false;\nvar enableLegacyHidden = false;\n\nvar FunctionComponent = 0;\nvar ClassComponent = 1;\nvar IndeterminateComponent = 2; // Before we know whether it is function or class\n\nvar HostRoot = 3; // Root of a host tree. Could be nested inside another node.\n\nvar HostPortal = 4; // A subtree. Could be an entry point to a different renderer.\n\nvar HostComponent = 5;\nvar HostText = 6;\nvar Fragment = 7;\nvar Mode = 8;\nvar ContextConsumer = 9;\nvar ContextProvider = 10;\nvar ForwardRef = 11;\nvar Profiler = 12;\nvar SuspenseComponent = 13;\nvar MemoComponent = 14;\nvar SimpleMemoComponent = 15;\nvar LazyComponent = 16;\nvar IncompleteClassComponent = 17;\nvar DehydratedFragment = 18;\nvar SuspenseListComponent = 19;\nvar ScopeComponent = 21;\nvar OffscreenComponent = 22;\nvar LegacyHiddenComponent = 23;\nvar CacheComponent = 24;\nvar TracingMarkerComponent = 25;\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_SCOPE_TYPE = Symbol.for('react.scope');\nvar REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for('react.debug_trace_mode');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nfunction getWrappedName$1(outerType, innerType, wrapperName) {\n  var functionName = innerType.displayName || innerType.name || '';\n  return outerType.displayName || (functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName);\n} // Keep in sync with shared/getComponentNameFromType\n\n\nfunction getContextName$1(type) {\n  return type.displayName || 'Context';\n}\n\nfunction getComponentNameFromFiber(fiber) {\n  var tag = fiber.tag,\n      type = fiber.type;\n\n  switch (tag) {\n    case CacheComponent:\n      return 'Cache';\n\n    case ContextConsumer:\n      var context = type;\n      return getContextName$1(context) + '.Consumer';\n\n    case ContextProvider:\n      var provider = type;\n      return getContextName$1(provider._context) + '.Provider';\n\n    case DehydratedFragment:\n      return 'DehydratedFragment';\n\n    case ForwardRef:\n      return getWrappedName$1(type, type.render, 'ForwardRef');\n\n    case Fragment:\n      return 'Fragment';\n\n    case HostComponent:\n      // Host component type is the display name (e.g. \"div\", \"View\")\n      return type;\n\n    case HostPortal:\n      return 'Portal';\n\n    case HostRoot:\n      return 'Root';\n\n    case HostText:\n      return 'Text';\n\n    case LazyComponent:\n      // Name comes from the type in this case; we don't have a tag.\n      return getComponentNameFromType(type);\n\n    case Mode:\n      if (type === REACT_STRICT_MODE_TYPE) {\n        // Don't be less specific than shared/getComponentNameFromType\n        return 'StrictMode';\n      }\n\n      return 'Mode';\n\n    case OffscreenComponent:\n      return 'Offscreen';\n\n    case Profiler:\n      return 'Profiler';\n\n    case ScopeComponent:\n      return 'Scope';\n\n    case SuspenseComponent:\n      return 'Suspense';\n\n    case SuspenseListComponent:\n      return 'SuspenseList';\n\n    case TracingMarkerComponent:\n      return 'TracingMarker';\n    // The display name for this tags come from the user-provided type:\n\n    case ClassComponent:\n    case FunctionComponent:\n    case IncompleteClassComponent:\n    case IndeterminateComponent:\n    case MemoComponent:\n    case SimpleMemoComponent:\n      if (typeof type === 'function') {\n        return type.displayName || type.name || null;\n      }\n\n      if (typeof type === 'string') {\n        return type;\n      }\n\n      break;\n\n  }\n\n  return null;\n}\n\n// Don't change these two values. They're used by React Dev Tools.\nvar NoFlags =\n/*                      */\n0;\nvar PerformedWork =\n/*                */\n1; // You can change the rest (and add more).\n\nvar Placement =\n/*                    */\n2;\nvar Update =\n/*                       */\n4;\nvar PlacementAndUpdate =\n/*           */\nPlacement | Update;\nvar ChildDeletion =\n/*                */\n16;\nvar ContentReset =\n/*                 */\n32;\nvar Callback =\n/*                     */\n64;\nvar DidCapture =\n/*                   */\n128;\nvar ForceClientRender =\n/*            */\n256;\nvar Ref =\n/*                          */\n512;\nvar Snapshot =\n/*                     */\n1024;\nvar Passive =\n/*                      */\n2048;\nvar Hydrating =\n/*                    */\n4096;\nvar HydratingAndUpdate =\n/*           */\nHydrating | Update;\nvar Visibility =\n/*                   */\n8192;\nvar StoreConsistency =\n/*             */\n16384;\nvar LifecycleEffectMask = Passive | Update | Callback | Ref | Snapshot | StoreConsistency; // Union of all commit flags (flags with the lifetime of a particular commit)\n\nvar HostEffectMask =\n/*               */\n32767; // These are not really side effects, but we still reuse this field.\n\nvar Incomplete =\n/*                   */\n32768;\nvar ShouldCapture =\n/*                */\n65536;\nvar ForceUpdateForLegacySuspense =\n/* */\n131072;\nvar Forked =\n/*                       */\n1048576; // Static tags describe aspects of a fiber that are not specific to a render,\n// e.g. a fiber uses a passive effect (even if there are no updates on this particular render).\n// This enables us to defer more work in the unmount case,\n// since we can defer traversing the tree during layout to look for Passive effects,\n// and instead rely on the static flag as a signal that there may be cleanup work.\n\nvar RefStatic =\n/*                    */\n2097152;\nvar LayoutStatic =\n/*                 */\n4194304;\nvar PassiveStatic =\n/*                */\n8388608; // These flags allow us to traverse to fibers that have effects on mount\n// don't contain effects, by checking subtreeFlags.\n\nvar BeforeMutationMask = // TODO: Remove Update flag from before mutation phase by re-landing Visibility\n// flag logic (see #20043)\nUpdate | Snapshot | ( 0);\nvar MutationMask = Placement | Update | ChildDeletion | ContentReset | Ref | Hydrating | Visibility;\nvar LayoutMask = Update | Callback | Ref | Visibility; // TODO: Split into PassiveMountMask and PassiveUnmountMask\n\nvar PassiveMask = Passive | ChildDeletion; // Union of tags that don't get reset on clones.\n// This allows certain concepts to persist without recalculating them,\n// e.g. whether a subtree contains passive effects or portals.\n\nvar StaticMask = LayoutStatic | PassiveStatic | RefStatic;\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nfunction getNearestMountedFiber(fiber) {\n  var node = fiber;\n  var nearestMounted = fiber;\n\n  if (!fiber.alternate) {\n    // If there is no alternate, this might be a new tree that isn't inserted\n    // yet. If it is, then it will have a pending insertion effect on it.\n    var nextNode = node;\n\n    do {\n      node = nextNode;\n\n      if ((node.flags & (Placement | Hydrating)) !== NoFlags) {\n        // This is an insertion or in-progress hydration. The nearest possible\n        // mounted fiber is the parent but we need to continue to figure out\n        // if that one is still mounted.\n        nearestMounted = node.return;\n      }\n\n      nextNode = node.return;\n    } while (nextNode);\n  } else {\n    while (node.return) {\n      node = node.return;\n    }\n  }\n\n  if (node.tag === HostRoot) {\n    // TODO: Check if this was a nested HostRoot when used with\n    // renderContainerIntoSubtree.\n    return nearestMounted;\n  } // If we didn't hit the root, that means that we're in an disconnected tree\n  // that has been unmounted.\n\n\n  return null;\n}\nfunction isFiberMounted(fiber) {\n  return getNearestMountedFiber(fiber) === fiber;\n}\nfunction isMounted(component) {\n  {\n    var owner = ReactCurrentOwner.current;\n\n    if (owner !== null && owner.tag === ClassComponent) {\n      var ownerFiber = owner;\n      var instance = ownerFiber.stateNode;\n\n      if (!instance._warnedAboutRefsInRender) {\n        error('%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentNameFromFiber(ownerFiber) || 'A component');\n      }\n\n      instance._warnedAboutRefsInRender = true;\n    }\n  }\n\n  var fiber = get(component);\n\n  if (!fiber) {\n    return false;\n  }\n\n  return getNearestMountedFiber(fiber) === fiber;\n}\n\nfunction assertIsMounted(fiber) {\n  if (getNearestMountedFiber(fiber) !== fiber) {\n    throw new Error('Unable to find node on an unmounted component.');\n  }\n}\n\nfunction findCurrentFiberUsingSlowPath(fiber) {\n  var alternate = fiber.alternate;\n\n  if (!alternate) {\n    // If there is no alternate, then we only need to check if it is mounted.\n    var nearestMounted = getNearestMountedFiber(fiber);\n\n    if (nearestMounted === null) {\n      throw new Error('Unable to find node on an unmounted component.');\n    }\n\n    if (nearestMounted !== fiber) {\n      return null;\n    }\n\n    return fiber;\n  } // If we have two possible branches, we'll walk backwards up to the root\n  // to see what path the root points to. On the way we may hit one of the\n  // special cases and we'll deal with them.\n\n\n  var a = fiber;\n  var b = alternate;\n\n  while (true) {\n    var parentA = a.return;\n\n    if (parentA === null) {\n      // We're at the root.\n      break;\n    }\n\n    var parentB = parentA.alternate;\n\n    if (parentB === null) {\n      // There is no alternate. This is an unusual case. Currently, it only\n      // happens when a Suspense component is hidden. An extra fragment fiber\n      // is inserted in between the Suspense fiber and its children. Skip\n      // over this extra fragment fiber and proceed to the next parent.\n      var nextParent = parentA.return;\n\n      if (nextParent !== null) {\n        a = b = nextParent;\n        continue;\n      } // If there's no parent, we're at the root.\n\n\n      break;\n    } // If both copies of the parent fiber point to the same child, we can\n    // assume that the child is current. This happens when we bailout on low\n    // priority: the bailed out fiber's child reuses the current child.\n\n\n    if (parentA.child === parentB.child) {\n      var child = parentA.child;\n\n      while (child) {\n        if (child === a) {\n          // We've determined that A is the current branch.\n          assertIsMounted(parentA);\n          return fiber;\n        }\n\n        if (child === b) {\n          // We've determined that B is the current branch.\n          assertIsMounted(parentA);\n          return alternate;\n        }\n\n        child = child.sibling;\n      } // We should never have an alternate for any mounting node. So the only\n      // way this could possibly happen is if this was unmounted, if at all.\n\n\n      throw new Error('Unable to find node on an unmounted component.');\n    }\n\n    if (a.return !== b.return) {\n      // The return pointer of A and the return pointer of B point to different\n      // fibers. We assume that return pointers never criss-cross, so A must\n      // belong to the child set of A.return, and B must belong to the child\n      // set of B.return.\n      a = parentA;\n      b = parentB;\n    } else {\n      // The return pointers point to the same fiber. We'll have to use the\n      // default, slow path: scan the child sets of each parent alternate to see\n      // which child belongs to which set.\n      //\n      // Search parent A's child set\n      var didFindChild = false;\n      var _child = parentA.child;\n\n      while (_child) {\n        if (_child === a) {\n          didFindChild = true;\n          a = parentA;\n          b = parentB;\n          break;\n        }\n\n        if (_child === b) {\n          didFindChild = true;\n          b = parentA;\n          a = parentB;\n          break;\n        }\n\n        _child = _child.sibling;\n      }\n\n      if (!didFindChild) {\n        // Search parent B's child set\n        _child = parentB.child;\n\n        while (_child) {\n          if (_child === a) {\n            didFindChild = true;\n            a = parentB;\n            b = parentA;\n            break;\n          }\n\n          if (_child === b) {\n            didFindChild = true;\n            b = parentB;\n            a = parentA;\n            break;\n          }\n\n          _child = _child.sibling;\n        }\n\n        if (!didFindChild) {\n          throw new Error('Child was not found in either parent set. This indicates a bug ' + 'in React related to the return pointer. Please file an issue.');\n        }\n      }\n    }\n\n    if (a.alternate !== b) {\n      throw new Error(\"Return fibers should always be each others' alternates. \" + 'This error is likely caused by a bug in React. Please file an issue.');\n    }\n  } // If the root is not a host container, we're in a disconnected tree. I.e.\n  // unmounted.\n\n\n  if (a.tag !== HostRoot) {\n    throw new Error('Unable to find node on an unmounted component.');\n  }\n\n  if (a.stateNode.current === a) {\n    // We've determined that A is the current branch.\n    return fiber;\n  } // Otherwise B has to be current branch.\n\n\n  return alternate;\n}\nfunction findCurrentHostFiber(parent) {\n  var currentParent = findCurrentFiberUsingSlowPath(parent);\n  return currentParent !== null ? findCurrentHostFiberImpl(currentParent) : null;\n}\n\nfunction findCurrentHostFiberImpl(node) {\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  if (node.tag === HostComponent || node.tag === HostText) {\n    return node;\n  }\n\n  var child = node.child;\n\n  while (child !== null) {\n    var match = findCurrentHostFiberImpl(child);\n\n    if (match !== null) {\n      return match;\n    }\n\n    child = child.sibling;\n  }\n\n  return null;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n// This module only exists as an ESM wrapper around the external CommonJS\nvar scheduleCallback = Scheduler$1.unstable_scheduleCallback;\nvar cancelCallback = Scheduler$1.unstable_cancelCallback;\nvar shouldYield = Scheduler$1.unstable_shouldYield;\nvar requestPaint = Scheduler$1.unstable_requestPaint;\nvar now = Scheduler$1.unstable_now;\nvar ImmediatePriority = Scheduler$1.unstable_ImmediatePriority;\nvar UserBlockingPriority = Scheduler$1.unstable_UserBlockingPriority;\nvar NormalPriority = Scheduler$1.unstable_NormalPriority;\nvar IdlePriority = Scheduler$1.unstable_IdlePriority;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar rendererID = null;\nvar injectedHook = null;\nvar hasLoggedError = false;\nvar isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';\nfunction injectInternals(internals) {\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n    // No DevTools\n    return false;\n  }\n\n  var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n\n  if (hook.isDisabled) {\n    // This isn't a real property on the hook, but it can be set to opt out\n    // of DevTools integration and associated warnings and logs.\n    // https://github.com/facebook/react/issues/3877\n    return true;\n  }\n\n  if (!hook.supportsFiber) {\n    {\n      error('The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://reactjs.org/link/react-devtools');\n    } // DevTools exists, even though it doesn't support Fiber.\n\n\n    return true;\n  }\n\n  try {\n    if (enableSchedulingProfiler) {\n      // Conditionally inject these hooks only if Timeline profiler is supported by this build.\n      // This gives DevTools a way to feature detect that isn't tied to version number\n      // (since profiling and timeline are controlled by different feature flags).\n      internals = assign({}, internals, {\n        getLaneLabelMap: getLaneLabelMap,\n        injectProfilingHooks: injectProfilingHooks\n      });\n    }\n\n    rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.\n\n    injectedHook = hook;\n  } catch (err) {\n    // Catch all errors because it is unsafe to throw during initialization.\n    {\n      error('React instrumentation encountered an error: %s.', err);\n    }\n  }\n\n  if (hook.checkDCE) {\n    // This is the real DevTools.\n    return true;\n  } else {\n    // This is likely a hook installed by Fast Refresh runtime.\n    return false;\n  }\n}\nfunction onScheduleRoot(root, children) {\n  {\n    if (injectedHook && typeof injectedHook.onScheduleFiberRoot === 'function') {\n      try {\n        injectedHook.onScheduleFiberRoot(rendererID, root, children);\n      } catch (err) {\n        if ( !hasLoggedError) {\n          hasLoggedError = true;\n\n          error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\nfunction onCommitRoot(root, eventPriority) {\n  if (injectedHook && typeof injectedHook.onCommitFiberRoot === 'function') {\n    try {\n      var didError = (root.current.flags & DidCapture) === DidCapture;\n\n      if (enableProfilerTimer) {\n        var schedulerPriority;\n\n        switch (eventPriority) {\n          case DiscreteEventPriority:\n            schedulerPriority = ImmediatePriority;\n            break;\n\n          case ContinuousEventPriority:\n            schedulerPriority = UserBlockingPriority;\n            break;\n\n          case DefaultEventPriority:\n            schedulerPriority = NormalPriority;\n            break;\n\n          case IdleEventPriority:\n            schedulerPriority = IdlePriority;\n            break;\n\n          default:\n            schedulerPriority = NormalPriority;\n            break;\n        }\n\n        injectedHook.onCommitFiberRoot(rendererID, root, schedulerPriority, didError);\n      } else {\n        injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);\n      }\n    } catch (err) {\n      {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n\n          error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\nfunction onPostCommitRoot(root) {\n  if (injectedHook && typeof injectedHook.onPostCommitFiberRoot === 'function') {\n    try {\n      injectedHook.onPostCommitFiberRoot(rendererID, root);\n    } catch (err) {\n      {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n\n          error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\nfunction onCommitUnmount(fiber) {\n  if (injectedHook && typeof injectedHook.onCommitFiberUnmount === 'function') {\n    try {\n      injectedHook.onCommitFiberUnmount(rendererID, fiber);\n    } catch (err) {\n      {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n\n          error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n\nfunction injectProfilingHooks(profilingHooks) {\n}\n\nfunction getLaneLabelMap() {\n  {\n    return null;\n  }\n}\nfunction markComponentRenderStopped() {\n}\nfunction markComponentErrored(fiber, thrownValue, lanes) {\n}\nfunction markComponentSuspended(fiber, wakeable, lanes) {\n}\n\nvar NoMode =\n/*                         */\n0; // TODO: Remove ConcurrentMode by reading from the root tag instead\n\nvar ConcurrentMode =\n/*                 */\n1;\nvar ProfileMode =\n/*                    */\n2;\nvar StrictLegacyMode =\n/*               */\n8;\n\n// TODO: This is pretty well supported by browsers. Maybe we can drop it.\nvar clz32 = Math.clz32 ? Math.clz32 : clz32Fallback; // Count leading zeros.\n// Based on:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\nvar log = Math.log;\nvar LN2 = Math.LN2;\n\nfunction clz32Fallback(x) {\n  var asUint = x >>> 0;\n\n  if (asUint === 0) {\n    return 32;\n  }\n\n  return 31 - (log(asUint) / LN2 | 0) | 0;\n}\n\n// If those values are changed that package should be rebuilt and redeployed.\n\nvar TotalLanes = 31;\nvar NoLanes =\n/*                        */\n0;\nvar NoLane =\n/*                          */\n0;\nvar SyncLane =\n/*                        */\n1;\nvar InputContinuousHydrationLane =\n/*    */\n2;\nvar InputContinuousLane =\n/*            */\n4;\nvar DefaultHydrationLane =\n/*            */\n8;\nvar DefaultLane =\n/*                    */\n16;\nvar TransitionHydrationLane =\n/*                */\n32;\nvar TransitionLanes =\n/*                       */\n4194240;\nvar TransitionLane1 =\n/*                        */\n64;\nvar TransitionLane2 =\n/*                        */\n128;\nvar TransitionLane3 =\n/*                        */\n256;\nvar TransitionLane4 =\n/*                        */\n512;\nvar TransitionLane5 =\n/*                        */\n1024;\nvar TransitionLane6 =\n/*                        */\n2048;\nvar TransitionLane7 =\n/*                        */\n4096;\nvar TransitionLane8 =\n/*                        */\n8192;\nvar TransitionLane9 =\n/*                        */\n16384;\nvar TransitionLane10 =\n/*                       */\n32768;\nvar TransitionLane11 =\n/*                       */\n65536;\nvar TransitionLane12 =\n/*                       */\n131072;\nvar TransitionLane13 =\n/*                       */\n262144;\nvar TransitionLane14 =\n/*                       */\n524288;\nvar TransitionLane15 =\n/*                       */\n1048576;\nvar TransitionLane16 =\n/*                       */\n2097152;\nvar RetryLanes =\n/*                            */\n130023424;\nvar RetryLane1 =\n/*                             */\n4194304;\nvar RetryLane2 =\n/*                             */\n8388608;\nvar RetryLane3 =\n/*                             */\n16777216;\nvar RetryLane4 =\n/*                             */\n33554432;\nvar RetryLane5 =\n/*                             */\n67108864;\nvar SomeRetryLane = RetryLane1;\nvar SelectiveHydrationLane =\n/*          */\n134217728;\nvar NonIdleLanes =\n/*                                 */\n268435455;\nvar IdleHydrationLane =\n/*               */\n268435456;\nvar IdleLane =\n/*                       */\n536870912;\nvar OffscreenLane =\n/*                   */\n1073741824; // This function is used for the experimental timeline (react-devtools-timeline)\nvar NoTimestamp = -1;\nvar nextTransitionLane = TransitionLane1;\nvar nextRetryLane = RetryLane1;\n\nfunction getHighestPriorityLanes(lanes) {\n  switch (getHighestPriorityLane(lanes)) {\n    case SyncLane:\n      return SyncLane;\n\n    case InputContinuousHydrationLane:\n      return InputContinuousHydrationLane;\n\n    case InputContinuousLane:\n      return InputContinuousLane;\n\n    case DefaultHydrationLane:\n      return DefaultHydrationLane;\n\n    case DefaultLane:\n      return DefaultLane;\n\n    case TransitionHydrationLane:\n      return TransitionHydrationLane;\n\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n      return lanes & TransitionLanes;\n\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      return lanes & RetryLanes;\n\n    case SelectiveHydrationLane:\n      return SelectiveHydrationLane;\n\n    case IdleHydrationLane:\n      return IdleHydrationLane;\n\n    case IdleLane:\n      return IdleLane;\n\n    case OffscreenLane:\n      return OffscreenLane;\n\n    default:\n      {\n        error('Should have found matching lanes. This is a bug in React.');\n      } // This shouldn't be reachable, but as a fallback, return the entire bitmask.\n\n\n      return lanes;\n  }\n}\n\nfunction getNextLanes(root, wipLanes) {\n  // Early bailout if there's no pending work left.\n  var pendingLanes = root.pendingLanes;\n\n  if (pendingLanes === NoLanes) {\n    return NoLanes;\n  }\n\n  var nextLanes = NoLanes;\n  var suspendedLanes = root.suspendedLanes;\n  var pingedLanes = root.pingedLanes; // Do not work on any idle work until all the non-idle work has finished,\n  // even if the work is suspended.\n\n  var nonIdlePendingLanes = pendingLanes & NonIdleLanes;\n\n  if (nonIdlePendingLanes !== NoLanes) {\n    var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;\n\n    if (nonIdleUnblockedLanes !== NoLanes) {\n      nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);\n    } else {\n      var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;\n\n      if (nonIdlePingedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);\n      }\n    }\n  } else {\n    // The only remaining work is Idle.\n    var unblockedLanes = pendingLanes & ~suspendedLanes;\n\n    if (unblockedLanes !== NoLanes) {\n      nextLanes = getHighestPriorityLanes(unblockedLanes);\n    } else {\n      if (pingedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(pingedLanes);\n      }\n    }\n  }\n\n  if (nextLanes === NoLanes) {\n    // This should only be reachable if we're suspended\n    // TODO: Consider warning in this path if a fallback timer is not scheduled.\n    return NoLanes;\n  } // If we're already in the middle of a render, switching lanes will interrupt\n  // it and we'll lose our progress. We should only do this if the new lanes are\n  // higher priority.\n\n\n  if (wipLanes !== NoLanes && wipLanes !== nextLanes && // If we already suspended with a delay, then interrupting is fine. Don't\n  // bother waiting until the root is complete.\n  (wipLanes & suspendedLanes) === NoLanes) {\n    var nextLane = getHighestPriorityLane(nextLanes);\n    var wipLane = getHighestPriorityLane(wipLanes);\n\n    if ( // Tests whether the next lane is equal or lower priority than the wip\n    // one. This works because the bits decrease in priority as you go left.\n    nextLane >= wipLane || // Default priority updates should not interrupt transition updates. The\n    // only difference between default updates and transition updates is that\n    // default updates do not support refresh transitions.\n    nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes) {\n      // Keep working on the existing in-progress tree. Do not interrupt.\n      return wipLanes;\n    }\n  }\n\n  if ((nextLanes & InputContinuousLane) !== NoLanes) {\n    // When updates are sync by default, we entangle continuous priority updates\n    // and default updates, so they render in the same batch. The only reason\n    // they use separate lanes is because continuous updates should interrupt\n    // transitions, but default updates should not.\n    nextLanes |= pendingLanes & DefaultLane;\n  } // Check for entangled lanes and add them to the batch.\n  //\n  // A lane is said to be entangled with another when it's not allowed to render\n  // in a batch that does not also include the other lane. Typically we do this\n  // when multiple updates have the same source, and we only want to respond to\n  // the most recent event from that source.\n  //\n  // Note that we apply entanglements *after* checking for partial work above.\n  // This means that if a lane is entangled during an interleaved event while\n  // it's already rendering, we won't interrupt it. This is intentional, since\n  // entanglement is usually \"best effort\": we'll try our best to render the\n  // lanes in the same batch, but it's not worth throwing out partially\n  // completed work in order to do it.\n  // TODO: Reconsider this. The counter-argument is that the partial work\n  // represents an intermediate state, which we don't want to show to the user.\n  // And by spending extra time finishing it, we're increasing the amount of\n  // time it takes to show the final state, which is what they are actually\n  // waiting for.\n  //\n  // For those exceptions where entanglement is semantically important, like\n  // useMutableSource, we should ensure that there is no partial work at the\n  // time we apply the entanglement.\n\n\n  var entangledLanes = root.entangledLanes;\n\n  if (entangledLanes !== NoLanes) {\n    var entanglements = root.entanglements;\n    var lanes = nextLanes & entangledLanes;\n\n    while (lanes > 0) {\n      var index = pickArbitraryLaneIndex(lanes);\n      var lane = 1 << index;\n      nextLanes |= entanglements[index];\n      lanes &= ~lane;\n    }\n  }\n\n  return nextLanes;\n}\nfunction getMostRecentEventTime(root, lanes) {\n  var eventTimes = root.eventTimes;\n  var mostRecentEventTime = NoTimestamp;\n\n  while (lanes > 0) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n    var eventTime = eventTimes[index];\n\n    if (eventTime > mostRecentEventTime) {\n      mostRecentEventTime = eventTime;\n    }\n\n    lanes &= ~lane;\n  }\n\n  return mostRecentEventTime;\n}\n\nfunction computeExpirationTime(lane, currentTime) {\n  switch (lane) {\n    case SyncLane:\n    case InputContinuousHydrationLane:\n    case InputContinuousLane:\n      // User interactions should expire slightly more quickly.\n      //\n      // NOTE: This is set to the corresponding constant as in Scheduler.js.\n      // When we made it larger, a product metric in www regressed, suggesting\n      // there's a user interaction that's being starved by a series of\n      // synchronous updates. If that theory is correct, the proper solution is\n      // to fix the starvation. However, this scenario supports the idea that\n      // expiration times are an important safeguard when starvation\n      // does happen.\n      return currentTime + 250;\n\n    case DefaultHydrationLane:\n    case DefaultLane:\n    case TransitionHydrationLane:\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n      return currentTime + 5000;\n\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      // TODO: Retries should be allowed to expire if they are CPU bound for\n      // too long, but when I made this change it caused a spike in browser\n      // crashes. There must be some other underlying bug; not super urgent but\n      // ideally should figure out why and fix it. Unfortunately we don't have\n      // a repro for the crashes, only detected via production metrics.\n      return NoTimestamp;\n\n    case SelectiveHydrationLane:\n    case IdleHydrationLane:\n    case IdleLane:\n    case OffscreenLane:\n      // Anything idle priority or lower should never expire.\n      return NoTimestamp;\n\n    default:\n      {\n        error('Should have found matching lanes. This is a bug in React.');\n      }\n\n      return NoTimestamp;\n  }\n}\n\nfunction markStarvedLanesAsExpired(root, currentTime) {\n  // TODO: This gets called every time we yield. We can optimize by storing\n  // the earliest expiration time on the root. Then use that to quickly bail out\n  // of this function.\n  var pendingLanes = root.pendingLanes;\n  var suspendedLanes = root.suspendedLanes;\n  var pingedLanes = root.pingedLanes;\n  var expirationTimes = root.expirationTimes; // Iterate through the pending lanes and check if we've reached their\n  // expiration time. If so, we'll assume the update is being starved and mark\n  // it as expired to force it to finish.\n\n  var lanes = pendingLanes;\n\n  while (lanes > 0) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n    var expirationTime = expirationTimes[index];\n\n    if (expirationTime === NoTimestamp) {\n      // Found a pending lane with no expiration time. If it's not suspended, or\n      // if it's pinged, assume it's CPU-bound. Compute a new expiration time\n      // using the current time.\n      if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) {\n        // Assumes timestamps are monotonically increasing.\n        expirationTimes[index] = computeExpirationTime(lane, currentTime);\n      }\n    } else if (expirationTime <= currentTime) {\n      // This lane expired\n      root.expiredLanes |= lane;\n    }\n\n    lanes &= ~lane;\n  }\n} // This returns the highest priority pending lanes regardless of whether they\nfunction getLanesToRetrySynchronouslyOnError(root) {\n  var everythingButOffscreen = root.pendingLanes & ~OffscreenLane;\n\n  if (everythingButOffscreen !== NoLanes) {\n    return everythingButOffscreen;\n  }\n\n  if (everythingButOffscreen & OffscreenLane) {\n    return OffscreenLane;\n  }\n\n  return NoLanes;\n}\nfunction includesSyncLane(lanes) {\n  return (lanes & SyncLane) !== NoLanes;\n}\nfunction includesNonIdleWork(lanes) {\n  return (lanes & NonIdleLanes) !== NoLanes;\n}\nfunction includesOnlyRetries(lanes) {\n  return (lanes & RetryLanes) === lanes;\n}\nfunction includesOnlyTransitions(lanes) {\n  return (lanes & TransitionLanes) === lanes;\n}\nfunction includesBlockingLane(root, lanes) {\n\n  var SyncDefaultLanes = InputContinuousHydrationLane | InputContinuousLane | DefaultHydrationLane | DefaultLane;\n  return (lanes & SyncDefaultLanes) !== NoLanes;\n}\nfunction includesExpiredLane(root, lanes) {\n  // This is a separate check from includesBlockingLane because a lane can\n  // expire after a render has already started.\n  return (lanes & root.expiredLanes) !== NoLanes;\n}\nfunction isTransitionLane(lane) {\n  return (lane & TransitionLanes) !== 0;\n}\nfunction claimNextTransitionLane() {\n  // Cycle through the lanes, assigning each new transition to the next lane.\n  // In most cases, this means every transition gets its own lane, until we\n  // run out of lanes and cycle back to the beginning.\n  var lane = nextTransitionLane;\n  nextTransitionLane <<= 1;\n\n  if ((nextTransitionLane & TransitionLanes) === 0) {\n    nextTransitionLane = TransitionLane1;\n  }\n\n  return lane;\n}\nfunction claimNextRetryLane() {\n  var lane = nextRetryLane;\n  nextRetryLane <<= 1;\n\n  if ((nextRetryLane & RetryLanes) === 0) {\n    nextRetryLane = RetryLane1;\n  }\n\n  return lane;\n}\nfunction getHighestPriorityLane(lanes) {\n  return lanes & -lanes;\n}\nfunction pickArbitraryLane(lanes) {\n  // This wrapper function gets inlined. Only exists so to communicate that it\n  // doesn't matter which bit is selected; you can pick any bit without\n  // affecting the algorithms where its used. Here I'm using\n  // getHighestPriorityLane because it requires the fewest operations.\n  return getHighestPriorityLane(lanes);\n}\n\nfunction pickArbitraryLaneIndex(lanes) {\n  return 31 - clz32(lanes);\n}\n\nfunction laneToIndex(lane) {\n  return pickArbitraryLaneIndex(lane);\n}\n\nfunction includesSomeLane(a, b) {\n  return (a & b) !== NoLanes;\n}\nfunction isSubsetOfLanes(set, subset) {\n  return (set & subset) === subset;\n}\nfunction mergeLanes(a, b) {\n  return a | b;\n}\nfunction removeLanes(set, subset) {\n  return set & ~subset;\n}\nfunction intersectLanes(a, b) {\n  return a & b;\n} // Seems redundant, but it changes the type from a single lane (used for\n// updates) to a group of lanes (used for flushing work).\n\nfunction laneToLanes(lane) {\n  return lane;\n}\nfunction createLaneMap(initial) {\n  // Intentionally pushing one by one.\n  // https://v8.dev/blog/elements-kinds#avoid-creating-holes\n  var laneMap = [];\n\n  for (var i = 0; i < TotalLanes; i++) {\n    laneMap.push(initial);\n  }\n\n  return laneMap;\n}\nfunction markRootUpdated(root, updateLane, eventTime) {\n  root.pendingLanes |= updateLane; // If there are any suspended transitions, it's possible this new update\n  // could unblock them. Clear the suspended lanes so that we can try rendering\n  // them again.\n  //\n  // TODO: We really only need to unsuspend only lanes that are in the\n  // `subtreeLanes` of the updated fiber, or the update lanes of the return\n  // path. This would exclude suspended updates in an unrelated sibling tree,\n  // since there's no way for this update to unblock it.\n  //\n  // We don't do this if the incoming update is idle, because we never process\n  // idle updates until after all the regular updates have finished; there's no\n  // way it could unblock a transition.\n\n  if (updateLane !== IdleLane) {\n    root.suspendedLanes = NoLanes;\n    root.pingedLanes = NoLanes;\n  }\n\n  var eventTimes = root.eventTimes;\n  var index = laneToIndex(updateLane); // We can always overwrite an existing timestamp because we prefer the most\n  // recent event, and we assume time is monotonically increasing.\n\n  eventTimes[index] = eventTime;\n}\nfunction markRootSuspended(root, suspendedLanes) {\n  root.suspendedLanes |= suspendedLanes;\n  root.pingedLanes &= ~suspendedLanes; // The suspended lanes are no longer CPU-bound. Clear their expiration times.\n\n  var expirationTimes = root.expirationTimes;\n  var lanes = suspendedLanes;\n\n  while (lanes > 0) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n    expirationTimes[index] = NoTimestamp;\n    lanes &= ~lane;\n  }\n}\nfunction markRootPinged(root, pingedLanes, eventTime) {\n  root.pingedLanes |= root.suspendedLanes & pingedLanes;\n}\nfunction markRootFinished(root, remainingLanes) {\n  var noLongerPendingLanes = root.pendingLanes & ~remainingLanes;\n  root.pendingLanes = remainingLanes; // Let's try everything again\n\n  root.suspendedLanes = 0;\n  root.pingedLanes = 0;\n  root.expiredLanes &= remainingLanes;\n  root.mutableReadLanes &= remainingLanes;\n  root.entangledLanes &= remainingLanes;\n  var entanglements = root.entanglements;\n  var eventTimes = root.eventTimes;\n  var expirationTimes = root.expirationTimes; // Clear the lanes that no longer have pending work\n\n  var lanes = noLongerPendingLanes;\n\n  while (lanes > 0) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n    entanglements[index] = NoLanes;\n    eventTimes[index] = NoTimestamp;\n    expirationTimes[index] = NoTimestamp;\n    lanes &= ~lane;\n  }\n}\nfunction markRootEntangled(root, entangledLanes) {\n  // In addition to entangling each of the given lanes with each other, we also\n  // have to consider _transitive_ entanglements. For each lane that is already\n  // entangled with *any* of the given lanes, that lane is now transitively\n  // entangled with *all* the given lanes.\n  //\n  // Translated: If C is entangled with A, then entangling A with B also\n  // entangles C with B.\n  //\n  // If this is hard to grasp, it might help to intentionally break this\n  // function and look at the tests that fail in ReactTransition-test.js. Try\n  // commenting out one of the conditions below.\n  var rootEntangledLanes = root.entangledLanes |= entangledLanes;\n  var entanglements = root.entanglements;\n  var lanes = rootEntangledLanes;\n\n  while (lanes) {\n    var index = pickArbitraryLaneIndex(lanes);\n    var lane = 1 << index;\n\n    if ( // Is this one of the newly entangled lanes?\n    lane & entangledLanes | // Is this lane transitively entangled with the newly entangled lanes?\n    entanglements[index] & entangledLanes) {\n      entanglements[index] |= entangledLanes;\n    }\n\n    lanes &= ~lane;\n  }\n}\n\nvar DiscreteEventPriority = SyncLane;\nvar ContinuousEventPriority = InputContinuousLane;\nvar DefaultEventPriority = DefaultLane;\nvar IdleEventPriority = IdleLane;\nvar currentUpdatePriority = NoLane;\nfunction getCurrentUpdatePriority() {\n  return currentUpdatePriority;\n}\nfunction setCurrentUpdatePriority(newPriority) {\n  currentUpdatePriority = newPriority;\n}\nfunction higherEventPriority(a, b) {\n  return a !== 0 && a < b ? a : b;\n}\nfunction lowerEventPriority(a, b) {\n  return a === 0 || a > b ? a : b;\n}\nfunction isHigherEventPriority(a, b) {\n  return a !== 0 && a < b;\n}\nfunction lanesToEventPriority(lanes) {\n  var lane = getHighestPriorityLane(lanes);\n\n  if (!isHigherEventPriority(DiscreteEventPriority, lane)) {\n    return DiscreteEventPriority;\n  }\n\n  if (!isHigherEventPriority(ContinuousEventPriority, lane)) {\n    return ContinuousEventPriority;\n  }\n\n  if (includesNonIdleWork(lane)) {\n    return DefaultEventPriority;\n  }\n\n  return IdleEventPriority;\n}\n\n// Renderers that don't support hydration\n// can re-export everything from this module.\nfunction shim() {\n  throw new Error('The current renderer does not support hydration. ' + 'This error is likely caused by a bug in React. ' + 'Please file an issue.');\n} // Hydration (when unsupported)\nvar isSuspenseInstancePending = shim;\nvar isSuspenseInstanceFallback = shim;\nvar hydrateTextInstance = shim;\nvar errorHydratingContainer = shim;\n\nvar NO_CONTEXT = {};\nvar UPDATE_SIGNAL = {};\nvar nodeToInstanceMap = new WeakMap();\n\n{\n  Object.freeze(NO_CONTEXT);\n  Object.freeze(UPDATE_SIGNAL);\n}\n\nfunction getPublicInstance(inst) {\n  switch (inst.tag) {\n    case 'INSTANCE':\n      var createNodeMock = inst.rootContainerInstance.createNodeMock;\n      var mockNode = createNodeMock({\n        type: inst.type,\n        props: inst.props\n      });\n\n      if (typeof mockNode === 'object' && mockNode !== null) {\n        nodeToInstanceMap.set(mockNode, inst);\n      }\n\n      return mockNode;\n\n    default:\n      return inst;\n  }\n}\nfunction appendChild(parentInstance, child) {\n  {\n    if (!isArray(parentInstance.children)) {\n      error('An invalid container has been provided. ' + 'This may indicate that another renderer is being used in addition to the test renderer. ' + '(For example, ReactDOM.createPortal inside of a ReactTestRenderer tree.) ' + 'This is not supported.');\n    }\n  }\n\n  var index = parentInstance.children.indexOf(child);\n\n  if (index !== -1) {\n    parentInstance.children.splice(index, 1);\n  }\n\n  parentInstance.children.push(child);\n}\nfunction insertBefore(parentInstance, child, beforeChild) {\n  var index = parentInstance.children.indexOf(child);\n\n  if (index !== -1) {\n    parentInstance.children.splice(index, 1);\n  }\n\n  var beforeIndex = parentInstance.children.indexOf(beforeChild);\n  parentInstance.children.splice(beforeIndex, 0, child);\n}\nfunction removeChild(parentInstance, child) {\n  var index = parentInstance.children.indexOf(child);\n  parentInstance.children.splice(index, 1);\n}\nfunction clearContainer(container) {\n  container.children.splice(0);\n}\nfunction getRootHostContext(rootContainerInstance) {\n  return NO_CONTEXT;\n}\nfunction getChildHostContext(parentHostContext, type, rootContainerInstance) {\n  return NO_CONTEXT;\n}\nfunction prepareForCommit(containerInfo) {\n  // noop\n  return null;\n}\nfunction resetAfterCommit(containerInfo) {// noop\n}\nfunction createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {\n  return {\n    type: type,\n    props: props,\n    isHidden: false,\n    children: [],\n    internalInstanceHandle: internalInstanceHandle,\n    rootContainerInstance: rootContainerInstance,\n    tag: 'INSTANCE'\n  };\n}\nfunction appendInitialChild(parentInstance, child) {\n  var index = parentInstance.children.indexOf(child);\n\n  if (index !== -1) {\n    parentInstance.children.splice(index, 1);\n  }\n\n  parentInstance.children.push(child);\n}\nfunction prepareUpdate(testElement, type, oldProps, newProps, rootContainerInstance, hostContext) {\n  return UPDATE_SIGNAL;\n}\nfunction shouldSetTextContent(type, props) {\n  return false;\n}\nfunction createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {\n  return {\n    text: text,\n    isHidden: false,\n    tag: 'TEXT'\n  };\n}\nfunction getCurrentEventPriority() {\n  return DefaultEventPriority;\n}\nvar scheduleTimeout = setTimeout;\nvar cancelTimeout = clearTimeout;\nvar noTimeout = -1; // -------------------\nfunction commitUpdate(instance, updatePayload, type, oldProps, newProps, internalInstanceHandle) {\n  instance.type = type;\n  instance.props = newProps;\n}\nfunction commitTextUpdate(textInstance, oldText, newText) {\n  textInstance.text = newText;\n}\nfunction resetTextContent(testElement) {// noop\n}\nvar appendChildToContainer = appendChild;\nvar insertInContainerBefore = insertBefore;\nvar removeChildFromContainer = removeChild;\nfunction hideInstance(instance) {\n  instance.isHidden = true;\n}\nfunction hideTextInstance(textInstance) {\n  textInstance.isHidden = true;\n}\nfunction unhideInstance(instance, props) {\n  instance.isHidden = false;\n}\nfunction unhideTextInstance(textInstance, text) {\n  textInstance.isHidden = false;\n}\nfunction preparePortalMount(portalInstance) {// noop\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\n\nfunction describeClassComponentFrame(ctor, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(ctor, true);\n  }\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar valueStack = [];\nvar fiberStack;\n\n{\n  fiberStack = [];\n}\n\nvar index = -1;\n\nfunction createCursor(defaultValue) {\n  return {\n    current: defaultValue\n  };\n}\n\nfunction pop(cursor, fiber) {\n  if (index < 0) {\n    {\n      error('Unexpected pop.');\n    }\n\n    return;\n  }\n\n  {\n    if (fiber !== fiberStack[index]) {\n      error('Unexpected Fiber popped.');\n    }\n  }\n\n  cursor.current = valueStack[index];\n  valueStack[index] = null;\n\n  {\n    fiberStack[index] = null;\n  }\n\n  index--;\n}\n\nfunction push(cursor, value, fiber) {\n  index++;\n  valueStack[index] = cursor.current;\n\n  {\n    fiberStack[index] = fiber;\n  }\n\n  cursor.current = value;\n}\n\nvar warnedAboutMissingGetChildContext;\n\n{\n  warnedAboutMissingGetChildContext = {};\n}\n\nvar emptyContextObject = {};\n\n{\n  Object.freeze(emptyContextObject);\n} // A cursor to the current merged context object on the stack.\n\n\nvar contextStackCursor = createCursor(emptyContextObject); // A cursor to a boolean indicating whether the context has changed.\n\nvar didPerformWorkStackCursor = createCursor(false); // Keep track of the previous context object that was on the stack.\n// We use this to get access to the parent context after we have already\n// pushed the next context provider, and now need to merge their contexts.\n\nvar previousContext = emptyContextObject;\n\nfunction getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {\n  {\n    if (didPushOwnContextIfProvider && isContextProvider(Component)) {\n      // If the fiber is a context provider itself, when we read its context\n      // we may have already pushed its own child context on the stack. A context\n      // provider should not \"see\" its own child context. Therefore we read the\n      // previous (parent) context instead for a context provider.\n      return previousContext;\n    }\n\n    return contextStackCursor.current;\n  }\n}\n\nfunction cacheContext(workInProgress, unmaskedContext, maskedContext) {\n  {\n    var instance = workInProgress.stateNode;\n    instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;\n    instance.__reactInternalMemoizedMaskedChildContext = maskedContext;\n  }\n}\n\nfunction getMaskedContext(workInProgress, unmaskedContext) {\n  {\n    var type = workInProgress.type;\n    var contextTypes = type.contextTypes;\n\n    if (!contextTypes) {\n      return emptyContextObject;\n    } // Avoid recreating masked context unless unmasked context has changed.\n    // Failing to do this will result in unnecessary calls to componentWillReceiveProps.\n    // This may trigger infinite loops if componentWillReceiveProps calls setState.\n\n\n    var instance = workInProgress.stateNode;\n\n    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {\n      return instance.__reactInternalMemoizedMaskedChildContext;\n    }\n\n    var context = {};\n\n    for (var key in contextTypes) {\n      context[key] = unmaskedContext[key];\n    }\n\n    {\n      var name = getComponentNameFromFiber(workInProgress) || 'Unknown';\n      checkPropTypes(contextTypes, context, 'context', name);\n    } // Cache unmasked context so we can avoid recreating masked context unless necessary.\n    // Context is created before the class component is instantiated so check for instance.\n\n\n    if (instance) {\n      cacheContext(workInProgress, unmaskedContext, context);\n    }\n\n    return context;\n  }\n}\n\nfunction hasContextChanged() {\n  {\n    return didPerformWorkStackCursor.current;\n  }\n}\n\nfunction isContextProvider(type) {\n  {\n    var childContextTypes = type.childContextTypes;\n    return childContextTypes !== null && childContextTypes !== undefined;\n  }\n}\n\nfunction popContext(fiber) {\n  {\n    pop(didPerformWorkStackCursor, fiber);\n    pop(contextStackCursor, fiber);\n  }\n}\n\nfunction popTopLevelContextObject(fiber) {\n  {\n    pop(didPerformWorkStackCursor, fiber);\n    pop(contextStackCursor, fiber);\n  }\n}\n\nfunction pushTopLevelContextObject(fiber, context, didChange) {\n  {\n    if (contextStackCursor.current !== emptyContextObject) {\n      throw new Error('Unexpected context found on stack. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n    }\n\n    push(contextStackCursor, context, fiber);\n    push(didPerformWorkStackCursor, didChange, fiber);\n  }\n}\n\nfunction processChildContext(fiber, type, parentContext) {\n  {\n    var instance = fiber.stateNode;\n    var childContextTypes = type.childContextTypes; // TODO (bvaughn) Replace this behavior with an invariant() in the future.\n    // It has only been added in Fiber to match the (unintentional) behavior in Stack.\n\n    if (typeof instance.getChildContext !== 'function') {\n      {\n        var componentName = getComponentNameFromFiber(fiber) || 'Unknown';\n\n        if (!warnedAboutMissingGetChildContext[componentName]) {\n          warnedAboutMissingGetChildContext[componentName] = true;\n\n          error('%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);\n        }\n      }\n\n      return parentContext;\n    }\n\n    var childContext = instance.getChildContext();\n\n    for (var contextKey in childContext) {\n      if (!(contextKey in childContextTypes)) {\n        throw new Error((getComponentNameFromFiber(fiber) || 'Unknown') + \".getChildContext(): key \\\"\" + contextKey + \"\\\" is not defined in childContextTypes.\");\n      }\n    }\n\n    {\n      var name = getComponentNameFromFiber(fiber) || 'Unknown';\n      checkPropTypes(childContextTypes, childContext, 'child context', name);\n    }\n\n    return assign({}, parentContext, childContext);\n  }\n}\n\nfunction pushContextProvider(workInProgress) {\n  {\n    var instance = workInProgress.stateNode; // We push the context as early as possible to ensure stack integrity.\n    // If the instance does not exist yet, we will push null at first,\n    // and replace it on the stack later when invalidating the context.\n\n    var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject; // Remember the parent context so we can merge with it later.\n    // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.\n\n    previousContext = contextStackCursor.current;\n    push(contextStackCursor, memoizedMergedChildContext, workInProgress);\n    push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);\n    return true;\n  }\n}\n\nfunction invalidateContextProvider(workInProgress, type, didChange) {\n  {\n    var instance = workInProgress.stateNode;\n\n    if (!instance) {\n      throw new Error('Expected to have an instance by this point. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n    }\n\n    if (didChange) {\n      // Merge parent and own context.\n      // Skip this if we're not updating due to sCU.\n      // This avoids unnecessarily recomputing memoized values.\n      var mergedContext = processChildContext(workInProgress, type, previousContext);\n      instance.__reactInternalMemoizedMergedChildContext = mergedContext; // Replace the old (or empty) context with the new one.\n      // It is important to unwind the context in the reverse order.\n\n      pop(didPerformWorkStackCursor, workInProgress);\n      pop(contextStackCursor, workInProgress); // Now push the new context and mark that it has changed.\n\n      push(contextStackCursor, mergedContext, workInProgress);\n      push(didPerformWorkStackCursor, didChange, workInProgress);\n    } else {\n      pop(didPerformWorkStackCursor, workInProgress);\n      push(didPerformWorkStackCursor, didChange, workInProgress);\n    }\n  }\n}\n\nfunction findCurrentUnmaskedContext(fiber) {\n  {\n    // Currently this is only used with renderSubtreeIntoContainer; not sure if it\n    // makes sense elsewhere\n    if (!isFiberMounted(fiber) || fiber.tag !== ClassComponent) {\n      throw new Error('Expected subtree parent to be a mounted class component. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n    }\n\n    var node = fiber;\n\n    do {\n      switch (node.tag) {\n        case HostRoot:\n          return node.stateNode.context;\n\n        case ClassComponent:\n          {\n            var Component = node.type;\n\n            if (isContextProvider(Component)) {\n              return node.stateNode.__reactInternalMemoizedMergedChildContext;\n            }\n\n            break;\n          }\n      }\n\n      node = node.return;\n    } while (node !== null);\n\n    throw new Error('Found unexpected detached subtree parent. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n  }\n}\n\nvar LegacyRoot = 0;\nvar ConcurrentRoot = 1;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\nvar syncQueue = null;\nvar includesLegacySyncCallbacks = false;\nvar isFlushingSyncQueue = false;\nfunction scheduleSyncCallback(callback) {\n  // Push this callback into an internal queue. We'll flush these either in\n  // the next tick, or earlier if something calls `flushSyncCallbackQueue`.\n  if (syncQueue === null) {\n    syncQueue = [callback];\n  } else {\n    // Push onto existing queue. Don't need to schedule a callback because\n    // we already scheduled one when we created the queue.\n    syncQueue.push(callback);\n  }\n}\nfunction scheduleLegacySyncCallback(callback) {\n  includesLegacySyncCallbacks = true;\n  scheduleSyncCallback(callback);\n}\nfunction flushSyncCallbacksOnlyInLegacyMode() {\n  // Only flushes the queue if there's a legacy sync callback scheduled.\n  // TODO: There's only a single type of callback: performSyncOnWorkOnRoot. So\n  // it might make more sense for the queue to be a list of roots instead of a\n  // list of generic callbacks. Then we can have two: one for legacy roots, one\n  // for concurrent roots. And this method would only flush the legacy ones.\n  if (includesLegacySyncCallbacks) {\n    flushSyncCallbacks();\n  }\n}\nfunction flushSyncCallbacks() {\n  if (!isFlushingSyncQueue && syncQueue !== null) {\n    // Prevent re-entrance.\n    isFlushingSyncQueue = true;\n    var i = 0;\n    var previousUpdatePriority = getCurrentUpdatePriority();\n\n    try {\n      var isSync = true;\n      var queue = syncQueue; // TODO: Is this necessary anymore? The only user code that runs in this\n      // queue is in the render or commit phases.\n\n      setCurrentUpdatePriority(DiscreteEventPriority);\n\n      for (; i < queue.length; i++) {\n        var callback = queue[i];\n\n        do {\n          callback = callback(isSync);\n        } while (callback !== null);\n      }\n\n      syncQueue = null;\n      includesLegacySyncCallbacks = false;\n    } catch (error) {\n      // If something throws, leave the remaining callbacks on the queue.\n      if (syncQueue !== null) {\n        syncQueue = syncQueue.slice(i + 1);\n      } // Resume flushing in the next tick\n\n\n      scheduleCallback(ImmediatePriority, flushSyncCallbacks);\n      throw error;\n    } finally {\n      setCurrentUpdatePriority(previousUpdatePriority);\n      isFlushingSyncQueue = false;\n    }\n  }\n\n  return null;\n}\n\n// This is imported by the event replaying implementation in React DOM. It's\n// in a separate file to break a circular dependency between the renderer and\n// the reconciler.\nfunction isRootDehydrated(root) {\n  var currentState = root.current.memoizedState;\n  return currentState.isDehydrated;\n}\n\nvar ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;\nvar NoTransition = null;\nfunction requestCurrentTransition() {\n  return ReactCurrentBatchConfig.transition;\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\n\nfunction shallowEqual(objA, objB) {\n  if (objectIs(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  } // Test for A's keys different from B.\n\n\n  for (var i = 0; i < keysA.length; i++) {\n    var currentKey = keysA[i];\n\n    if (!hasOwnProperty.call(objB, currentKey) || !objectIs(objA[currentKey], objB[currentKey])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction describeFiber(fiber) {\n  var owner =  fiber._debugOwner ? fiber._debugOwner.type : null ;\n  var source =  fiber._debugSource ;\n\n  switch (fiber.tag) {\n    case HostComponent:\n      return describeBuiltInComponentFrame(fiber.type);\n\n    case LazyComponent:\n      return describeBuiltInComponentFrame('Lazy');\n\n    case SuspenseComponent:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case SuspenseListComponent:\n      return describeBuiltInComponentFrame('SuspenseList');\n\n    case FunctionComponent:\n    case IndeterminateComponent:\n    case SimpleMemoComponent:\n      return describeFunctionComponentFrame(fiber.type);\n\n    case ForwardRef:\n      return describeFunctionComponentFrame(fiber.type.render);\n\n    case ClassComponent:\n      return describeClassComponentFrame(fiber.type);\n\n    default:\n      return '';\n  }\n}\n\nfunction getStackByFiberInDevAndProd(workInProgress) {\n  try {\n    var info = '';\n    var node = workInProgress;\n\n    do {\n      info += describeFiber(node);\n      node = node.return;\n    } while (node);\n\n    return info;\n  } catch (x) {\n    return '\\nError generating stack: ' + x.message + '\\n' + x.stack;\n  }\n}\n\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\nvar current = null;\nvar isRendering = false;\nfunction getCurrentFiberOwnerNameInDevOrNull() {\n  {\n    if (current === null) {\n      return null;\n    }\n\n    var owner = current._debugOwner;\n\n    if (owner !== null && typeof owner !== 'undefined') {\n      return getComponentNameFromFiber(owner);\n    }\n  }\n\n  return null;\n}\n\nfunction getCurrentFiberStackInDev() {\n  {\n    if (current === null) {\n      return '';\n    } // Safe because if current fiber exists, we are reconciling,\n    // and it is guaranteed to be the work-in-progress version.\n\n\n    return getStackByFiberInDevAndProd(current);\n  }\n}\n\nfunction resetCurrentFiber() {\n  {\n    ReactDebugCurrentFrame$1.getCurrentStack = null;\n    current = null;\n    isRendering = false;\n  }\n}\nfunction setCurrentFiber(fiber) {\n  {\n    ReactDebugCurrentFrame$1.getCurrentStack = getCurrentFiberStackInDev;\n    current = fiber;\n    isRendering = false;\n  }\n}\nfunction setIsRendering(rendering) {\n  {\n    isRendering = rendering;\n  }\n}\n\nvar ReactStrictModeWarnings = {\n  recordUnsafeLifecycleWarnings: function (fiber, instance) {},\n  flushPendingUnsafeLifecycleWarnings: function () {},\n  recordLegacyContextWarning: function (fiber, instance) {},\n  flushLegacyContextWarning: function () {},\n  discardPendingWarnings: function () {}\n};\n\n{\n  var findStrictRoot = function (fiber) {\n    var maybeStrictRoot = null;\n    var node = fiber;\n\n    while (node !== null) {\n      if (node.mode & StrictLegacyMode) {\n        maybeStrictRoot = node;\n      }\n\n      node = node.return;\n    }\n\n    return maybeStrictRoot;\n  };\n\n  var setToSortedString = function (set) {\n    var array = [];\n    set.forEach(function (value) {\n      array.push(value);\n    });\n    return array.sort().join(', ');\n  };\n\n  var pendingComponentWillMountWarnings = [];\n  var pendingUNSAFE_ComponentWillMountWarnings = [];\n  var pendingComponentWillReceivePropsWarnings = [];\n  var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n  var pendingComponentWillUpdateWarnings = [];\n  var pendingUNSAFE_ComponentWillUpdateWarnings = []; // Tracks components we have already warned about.\n\n  var didWarnAboutUnsafeLifecycles = new Set();\n\n  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {\n    // Dedupe strategy: Warn once per component.\n    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {\n      return;\n    }\n\n    if (typeof instance.componentWillMount === 'function' && // Don't warn about react-lifecycles-compat polyfilled components.\n    instance.componentWillMount.__suppressDeprecationWarning !== true) {\n      pendingComponentWillMountWarnings.push(fiber);\n    }\n\n    if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillMount === 'function') {\n      pendingUNSAFE_ComponentWillMountWarnings.push(fiber);\n    }\n\n    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {\n      pendingComponentWillReceivePropsWarnings.push(fiber);\n    }\n\n    if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);\n    }\n\n    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {\n      pendingComponentWillUpdateWarnings.push(fiber);\n    }\n\n    if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillUpdate === 'function') {\n      pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {\n    // We do an initial pass to gather component names\n    var componentWillMountUniqueNames = new Set();\n\n    if (pendingComponentWillMountWarnings.length > 0) {\n      pendingComponentWillMountWarnings.forEach(function (fiber) {\n        componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingComponentWillMountWarnings = [];\n    }\n\n    var UNSAFE_componentWillMountUniqueNames = new Set();\n\n    if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillMountWarnings.forEach(function (fiber) {\n        UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingUNSAFE_ComponentWillMountWarnings = [];\n    }\n\n    var componentWillReceivePropsUniqueNames = new Set();\n\n    if (pendingComponentWillReceivePropsWarnings.length > 0) {\n      pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {\n        componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingComponentWillReceivePropsWarnings = [];\n    }\n\n    var UNSAFE_componentWillReceivePropsUniqueNames = new Set();\n\n    if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function (fiber) {\n        UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n    }\n\n    var componentWillUpdateUniqueNames = new Set();\n\n    if (pendingComponentWillUpdateWarnings.length > 0) {\n      pendingComponentWillUpdateWarnings.forEach(function (fiber) {\n        componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingComponentWillUpdateWarnings = [];\n    }\n\n    var UNSAFE_componentWillUpdateUniqueNames = new Set();\n\n    if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function (fiber) {\n        UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingUNSAFE_ComponentWillUpdateWarnings = [];\n    } // Finally, we flush all the warnings\n    // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'\n\n\n    if (UNSAFE_componentWillMountUniqueNames.size > 0) {\n      var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);\n\n      error('Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n' + '\\nPlease update the following components: %s', sortedNames);\n    }\n\n    if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {\n      var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);\n\n      error('Using UNSAFE_componentWillReceiveProps in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move data fetching code or side effects to componentDidUpdate.\\n' + \"* If you're updating state whenever props change, \" + 'refactor your code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n' + '\\nPlease update the following components: %s', _sortedNames);\n    }\n\n    if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {\n      var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);\n\n      error('Using UNSAFE_componentWillUpdate in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move data fetching code or side effects to componentDidUpdate.\\n' + '\\nPlease update the following components: %s', _sortedNames2);\n    }\n\n    if (componentWillMountUniqueNames.size > 0) {\n      var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);\n\n      warn('componentWillMount has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n' + '* Rename componentWillMount to UNSAFE_componentWillMount to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' + '\\nPlease update the following components: %s', _sortedNames3);\n    }\n\n    if (componentWillReceivePropsUniqueNames.size > 0) {\n      var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);\n\n      warn('componentWillReceiveProps has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move data fetching code or side effects to componentDidUpdate.\\n' + \"* If you're updating state whenever props change, refactor your \" + 'code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n' + '* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' + '\\nPlease update the following components: %s', _sortedNames4);\n    }\n\n    if (componentWillUpdateUniqueNames.size > 0) {\n      var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);\n\n      warn('componentWillUpdate has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' + '* Move data fetching code or side effects to componentDidUpdate.\\n' + '* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' + '\\nPlease update the following components: %s', _sortedNames5);\n    }\n  };\n\n  var pendingLegacyContextWarning = new Map(); // Tracks components we have already warned about.\n\n  var didWarnAboutLegacyContext = new Set();\n\n  ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {\n    var strictRoot = findStrictRoot(fiber);\n\n    if (strictRoot === null) {\n      error('Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n\n      return;\n    } // Dedup strategy: Warn once per component.\n\n\n    if (didWarnAboutLegacyContext.has(fiber.type)) {\n      return;\n    }\n\n    var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);\n\n    if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {\n      if (warningsForRoot === undefined) {\n        warningsForRoot = [];\n        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);\n      }\n\n      warningsForRoot.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushLegacyContextWarning = function () {\n    pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {\n      if (fiberArray.length === 0) {\n        return;\n      }\n\n      var firstFiber = fiberArray[0];\n      var uniqueNames = new Set();\n      fiberArray.forEach(function (fiber) {\n        uniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n        didWarnAboutLegacyContext.add(fiber.type);\n      });\n      var sortedNames = setToSortedString(uniqueNames);\n\n      try {\n        setCurrentFiber(firstFiber);\n\n        error('Legacy context API has been detected within a strict-mode tree.' + '\\n\\nThe old API will be supported in all 16.x releases, but applications ' + 'using it should migrate to the new version.' + '\\n\\nPlease update the following components: %s' + '\\n\\nLearn more about this warning here: https://reactjs.org/link/legacy-context', sortedNames);\n      } finally {\n        resetCurrentFiber();\n      }\n    });\n  };\n\n  ReactStrictModeWarnings.discardPendingWarnings = function () {\n    pendingComponentWillMountWarnings = [];\n    pendingUNSAFE_ComponentWillMountWarnings = [];\n    pendingComponentWillReceivePropsWarnings = [];\n    pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n    pendingComponentWillUpdateWarnings = [];\n    pendingUNSAFE_ComponentWillUpdateWarnings = [];\n    pendingLegacyContextWarning = new Map();\n  };\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkPropStringCoercion(value, propName) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided `%s` prop is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', propName, typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nfunction resolveDefaultProps(Component, baseProps) {\n  if (Component && Component.defaultProps) {\n    // Resolve default props. Taken from ReactElement\n    var props = assign({}, baseProps);\n    var defaultProps = Component.defaultProps;\n\n    for (var propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n\n    return props;\n  }\n\n  return baseProps;\n}\n\nvar valueCursor = createCursor(null);\nvar rendererSigil;\n\n{\n  // Use this to detect multiple renderers using the same context\n  rendererSigil = {};\n}\n\nvar currentlyRenderingFiber = null;\nvar lastContextDependency = null;\nvar lastFullyObservedContext = null;\nvar isDisallowedContextReadInDEV = false;\nfunction resetContextDependencies() {\n  // This is called right before React yields execution, to ensure `readContext`\n  // cannot be called outside the render phase.\n  currentlyRenderingFiber = null;\n  lastContextDependency = null;\n  lastFullyObservedContext = null;\n\n  {\n    isDisallowedContextReadInDEV = false;\n  }\n}\nfunction enterDisallowedContextReadInDEV() {\n  {\n    isDisallowedContextReadInDEV = true;\n  }\n}\nfunction exitDisallowedContextReadInDEV() {\n  {\n    isDisallowedContextReadInDEV = false;\n  }\n}\nfunction pushProvider(providerFiber, context, nextValue) {\n  {\n    push(valueCursor, context._currentValue2, providerFiber);\n    context._currentValue2 = nextValue;\n\n    {\n      if (context._currentRenderer2 !== undefined && context._currentRenderer2 !== null && context._currentRenderer2 !== rendererSigil) {\n        error('Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.');\n      }\n\n      context._currentRenderer2 = rendererSigil;\n    }\n  }\n}\nfunction popProvider(context, providerFiber) {\n  var currentValue = valueCursor.current;\n  pop(valueCursor, providerFiber);\n\n  {\n    {\n      context._currentValue2 = currentValue;\n    }\n  }\n}\nfunction scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {\n  // Update the child lanes of all the ancestors, including the alternates.\n  var node = parent;\n\n  while (node !== null) {\n    var alternate = node.alternate;\n\n    if (!isSubsetOfLanes(node.childLanes, renderLanes)) {\n      node.childLanes = mergeLanes(node.childLanes, renderLanes);\n\n      if (alternate !== null) {\n        alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n      }\n    } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes)) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n    }\n\n    if (node === propagationRoot) {\n      break;\n    }\n\n    node = node.return;\n  }\n\n  {\n    if (node !== propagationRoot) {\n      error('Expected to find the propagation root when scheduling context work. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n    }\n  }\n}\nfunction propagateContextChange(workInProgress, context, renderLanes) {\n  {\n    propagateContextChange_eager(workInProgress, context, renderLanes);\n  }\n}\n\nfunction propagateContextChange_eager(workInProgress, context, renderLanes) {\n\n  var fiber = workInProgress.child;\n\n  if (fiber !== null) {\n    // Set the return pointer of the child to the work-in-progress fiber.\n    fiber.return = workInProgress;\n  }\n\n  while (fiber !== null) {\n    var nextFiber = void 0; // Visit this fiber.\n\n    var list = fiber.dependencies;\n\n    if (list !== null) {\n      nextFiber = fiber.child;\n      var dependency = list.firstContext;\n\n      while (dependency !== null) {\n        // Check if the context matches.\n        if (dependency.context === context) {\n          // Match! Schedule an update on this fiber.\n          if (fiber.tag === ClassComponent) {\n            // Schedule a force update on the work-in-progress.\n            var lane = pickArbitraryLane(renderLanes);\n            var update = createUpdate(NoTimestamp, lane);\n            update.tag = ForceUpdate; // TODO: Because we don't have a work-in-progress, this will add the\n            // update to the current fiber, too, which means it will persist even if\n            // this render is thrown away. Since it's a race condition, not sure it's\n            // worth fixing.\n            // Inlined `enqueueUpdate` to remove interleaved update check\n\n            var updateQueue = fiber.updateQueue;\n\n            if (updateQueue === null) ; else {\n              var sharedQueue = updateQueue.shared;\n              var pending = sharedQueue.pending;\n\n              if (pending === null) {\n                // This is the first update. Create a circular list.\n                update.next = update;\n              } else {\n                update.next = pending.next;\n                pending.next = update;\n              }\n\n              sharedQueue.pending = update;\n            }\n          }\n\n          fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n          var alternate = fiber.alternate;\n\n          if (alternate !== null) {\n            alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n          }\n\n          scheduleContextWorkOnParentPath(fiber.return, renderLanes, workInProgress); // Mark the updated lanes on the list, too.\n\n          list.lanes = mergeLanes(list.lanes, renderLanes); // Since we already found a match, we can stop traversing the\n          // dependency list.\n\n          break;\n        }\n\n        dependency = dependency.next;\n      }\n    } else if (fiber.tag === ContextProvider) {\n      // Don't scan deeper if this is a matching provider\n      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;\n    } else {\n      // Traverse down.\n      nextFiber = fiber.child;\n    }\n\n    if (nextFiber !== null) {\n      // Set the return pointer of the child to the work-in-progress fiber.\n      nextFiber.return = fiber;\n    } else {\n      // No child. Traverse to next sibling.\n      nextFiber = fiber;\n\n      while (nextFiber !== null) {\n        if (nextFiber === workInProgress) {\n          // We're back to the root of this subtree. Exit.\n          nextFiber = null;\n          break;\n        }\n\n        var sibling = nextFiber.sibling;\n\n        if (sibling !== null) {\n          // Set the return pointer of the sibling to the work-in-progress fiber.\n          sibling.return = nextFiber.return;\n          nextFiber = sibling;\n          break;\n        } // No more siblings. Traverse up.\n\n\n        nextFiber = nextFiber.return;\n      }\n    }\n\n    fiber = nextFiber;\n  }\n}\nfunction prepareToReadContext(workInProgress, renderLanes) {\n  currentlyRenderingFiber = workInProgress;\n  lastContextDependency = null;\n  lastFullyObservedContext = null;\n  var dependencies = workInProgress.dependencies;\n\n  if (dependencies !== null) {\n    {\n      var firstContext = dependencies.firstContext;\n\n      if (firstContext !== null) {\n        if (includesSomeLane(dependencies.lanes, renderLanes)) {\n          // Context list has a pending update. Mark that this fiber performed work.\n          markWorkInProgressReceivedUpdate();\n        } // Reset the work-in-progress list\n\n\n        dependencies.firstContext = null;\n      }\n    }\n  }\n}\nfunction readContext(context) {\n  {\n    // This warning would fire if you read context inside a Hook like useMemo.\n    // Unlike the class check below, it's not enforced in production for perf.\n    if (isDisallowedContextReadInDEV) {\n      error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');\n    }\n  }\n\n  var value =  context._currentValue2;\n\n  if (lastFullyObservedContext === context) ; else {\n    var contextItem = {\n      context: context,\n      memoizedValue: value,\n      next: null\n    };\n\n    if (lastContextDependency === null) {\n      if (currentlyRenderingFiber === null) {\n        throw new Error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');\n      } // This is the first dependency for this component. Create a new list.\n\n\n      lastContextDependency = contextItem;\n      currentlyRenderingFiber.dependencies = {\n        lanes: NoLanes,\n        firstContext: contextItem\n      };\n    } else {\n      // Append a new context item.\n      lastContextDependency = lastContextDependency.next = contextItem;\n    }\n  }\n\n  return value;\n}\n\n// An array of all update queues that received updates during the current\n// render. When this render exits, either because it finishes or because it is\n// interrupted, the interleaved updates will be transferred onto the main part\n// of the queue.\nvar interleavedQueues = null;\nfunction pushInterleavedQueue(queue) {\n  if (interleavedQueues === null) {\n    interleavedQueues = [queue];\n  } else {\n    interleavedQueues.push(queue);\n  }\n}\nfunction enqueueInterleavedUpdates() {\n  // Transfer the interleaved updates onto the main queue. Each queue has a\n  // `pending` field and an `interleaved` field. When they are not null, they\n  // point to the last node in a circular linked list. We need to append the\n  // interleaved list to the end of the pending list by joining them into a\n  // single, circular list.\n  if (interleavedQueues !== null) {\n    for (var i = 0; i < interleavedQueues.length; i++) {\n      var queue = interleavedQueues[i];\n      var lastInterleavedUpdate = queue.interleaved;\n\n      if (lastInterleavedUpdate !== null) {\n        queue.interleaved = null;\n        var firstInterleavedUpdate = lastInterleavedUpdate.next;\n        var lastPendingUpdate = queue.pending;\n\n        if (lastPendingUpdate !== null) {\n          var firstPendingUpdate = lastPendingUpdate.next;\n          lastPendingUpdate.next = firstInterleavedUpdate;\n          lastInterleavedUpdate.next = firstPendingUpdate;\n        }\n\n        queue.pending = lastInterleavedUpdate;\n      }\n    }\n\n    interleavedQueues = null;\n  }\n}\n\nvar UpdateState = 0;\nvar ReplaceState = 1;\nvar ForceUpdate = 2;\nvar CaptureUpdate = 3; // Global state that is reset at the beginning of calling `processUpdateQueue`.\n// It should only be read right after calling `processUpdateQueue`, via\n// `checkHasForceUpdateAfterProcessing`.\n\nvar hasForceUpdate = false;\nvar didWarnUpdateInsideUpdate;\nvar currentlyProcessingQueue;\n\n{\n  didWarnUpdateInsideUpdate = false;\n  currentlyProcessingQueue = null;\n}\n\nfunction initializeUpdateQueue(fiber) {\n  var queue = {\n    baseState: fiber.memoizedState,\n    firstBaseUpdate: null,\n    lastBaseUpdate: null,\n    shared: {\n      pending: null,\n      interleaved: null,\n      lanes: NoLanes\n    },\n    effects: null\n  };\n  fiber.updateQueue = queue;\n}\nfunction cloneUpdateQueue(current, workInProgress) {\n  // Clone the update queue from current. Unless it's already a clone.\n  var queue = workInProgress.updateQueue;\n  var currentQueue = current.updateQueue;\n\n  if (queue === currentQueue) {\n    var clone = {\n      baseState: currentQueue.baseState,\n      firstBaseUpdate: currentQueue.firstBaseUpdate,\n      lastBaseUpdate: currentQueue.lastBaseUpdate,\n      shared: currentQueue.shared,\n      effects: currentQueue.effects\n    };\n    workInProgress.updateQueue = clone;\n  }\n}\nfunction createUpdate(eventTime, lane) {\n  var update = {\n    eventTime: eventTime,\n    lane: lane,\n    tag: UpdateState,\n    payload: null,\n    callback: null,\n    next: null\n  };\n  return update;\n}\nfunction enqueueUpdate(fiber, update, lane) {\n  var updateQueue = fiber.updateQueue;\n\n  if (updateQueue === null) {\n    // Only occurs if the fiber has been unmounted.\n    return;\n  }\n\n  var sharedQueue = updateQueue.shared;\n\n  if (isInterleavedUpdate(fiber)) {\n    var interleaved = sharedQueue.interleaved;\n\n    if (interleaved === null) {\n      // This is the first update. Create a circular list.\n      update.next = update; // At the end of the current render, this queue's interleaved updates will\n      // be transferred to the pending queue.\n\n      pushInterleavedQueue(sharedQueue);\n    } else {\n      update.next = interleaved.next;\n      interleaved.next = update;\n    }\n\n    sharedQueue.interleaved = update;\n  } else {\n    var pending = sharedQueue.pending;\n\n    if (pending === null) {\n      // This is the first update. Create a circular list.\n      update.next = update;\n    } else {\n      update.next = pending.next;\n      pending.next = update;\n    }\n\n    sharedQueue.pending = update;\n  }\n\n  {\n    if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {\n      error('An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');\n\n      didWarnUpdateInsideUpdate = true;\n    }\n  }\n}\nfunction entangleTransitions(root, fiber, lane) {\n  var updateQueue = fiber.updateQueue;\n\n  if (updateQueue === null) {\n    // Only occurs if the fiber has been unmounted.\n    return;\n  }\n\n  var sharedQueue = updateQueue.shared;\n\n  if (isTransitionLane(lane)) {\n    var queueLanes = sharedQueue.lanes; // If any entangled lanes are no longer pending on the root, then they must\n    // have finished. We can remove them from the shared queue, which represents\n    // a superset of the actually pending lanes. In some cases we may entangle\n    // more than we need to, but that's OK. In fact it's worse if we *don't*\n    // entangle when we should.\n\n    queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.\n\n    var newQueueLanes = mergeLanes(queueLanes, lane);\n    sharedQueue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if\n    // the lane finished since the last time we entangled it. So we need to\n    // entangle it again, just to be sure.\n\n    markRootEntangled(root, newQueueLanes);\n  }\n}\nfunction enqueueCapturedUpdate(workInProgress, capturedUpdate) {\n  // Captured updates are updates that are thrown by a child during the render\n  // phase. They should be discarded if the render is aborted. Therefore,\n  // we should only put them on the work-in-progress queue, not the current one.\n  var queue = workInProgress.updateQueue; // Check if the work-in-progress queue is a clone.\n\n  var current = workInProgress.alternate;\n\n  if (current !== null) {\n    var currentQueue = current.updateQueue;\n\n    if (queue === currentQueue) {\n      // The work-in-progress queue is the same as current. This happens when\n      // we bail out on a parent fiber that then captures an error thrown by\n      // a child. Since we want to append the update only to the work-in\n      // -progress queue, we need to clone the updates. We usually clone during\n      // processUpdateQueue, but that didn't happen in this case because we\n      // skipped over the parent when we bailed out.\n      var newFirst = null;\n      var newLast = null;\n      var firstBaseUpdate = queue.firstBaseUpdate;\n\n      if (firstBaseUpdate !== null) {\n        // Loop through the updates and clone them.\n        var update = firstBaseUpdate;\n\n        do {\n          var clone = {\n            eventTime: update.eventTime,\n            lane: update.lane,\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n            next: null\n          };\n\n          if (newLast === null) {\n            newFirst = newLast = clone;\n          } else {\n            newLast.next = clone;\n            newLast = clone;\n          }\n\n          update = update.next;\n        } while (update !== null); // Append the captured update the end of the cloned list.\n\n\n        if (newLast === null) {\n          newFirst = newLast = capturedUpdate;\n        } else {\n          newLast.next = capturedUpdate;\n          newLast = capturedUpdate;\n        }\n      } else {\n        // There are no base updates.\n        newFirst = newLast = capturedUpdate;\n      }\n\n      queue = {\n        baseState: currentQueue.baseState,\n        firstBaseUpdate: newFirst,\n        lastBaseUpdate: newLast,\n        shared: currentQueue.shared,\n        effects: currentQueue.effects\n      };\n      workInProgress.updateQueue = queue;\n      return;\n    }\n  } // Append the update to the end of the list.\n\n\n  var lastBaseUpdate = queue.lastBaseUpdate;\n\n  if (lastBaseUpdate === null) {\n    queue.firstBaseUpdate = capturedUpdate;\n  } else {\n    lastBaseUpdate.next = capturedUpdate;\n  }\n\n  queue.lastBaseUpdate = capturedUpdate;\n}\n\nfunction getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {\n  switch (update.tag) {\n    case ReplaceState:\n      {\n        var payload = update.payload;\n\n        if (typeof payload === 'function') {\n          // Updater function\n          {\n            enterDisallowedContextReadInDEV();\n          }\n\n          var nextState = payload.call(instance, prevState, nextProps);\n\n          {\n\n            exitDisallowedContextReadInDEV();\n          }\n\n          return nextState;\n        } // State object\n\n\n        return payload;\n      }\n\n    case CaptureUpdate:\n      {\n        workInProgress.flags = workInProgress.flags & ~ShouldCapture | DidCapture;\n      }\n    // Intentional fallthrough\n\n    case UpdateState:\n      {\n        var _payload = update.payload;\n        var partialState;\n\n        if (typeof _payload === 'function') {\n          // Updater function\n          {\n            enterDisallowedContextReadInDEV();\n          }\n\n          partialState = _payload.call(instance, prevState, nextProps);\n\n          {\n\n            exitDisallowedContextReadInDEV();\n          }\n        } else {\n          // Partial state object\n          partialState = _payload;\n        }\n\n        if (partialState === null || partialState === undefined) {\n          // Null and undefined are treated as no-ops.\n          return prevState;\n        } // Merge the partial state and the previous state.\n\n\n        return assign({}, prevState, partialState);\n      }\n\n    case ForceUpdate:\n      {\n        hasForceUpdate = true;\n        return prevState;\n      }\n  }\n\n  return prevState;\n}\n\nfunction processUpdateQueue(workInProgress, props, instance, renderLanes) {\n  // This is always non-null on a ClassComponent or HostRoot\n  var queue = workInProgress.updateQueue;\n  hasForceUpdate = false;\n\n  {\n    currentlyProcessingQueue = queue.shared;\n  }\n\n  var firstBaseUpdate = queue.firstBaseUpdate;\n  var lastBaseUpdate = queue.lastBaseUpdate; // Check if there are pending updates. If so, transfer them to the base queue.\n\n  var pendingQueue = queue.shared.pending;\n\n  if (pendingQueue !== null) {\n    queue.shared.pending = null; // The pending queue is circular. Disconnect the pointer between first\n    // and last so that it's non-circular.\n\n    var lastPendingUpdate = pendingQueue;\n    var firstPendingUpdate = lastPendingUpdate.next;\n    lastPendingUpdate.next = null; // Append pending updates to base queue\n\n    if (lastBaseUpdate === null) {\n      firstBaseUpdate = firstPendingUpdate;\n    } else {\n      lastBaseUpdate.next = firstPendingUpdate;\n    }\n\n    lastBaseUpdate = lastPendingUpdate; // If there's a current queue, and it's different from the base queue, then\n    // we need to transfer the updates to that queue, too. Because the base\n    // queue is a singly-linked list with no cycles, we can append to both\n    // lists and take advantage of structural sharing.\n    // TODO: Pass `current` as argument\n\n    var current = workInProgress.alternate;\n\n    if (current !== null) {\n      // This is always non-null on a ClassComponent or HostRoot\n      var currentQueue = current.updateQueue;\n      var currentLastBaseUpdate = currentQueue.lastBaseUpdate;\n\n      if (currentLastBaseUpdate !== lastBaseUpdate) {\n        if (currentLastBaseUpdate === null) {\n          currentQueue.firstBaseUpdate = firstPendingUpdate;\n        } else {\n          currentLastBaseUpdate.next = firstPendingUpdate;\n        }\n\n        currentQueue.lastBaseUpdate = lastPendingUpdate;\n      }\n    }\n  } // These values may change as we process the queue.\n\n\n  if (firstBaseUpdate !== null) {\n    // Iterate through the list of updates to compute the result.\n    var newState = queue.baseState; // TODO: Don't need to accumulate this. Instead, we can remove renderLanes\n    // from the original lanes.\n\n    var newLanes = NoLanes;\n    var newBaseState = null;\n    var newFirstBaseUpdate = null;\n    var newLastBaseUpdate = null;\n    var update = firstBaseUpdate;\n\n    do {\n      var updateLane = update.lane;\n      var updateEventTime = update.eventTime;\n\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        var clone = {\n          eventTime: updateEventTime,\n          lane: updateLane,\n          tag: update.tag,\n          payload: update.payload,\n          callback: update.callback,\n          next: null\n        };\n\n        if (newLastBaseUpdate === null) {\n          newFirstBaseUpdate = newLastBaseUpdate = clone;\n          newBaseState = newState;\n        } else {\n          newLastBaseUpdate = newLastBaseUpdate.next = clone;\n        } // Update the remaining priority in the queue.\n\n\n        newLanes = mergeLanes(newLanes, updateLane);\n      } else {\n        // This update does have sufficient priority.\n        if (newLastBaseUpdate !== null) {\n          var _clone = {\n            eventTime: updateEventTime,\n            // This update is going to be committed so we never want uncommit\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\n            // this will never be skipped by the check above.\n            lane: NoLane,\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n            next: null\n          };\n          newLastBaseUpdate = newLastBaseUpdate.next = _clone;\n        } // Process this update.\n\n\n        newState = getStateFromUpdate(workInProgress, queue, update, newState, props, instance);\n        var callback = update.callback;\n\n        if (callback !== null && // If the update was already committed, we should not queue its\n        // callback again.\n        update.lane !== NoLane) {\n          workInProgress.flags |= Callback;\n          var effects = queue.effects;\n\n          if (effects === null) {\n            queue.effects = [update];\n          } else {\n            effects.push(update);\n          }\n        }\n      }\n\n      update = update.next;\n\n      if (update === null) {\n        pendingQueue = queue.shared.pending;\n\n        if (pendingQueue === null) {\n          break;\n        } else {\n          // An update was scheduled from inside a reducer. Add the new\n          // pending updates to the end of the list and keep processing.\n          var _lastPendingUpdate = pendingQueue; // Intentionally unsound. Pending updates form a circular list, but we\n          // unravel them when transferring them to the base queue.\n\n          var _firstPendingUpdate = _lastPendingUpdate.next;\n          _lastPendingUpdate.next = null;\n          update = _firstPendingUpdate;\n          queue.lastBaseUpdate = _lastPendingUpdate;\n          queue.shared.pending = null;\n        }\n      }\n    } while (true);\n\n    if (newLastBaseUpdate === null) {\n      newBaseState = newState;\n    }\n\n    queue.baseState = newBaseState;\n    queue.firstBaseUpdate = newFirstBaseUpdate;\n    queue.lastBaseUpdate = newLastBaseUpdate; // Interleaved updates are stored on a separate queue. We aren't going to\n    // process them during this render, but we do need to track which lanes\n    // are remaining.\n\n    var lastInterleaved = queue.shared.interleaved;\n\n    if (lastInterleaved !== null) {\n      var interleaved = lastInterleaved;\n\n      do {\n        newLanes = mergeLanes(newLanes, interleaved.lane);\n        interleaved = interleaved.next;\n      } while (interleaved !== lastInterleaved);\n    } else if (firstBaseUpdate === null) {\n      // `queue.lanes` is used for entangling transitions. We can set it back to\n      // zero once the queue is empty.\n      queue.shared.lanes = NoLanes;\n    } // Set the remaining expiration time to be whatever is remaining in the queue.\n    // This should be fine because the only two other things that contribute to\n    // expiration time are props and context. We're already in the middle of the\n    // begin phase by the time we start processing the queue, so we've already\n    // dealt with the props. Context in components that specify\n    // shouldComponentUpdate is tricky; but we'll have to account for\n    // that regardless.\n\n\n    markSkippedUpdateLanes(newLanes);\n    workInProgress.lanes = newLanes;\n    workInProgress.memoizedState = newState;\n  }\n\n  {\n    currentlyProcessingQueue = null;\n  }\n}\n\nfunction callCallback(callback, context) {\n  if (typeof callback !== 'function') {\n    throw new Error('Invalid argument passed as callback. Expected a function. Instead ' + (\"received: \" + callback));\n  }\n\n  callback.call(context);\n}\n\nfunction resetHasForceUpdateBeforeProcessing() {\n  hasForceUpdate = false;\n}\nfunction checkHasForceUpdateAfterProcessing() {\n  return hasForceUpdate;\n}\nfunction commitUpdateQueue(finishedWork, finishedQueue, instance) {\n  // Commit the effects\n  var effects = finishedQueue.effects;\n  finishedQueue.effects = null;\n\n  if (effects !== null) {\n    for (var i = 0; i < effects.length; i++) {\n      var effect = effects[i];\n      var callback = effect.callback;\n\n      if (callback !== null) {\n        effect.callback = null;\n        callCallback(callback, instance);\n      }\n    }\n  }\n}\n\nvar fakeInternalInstance = {}; // React.Component uses a shared frozen object by default.\n// We'll use it to determine whether we need to initialize legacy refs.\n\nvar emptyRefsObject = new React.Component().refs;\nvar didWarnAboutStateAssignmentForComponent;\nvar didWarnAboutUninitializedState;\nvar didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;\nvar didWarnAboutLegacyLifecyclesAndDerivedState;\nvar didWarnAboutUndefinedDerivedState;\nvar warnOnUndefinedDerivedState;\nvar warnOnInvalidCallback;\nvar didWarnAboutDirectlyAssigningPropsToState;\nvar didWarnAboutContextTypeAndContextTypes;\nvar didWarnAboutInvalidateContextType;\n\n{\n  didWarnAboutStateAssignmentForComponent = new Set();\n  didWarnAboutUninitializedState = new Set();\n  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\n  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\n  didWarnAboutDirectlyAssigningPropsToState = new Set();\n  didWarnAboutUndefinedDerivedState = new Set();\n  didWarnAboutContextTypeAndContextTypes = new Set();\n  didWarnAboutInvalidateContextType = new Set();\n  var didWarnOnInvalidCallback = new Set();\n\n  warnOnInvalidCallback = function (callback, callerName) {\n    if (callback === null || typeof callback === 'function') {\n      return;\n    }\n\n    var key = callerName + '_' + callback;\n\n    if (!didWarnOnInvalidCallback.has(key)) {\n      didWarnOnInvalidCallback.add(key);\n\n      error('%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);\n    }\n  };\n\n  warnOnUndefinedDerivedState = function (type, partialState) {\n    if (partialState === undefined) {\n      var componentName = getComponentNameFromType(type) || 'Component';\n\n      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {\n        didWarnAboutUndefinedDerivedState.add(componentName);\n\n        error('%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', componentName);\n      }\n    }\n  }; // This is so gross but it's at least non-critical and can be removed if\n  // it causes problems. This is meant to give a nicer error message for\n  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,\n  // ...)) which otherwise throws a \"_processChildContext is not a function\"\n  // exception.\n\n\n  Object.defineProperty(fakeInternalInstance, '_processChildContext', {\n    enumerable: false,\n    value: function () {\n      throw new Error('_processChildContext is not available in React 16+. This likely ' + 'means you have multiple copies of React and are attempting to nest ' + 'a React 15 tree inside a React 16 tree using ' + \"unstable_renderSubtreeIntoContainer, which isn't supported. Try \" + 'to make sure you have only one copy of React (and ideally, switch ' + 'to ReactDOM.createPortal).');\n    }\n  });\n  Object.freeze(fakeInternalInstance);\n}\n\nfunction applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {\n  var prevState = workInProgress.memoizedState;\n  var partialState = getDerivedStateFromProps(nextProps, prevState);\n\n  {\n\n    warnOnUndefinedDerivedState(ctor, partialState);\n  } // Merge the partial state and the previous state.\n\n\n  var memoizedState = partialState === null || partialState === undefined ? prevState : assign({}, prevState, partialState);\n  workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the\n  // base state.\n\n  if (workInProgress.lanes === NoLanes) {\n    // Queue is always non-null for classes\n    var updateQueue = workInProgress.updateQueue;\n    updateQueue.baseState = memoizedState;\n  }\n}\n\nvar classComponentUpdater = {\n  isMounted: isMounted,\n  enqueueSetState: function (inst, payload, callback) {\n    var fiber = get(inst);\n    var eventTime = requestEventTime();\n    var lane = requestUpdateLane(fiber);\n    var update = createUpdate(eventTime, lane);\n    update.payload = payload;\n\n    if (callback !== undefined && callback !== null) {\n      {\n        warnOnInvalidCallback(callback, 'setState');\n      }\n\n      update.callback = callback;\n    }\n\n    enqueueUpdate(fiber, update);\n    var root = scheduleUpdateOnFiber(fiber, lane, eventTime);\n\n    if (root !== null) {\n      entangleTransitions(root, fiber, lane);\n    }\n  },\n  enqueueReplaceState: function (inst, payload, callback) {\n    var fiber = get(inst);\n    var eventTime = requestEventTime();\n    var lane = requestUpdateLane(fiber);\n    var update = createUpdate(eventTime, lane);\n    update.tag = ReplaceState;\n    update.payload = payload;\n\n    if (callback !== undefined && callback !== null) {\n      {\n        warnOnInvalidCallback(callback, 'replaceState');\n      }\n\n      update.callback = callback;\n    }\n\n    enqueueUpdate(fiber, update);\n    var root = scheduleUpdateOnFiber(fiber, lane, eventTime);\n\n    if (root !== null) {\n      entangleTransitions(root, fiber, lane);\n    }\n  },\n  enqueueForceUpdate: function (inst, callback) {\n    var fiber = get(inst);\n    var eventTime = requestEventTime();\n    var lane = requestUpdateLane(fiber);\n    var update = createUpdate(eventTime, lane);\n    update.tag = ForceUpdate;\n\n    if (callback !== undefined && callback !== null) {\n      {\n        warnOnInvalidCallback(callback, 'forceUpdate');\n      }\n\n      update.callback = callback;\n    }\n\n    enqueueUpdate(fiber, update);\n    var root = scheduleUpdateOnFiber(fiber, lane, eventTime);\n\n    if (root !== null) {\n      entangleTransitions(root, fiber, lane);\n    }\n  }\n};\n\nfunction checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {\n  var instance = workInProgress.stateNode;\n\n  if (typeof instance.shouldComponentUpdate === 'function') {\n    var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);\n\n    {\n\n      if (shouldUpdate === undefined) {\n        error('%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentNameFromType(ctor) || 'Component');\n      }\n    }\n\n    return shouldUpdate;\n  }\n\n  if (ctor.prototype && ctor.prototype.isPureReactComponent) {\n    return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);\n  }\n\n  return true;\n}\n\nfunction checkClassInstance(workInProgress, ctor, newProps) {\n  var instance = workInProgress.stateNode;\n\n  {\n    var name = getComponentNameFromType(ctor) || 'Component';\n    var renderPresent = instance.render;\n\n    if (!renderPresent) {\n      if (ctor.prototype && typeof ctor.prototype.render === 'function') {\n        error('%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);\n      } else {\n        error('%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);\n      }\n    }\n\n    if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) {\n      error('getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name);\n    }\n\n    if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name);\n    }\n\n    if (instance.propTypes) {\n      error('propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name);\n    }\n\n    if (instance.contextType) {\n      error('contextType was defined as an instance property on %s. Use a static ' + 'property to define contextType instead.', name);\n    }\n\n    {\n      if (instance.contextTypes) {\n        error('contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name);\n      }\n\n      if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {\n        didWarnAboutContextTypeAndContextTypes.add(ctor);\n\n        error('%s declares both contextTypes and contextType static properties. ' + 'The legacy contextTypes property will be ignored.', name);\n      }\n    }\n\n    if (typeof instance.componentShouldUpdate === 'function') {\n      error('%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name);\n    }\n\n    if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {\n      error('%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentNameFromType(ctor) || 'A pure component');\n    }\n\n    if (typeof instance.componentDidUnmount === 'function') {\n      error('%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name);\n    }\n\n    if (typeof instance.componentDidReceiveProps === 'function') {\n      error('%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name);\n    }\n\n    if (typeof instance.componentWillRecieveProps === 'function') {\n      error('%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name);\n    }\n\n    if (typeof instance.UNSAFE_componentWillRecieveProps === 'function') {\n      error('%s has a method called ' + 'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?', name);\n    }\n\n    var hasMutatedProps = instance.props !== newProps;\n\n    if (instance.props !== undefined && hasMutatedProps) {\n      error('%s(...): When calling super() in `%s`, make sure to pass ' + \"up the same props that your component's constructor was passed.\", name, name);\n    }\n\n    if (instance.defaultProps) {\n      error('Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name);\n    }\n\n    if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {\n      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);\n\n      error('%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' + 'This component defines getSnapshotBeforeUpdate() only.', getComponentNameFromType(ctor));\n    }\n\n    if (typeof instance.getDerivedStateFromProps === 'function') {\n      error('%s: getDerivedStateFromProps() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name);\n    }\n\n    if (typeof instance.getDerivedStateFromError === 'function') {\n      error('%s: getDerivedStateFromError() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name);\n    }\n\n    if (typeof ctor.getSnapshotBeforeUpdate === 'function') {\n      error('%s: getSnapshotBeforeUpdate() is defined as a static method ' + 'and will be ignored. Instead, declare it as an instance method.', name);\n    }\n\n    var _state = instance.state;\n\n    if (_state && (typeof _state !== 'object' || isArray(_state))) {\n      error('%s.state: must be set to an object or null', name);\n    }\n\n    if (typeof instance.getChildContext === 'function' && typeof ctor.childContextTypes !== 'object') {\n      error('%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', name);\n    }\n  }\n}\n\nfunction adoptClassInstance(workInProgress, instance) {\n  instance.updater = classComponentUpdater;\n  workInProgress.stateNode = instance; // The instance needs access to the fiber so that it can schedule updates\n\n  set(instance, workInProgress);\n\n  {\n    instance._reactInternalInstance = fakeInternalInstance;\n  }\n}\n\nfunction constructClassInstance(workInProgress, ctor, props) {\n  var isLegacyContextConsumer = false;\n  var unmaskedContext = emptyContextObject;\n  var context = emptyContextObject;\n  var contextType = ctor.contextType;\n\n  {\n    if ('contextType' in ctor) {\n      var isValid = // Allow null for conditional declaration\n      contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined; // Not a <Context.Consumer>\n\n      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {\n        didWarnAboutInvalidateContextType.add(ctor);\n        var addendum = '';\n\n        if (contextType === undefined) {\n          addendum = ' However, it is set to undefined. ' + 'This can be caused by a typo or by mixing up named and default imports. ' + 'This can also happen due to a circular dependency, so ' + 'try moving the createContext() call to a separate file.';\n        } else if (typeof contextType !== 'object') {\n          addendum = ' However, it is set to a ' + typeof contextType + '.';\n        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {\n          addendum = ' Did you accidentally pass the Context.Provider instead?';\n        } else if (contextType._context !== undefined) {\n          // <Context.Consumer>\n          addendum = ' Did you accidentally pass the Context.Consumer instead?';\n        } else {\n          addendum = ' However, it is set to an object with keys {' + Object.keys(contextType).join(', ') + '}.';\n        }\n\n        error('%s defines an invalid contextType. ' + 'contextType should point to the Context object returned by React.createContext().%s', getComponentNameFromType(ctor) || 'Component', addendum);\n      }\n    }\n  }\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    context = readContext(contextType);\n  } else {\n    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    var contextTypes = ctor.contextTypes;\n    isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;\n    context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;\n  }\n\n  var instance = new ctor(props, context); // Instantiate twice to help detect side-effects.\n\n  var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;\n  adoptClassInstance(workInProgress, instance);\n\n  {\n    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {\n      var componentName = getComponentNameFromType(ctor) || 'Component';\n\n      if (!didWarnAboutUninitializedState.has(componentName)) {\n        didWarnAboutUninitializedState.add(componentName);\n\n        error('`%s` uses `getDerivedStateFromProps` but its initial state is ' + '%s. This is not recommended. Instead, define the initial state by ' + 'assigning an object to `this.state` in the constructor of `%s`. ' + 'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.', componentName, instance.state === null ? 'null' : 'undefined', componentName);\n      }\n    } // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n    // Warn about these lifecycles if they are present.\n    // Don't warn about react-lifecycles-compat polyfilled methods though.\n\n\n    if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {\n      var foundWillMountName = null;\n      var foundWillReceivePropsName = null;\n      var foundWillUpdateName = null;\n\n      if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {\n        foundWillMountName = 'componentWillMount';\n      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        foundWillMountName = 'UNSAFE_componentWillMount';\n      }\n\n      if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {\n        foundWillReceivePropsName = 'componentWillReceiveProps';\n      } else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\n        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n      }\n\n      if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {\n        foundWillUpdateName = 'componentWillUpdate';\n      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n      }\n\n      if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {\n        var _componentName = getComponentNameFromType(ctor) || 'Component';\n\n        var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';\n\n        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {\n          didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);\n\n          error('Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' + '%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\n' + 'The above lifecycles should be removed. Learn more about this warning here:\\n' + 'https://reactjs.org/link/unsafe-component-lifecycles', _componentName, newApiName, foundWillMountName !== null ? \"\\n  \" + foundWillMountName : '', foundWillReceivePropsName !== null ? \"\\n  \" + foundWillReceivePropsName : '', foundWillUpdateName !== null ? \"\\n  \" + foundWillUpdateName : '');\n        }\n      }\n    }\n  } // Cache unmasked context so we can avoid recreating masked context unless necessary.\n  // ReactFiberContext usually updates this cache but can't for newly-created instances.\n\n\n  if (isLegacyContextConsumer) {\n    cacheContext(workInProgress, unmaskedContext, context);\n  }\n\n  return instance;\n}\n\nfunction callComponentWillMount(workInProgress, instance) {\n  var oldState = instance.state;\n\n  if (typeof instance.componentWillMount === 'function') {\n    instance.componentWillMount();\n  }\n\n  if (typeof instance.UNSAFE_componentWillMount === 'function') {\n    instance.UNSAFE_componentWillMount();\n  }\n\n  if (oldState !== instance.state) {\n    {\n      error('%s.componentWillMount(): Assigning directly to this.state is ' + \"deprecated (except inside a component's \" + 'constructor). Use setState instead.', getComponentNameFromFiber(workInProgress) || 'Component');\n    }\n\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\nfunction callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {\n  var oldState = instance.state;\n\n  if (typeof instance.componentWillReceiveProps === 'function') {\n    instance.componentWillReceiveProps(newProps, nextContext);\n  }\n\n  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\n    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n  }\n\n  if (instance.state !== oldState) {\n    {\n      var componentName = getComponentNameFromFiber(workInProgress) || 'Component';\n\n      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {\n        didWarnAboutStateAssignmentForComponent.add(componentName);\n\n        error('%s.componentWillReceiveProps(): Assigning directly to ' + \"this.state is deprecated (except inside a component's \" + 'constructor). Use setState instead.', componentName);\n      }\n    }\n\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n} // Invokes the mount life-cycles on a previously never rendered instance.\n\n\nfunction mountClassInstance(workInProgress, ctor, newProps, renderLanes) {\n  {\n    checkClassInstance(workInProgress, ctor, newProps);\n  }\n\n  var instance = workInProgress.stateNode;\n  instance.props = newProps;\n  instance.state = workInProgress.memoizedState;\n  instance.refs = emptyRefsObject;\n  initializeUpdateQueue(workInProgress);\n  var contextType = ctor.contextType;\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    instance.context = readContext(contextType);\n  } else {\n    var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    instance.context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  {\n    if (instance.state === newProps) {\n      var componentName = getComponentNameFromType(ctor) || 'Component';\n\n      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {\n        didWarnAboutDirectlyAssigningPropsToState.add(componentName);\n\n        error('%s: It is not recommended to assign props directly to state ' + \"because updates to props won't be reflected in state. \" + 'In most cases, it is better to use props directly.', componentName);\n      }\n    }\n\n    if (workInProgress.mode & StrictLegacyMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);\n    }\n\n    {\n      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);\n    }\n  }\n\n  instance.state = workInProgress.memoizedState;\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n    instance.state = workInProgress.memoizedState;\n  } // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n\n\n  if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {\n    callComponentWillMount(workInProgress, instance); // If we had additional state updates during this life-cycle, let's\n    // process them now.\n\n    processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n    instance.state = workInProgress.memoizedState;\n  }\n\n  if (typeof instance.componentDidMount === 'function') {\n    var fiberFlags = Update;\n\n    workInProgress.flags |= fiberFlags;\n  }\n}\n\nfunction resumeMountClassInstance(workInProgress, ctor, newProps, renderLanes) {\n  var instance = workInProgress.stateNode;\n  var oldProps = workInProgress.memoizedProps;\n  instance.props = oldProps;\n  var oldContext = instance.context;\n  var contextType = ctor.contextType;\n  var nextContext = emptyContextObject;\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else {\n    var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);\n  }\n\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n\n  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {\n    if (oldProps !== newProps || oldContext !== nextContext) {\n      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n  var oldState = workInProgress.memoizedState;\n  var newState = instance.state = oldState;\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  newState = workInProgress.memoizedState;\n\n  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === 'function') {\n      var fiberFlags = Update;\n\n      workInProgress.flags |= fiberFlags;\n    }\n\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n    newState = workInProgress.memoizedState;\n  }\n\n  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {\n      if (typeof instance.componentWillMount === 'function') {\n        instance.componentWillMount();\n      }\n\n      if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        instance.UNSAFE_componentWillMount();\n      }\n    }\n\n    if (typeof instance.componentDidMount === 'function') {\n      var _fiberFlags = Update;\n\n      workInProgress.flags |= _fiberFlags;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === 'function') {\n      var _fiberFlags2 = Update;\n\n      workInProgress.flags |= _fiberFlags2;\n    } // If shouldComponentUpdate returned false, we should still update the\n    // memoized state to indicate that this work can be reused.\n\n\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  } // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n\n\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n  return shouldUpdate;\n} // Invokes the update life-cycles and returns false if it shouldn't rerender.\n\n\nfunction updateClassInstance(current, workInProgress, ctor, newProps, renderLanes) {\n  var instance = workInProgress.stateNode;\n  cloneUpdateQueue(current, workInProgress);\n  var unresolvedOldProps = workInProgress.memoizedProps;\n  var oldProps = workInProgress.type === workInProgress.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress.type, unresolvedOldProps);\n  instance.props = oldProps;\n  var unresolvedNewProps = workInProgress.pendingProps;\n  var oldContext = instance.context;\n  var contextType = ctor.contextType;\n  var nextContext = emptyContextObject;\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else {\n    var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);\n  }\n\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n\n  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {\n    if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) {\n      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n  var oldState = workInProgress.memoizedState;\n  var newState = instance.state = oldState;\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  newState = workInProgress.memoizedState;\n\n  if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing() && !(enableLazyContextPropagation   )) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === 'function') {\n      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n        workInProgress.flags |= Update;\n      }\n    }\n\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n        workInProgress.flags |= Snapshot;\n      }\n    }\n\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n    newState = workInProgress.memoizedState;\n  }\n\n  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) || // TODO: In some cases, we'll end up checking if context has changed twice,\n  // both before and after `shouldComponentUpdate` has been called. Not ideal,\n  // but I'm loath to refactor this function. This only happens for memoized\n  // components so it's not that common.\n  enableLazyContextPropagation   ;\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {\n      if (typeof instance.componentWillUpdate === 'function') {\n        instance.componentWillUpdate(newProps, newState, nextContext);\n      }\n\n      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);\n      }\n    }\n\n    if (typeof instance.componentDidUpdate === 'function') {\n      workInProgress.flags |= Update;\n    }\n\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      workInProgress.flags |= Snapshot;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === 'function') {\n      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n        workInProgress.flags |= Update;\n      }\n    }\n\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n        workInProgress.flags |= Snapshot;\n      }\n    } // If shouldComponentUpdate returned false, we should still update the\n    // memoized props/state to indicate that this work can be reused.\n\n\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  } // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n\n\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n  return shouldUpdate;\n}\n\n// TODO: Use the unified fiber stack module instead of this local one?\n// Intentionally not using it yet to derisk the initial implementation, because\n// the way we push/pop these values is a bit unusual. If there's a mistake, I'd\n// rather the ids be wrong than crash the whole reconciler.\nvar forkStack = [];\nvar forkStackIndex = 0;\nvar treeForkProvider = null;\nvar treeForkCount = 0;\nvar idStack = [];\nvar idStackIndex = 0;\nvar treeContextProvider = null;\nvar treeContextId = 1;\nvar treeContextOverflow = '';\n\nfunction popTreeContext(workInProgress) {\n  // Restore the previous values.\n  // This is a bit more complicated than other context-like modules in Fiber\n  // because the same Fiber may appear on the stack multiple times and for\n  // different reasons. We have to keep popping until the work-in-progress is\n  // no longer at the top of the stack.\n  while (workInProgress === treeForkProvider) {\n    treeForkProvider = forkStack[--forkStackIndex];\n    forkStack[forkStackIndex] = null;\n    treeForkCount = forkStack[--forkStackIndex];\n    forkStack[forkStackIndex] = null;\n  }\n\n  while (workInProgress === treeContextProvider) {\n    treeContextProvider = idStack[--idStackIndex];\n    idStack[idStackIndex] = null;\n    treeContextOverflow = idStack[--idStackIndex];\n    idStack[idStackIndex] = null;\n    treeContextId = idStack[--idStackIndex];\n    idStack[idStackIndex] = null;\n  }\n}\n\nvar isHydrating = false;\n\nfunction prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {\n  {\n    throw new Error('Expected prepareToHydrateHostInstance() to never be called. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n  }\n}\n\nfunction prepareToHydrateHostTextInstance(fiber) {\n  {\n    throw new Error('Expected prepareToHydrateHostTextInstance() to never be called. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n  }\n  var shouldUpdate = hydrateTextInstance();\n}\n\nfunction popHydrationState(fiber) {\n  {\n    return false;\n  }\n}\n\nfunction getIsHydrating() {\n  return isHydrating;\n}\n\nvar didWarnAboutMaps;\nvar didWarnAboutGenerators;\nvar didWarnAboutStringRefs;\nvar ownerHasKeyUseWarning;\nvar ownerHasFunctionTypeWarning;\n\nvar warnForMissingKey = function (child, returnFiber) {};\n\n{\n  didWarnAboutMaps = false;\n  didWarnAboutGenerators = false;\n  didWarnAboutStringRefs = {};\n  /**\n   * Warn if there's no key explicitly set on dynamic arrays of children or\n   * object keys are not valid. This allows us to keep track of children between\n   * updates.\n   */\n\n  ownerHasKeyUseWarning = {};\n  ownerHasFunctionTypeWarning = {};\n\n  warnForMissingKey = function (child, returnFiber) {\n    if (child === null || typeof child !== 'object') {\n      return;\n    }\n\n    if (!child._store || child._store.validated || child.key != null) {\n      return;\n    }\n\n    if (typeof child._store !== 'object') {\n      throw new Error('React Component in warnForMissingKey should have a _store. ' + 'This error is likely caused by a bug in React. Please file an issue.');\n    }\n\n    child._store.validated = true;\n    var componentName = getComponentNameFromFiber(returnFiber) || 'Component';\n\n    if (ownerHasKeyUseWarning[componentName]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[componentName] = true;\n\n    error('Each child in a list should have a unique ' + '\"key\" prop. See https://reactjs.org/link/warning-keys for ' + 'more information.');\n  };\n}\n\nfunction coerceRef(returnFiber, current, element) {\n  var mixedRef = element.ref;\n\n  if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {\n    {\n      // TODO: Clean this up once we turn on the string ref warning for\n      // everyone, because the strict mode case will no longer be relevant\n      if ((returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) && // We warn in ReactElement.js if owner and self are equal for string refs\n      // because these cannot be automatically converted to an arrow function\n      // using a codemod. Therefore, we don't have to warn about string refs again.\n      !(element._owner && element._self && element._owner.stateNode !== element._self)) {\n        var componentName = getComponentNameFromFiber(returnFiber) || 'Component';\n\n        if (!didWarnAboutStringRefs[componentName]) {\n          {\n            error('A string ref, \"%s\", has been found within a strict mode tree. ' + 'String refs are a source of potential bugs and should be avoided. ' + 'We recommend using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', mixedRef);\n          }\n\n          didWarnAboutStringRefs[componentName] = true;\n        }\n      }\n    }\n\n    if (element._owner) {\n      var owner = element._owner;\n      var inst;\n\n      if (owner) {\n        var ownerFiber = owner;\n\n        if (ownerFiber.tag !== ClassComponent) {\n          throw new Error('Function components cannot have string refs. ' + 'We recommend using useRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref');\n        }\n\n        inst = ownerFiber.stateNode;\n      }\n\n      if (!inst) {\n        throw new Error(\"Missing owner for string ref \" + mixedRef + \". This error is likely caused by a \" + 'bug in React. Please file an issue.');\n      } // Assigning this to a const so Flow knows it won't change in the closure\n\n\n      var resolvedInst = inst;\n\n      {\n        checkPropStringCoercion(mixedRef, 'ref');\n      }\n\n      var stringRef = '' + mixedRef; // Check if previous string ref matches new string ref\n\n      if (current !== null && current.ref !== null && typeof current.ref === 'function' && current.ref._stringRef === stringRef) {\n        return current.ref;\n      }\n\n      var ref = function (value) {\n        var refs = resolvedInst.refs;\n\n        if (refs === emptyRefsObject) {\n          // This is a lazy pooled frozen object, so we need to initialize.\n          refs = resolvedInst.refs = {};\n        }\n\n        if (value === null) {\n          delete refs[stringRef];\n        } else {\n          refs[stringRef] = value;\n        }\n      };\n\n      ref._stringRef = stringRef;\n      return ref;\n    } else {\n      if (typeof mixedRef !== 'string') {\n        throw new Error('Expected ref to be a function, a string, an object returned by React.createRef(), or null.');\n      }\n\n      if (!element._owner) {\n        throw new Error(\"Element ref was specified as a string (\" + mixedRef + \") but no owner was set. This could happen for one of\" + ' the following reasons:\\n' + '1. You may be adding a ref to a function component\\n' + \"2. You may be adding a ref to a component that was not created inside a component's render method\\n\" + '3. You have multiple copies of React loaded\\n' + 'See https://reactjs.org/link/refs-must-have-owner for more information.');\n      }\n    }\n  }\n\n  return mixedRef;\n}\n\nfunction throwOnInvalidObjectType(returnFiber, newChild) {\n  var childString = Object.prototype.toString.call(newChild);\n  throw new Error(\"Objects are not valid as a React child (found: \" + (childString === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : childString) + \"). \" + 'If you meant to render a collection of children, use an array ' + 'instead.');\n}\n\nfunction warnOnFunctionType(returnFiber) {\n  {\n    var componentName = getComponentNameFromFiber(returnFiber) || 'Component';\n\n    if (ownerHasFunctionTypeWarning[componentName]) {\n      return;\n    }\n\n    ownerHasFunctionTypeWarning[componentName] = true;\n\n    error('Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.');\n  }\n}\n// to be able to optimize each path individually by branching early. This needs\n// a compiler or we can do it manually. Helpers that don't need this branching\n// live outside of this function.\n\n\nfunction ChildReconciler(shouldTrackSideEffects) {\n  function deleteChild(returnFiber, childToDelete) {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return;\n    }\n\n    var deletions = returnFiber.deletions;\n\n    if (deletions === null) {\n      returnFiber.deletions = [childToDelete];\n      returnFiber.flags |= ChildDeletion;\n    } else {\n      deletions.push(childToDelete);\n    }\n  }\n\n  function deleteRemainingChildren(returnFiber, currentFirstChild) {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return null;\n    } // TODO: For the shouldClone case, this could be micro-optimized a bit by\n    // assuming that after the first child we've already added everything.\n\n\n    var childToDelete = currentFirstChild;\n\n    while (childToDelete !== null) {\n      deleteChild(returnFiber, childToDelete);\n      childToDelete = childToDelete.sibling;\n    }\n\n    return null;\n  }\n\n  function mapRemainingChildren(returnFiber, currentFirstChild) {\n    // Add the remaining children to a temporary map so that we can find them by\n    // keys quickly. Implicit (null) keys get added to this set with their index\n    // instead.\n    var existingChildren = new Map();\n    var existingChild = currentFirstChild;\n\n    while (existingChild !== null) {\n      if (existingChild.key !== null) {\n        existingChildren.set(existingChild.key, existingChild);\n      } else {\n        existingChildren.set(existingChild.index, existingChild);\n      }\n\n      existingChild = existingChild.sibling;\n    }\n\n    return existingChildren;\n  }\n\n  function useFiber(fiber, pendingProps) {\n    // We currently set sibling to null and index to 0 here because it is easy\n    // to forget to do before returning it. E.g. for the single child case.\n    var clone = createWorkInProgress(fiber, pendingProps);\n    clone.index = 0;\n    clone.sibling = null;\n    return clone;\n  }\n\n  function placeChild(newFiber, lastPlacedIndex, newIndex) {\n    newFiber.index = newIndex;\n\n    if (!shouldTrackSideEffects) {\n      // During hydration, the useId algorithm needs to know which fibers are\n      // part of a list of children (arrays, iterators).\n      newFiber.flags |= Forked;\n      return lastPlacedIndex;\n    }\n\n    var current = newFiber.alternate;\n\n    if (current !== null) {\n      var oldIndex = current.index;\n\n      if (oldIndex < lastPlacedIndex) {\n        // This is a move.\n        newFiber.flags |= Placement;\n        return lastPlacedIndex;\n      } else {\n        // This item can stay in place.\n        return oldIndex;\n      }\n    } else {\n      // This is an insertion.\n      newFiber.flags |= Placement;\n      return lastPlacedIndex;\n    }\n  }\n\n  function placeSingleChild(newFiber) {\n    // This is simpler for the single child case. We only need to do a\n    // placement for inserting new children.\n    if (shouldTrackSideEffects && newFiber.alternate === null) {\n      newFiber.flags |= Placement;\n    }\n\n    return newFiber;\n  }\n\n  function updateTextNode(returnFiber, current, textContent, lanes) {\n    if (current === null || current.tag !== HostText) {\n      // Insert\n      var created = createFiberFromText(textContent, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      var existing = useFiber(current, textContent);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateElement(returnFiber, current, element, lanes) {\n    var elementType = element.type;\n\n    if (elementType === REACT_FRAGMENT_TYPE) {\n      return updateFragment(returnFiber, current, element.props.children, lanes, element.key);\n    }\n\n    if (current !== null) {\n      if (current.elementType === elementType || ( // Keep this check inline so it only runs on the false path:\n       isCompatibleFamilyForHotReloading(current, element) ) || // Lazy types should reconcile their resolved type.\n      // We need to do this after the Hot Reloading check above,\n      // because hot reloading has different semantics than prod because\n      // it doesn't resuspend. So we can't let the call below suspend.\n      enableLazyElements    ) {\n        // Move based on index\n        var existing = useFiber(current, element.props);\n        existing.ref = coerceRef(returnFiber, current, element);\n        existing.return = returnFiber;\n\n        {\n          existing._debugSource = element._source;\n          existing._debugOwner = element._owner;\n        }\n\n        return existing;\n      }\n    } // Insert\n\n\n    var created = createFiberFromElement(element, returnFiber.mode, lanes);\n    created.ref = coerceRef(returnFiber, current, element);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function updatePortal(returnFiber, current, portal, lanes) {\n    if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {\n      // Insert\n      var created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      var existing = useFiber(current, portal.children || []);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateFragment(returnFiber, current, fragment, lanes, key) {\n    if (current === null || current.tag !== Fragment) {\n      // Insert\n      var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      var existing = useFiber(current, fragment);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function createChild(returnFiber, newChild, lanes) {\n    if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      var created = createFiberFromText('' + newChild, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          {\n            var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);\n\n            _created.ref = coerceRef(returnFiber, null, newChild);\n            _created.return = returnFiber;\n            return _created;\n          }\n\n        case REACT_PORTAL_TYPE:\n          {\n            var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);\n\n            _created2.return = returnFiber;\n            return _created2;\n          }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);\n\n        _created3.return = returnFiber;\n        return _created3;\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  function updateSlot(returnFiber, oldFiber, newChild, lanes) {\n    // Update the fiber if the keys match, otherwise return null.\n    var key = oldFiber !== null ? oldFiber.key : null;\n\n    if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      if (key !== null) {\n        return null;\n      }\n\n      return updateTextNode(returnFiber, oldFiber, '' + newChild, lanes);\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          {\n            if (newChild.key === key) {\n              return updateElement(returnFiber, oldFiber, newChild, lanes);\n            } else {\n              return null;\n            }\n          }\n\n        case REACT_PORTAL_TYPE:\n          {\n            if (newChild.key === key) {\n              return updatePortal(returnFiber, oldFiber, newChild, lanes);\n            } else {\n              return null;\n            }\n          }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        if (key !== null) {\n          return null;\n        }\n\n        return updateFragment(returnFiber, oldFiber, newChild, lanes, null);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {\n    if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {\n      // Text nodes don't have keys, so we neither have to check the old nor\n      // new node for the key. If both are text nodes, they match.\n      var matchedFiber = existingChildren.get(newIdx) || null;\n      return updateTextNode(returnFiber, matchedFiber, '' + newChild, lanes);\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          {\n            var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;\n\n            return updateElement(returnFiber, _matchedFiber, newChild, lanes);\n          }\n\n        case REACT_PORTAL_TYPE:\n          {\n            var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;\n\n            return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);\n          }\n\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        var _matchedFiber3 = existingChildren.get(newIdx) || null;\n\n        return updateFragment(returnFiber, _matchedFiber3, newChild, lanes, null);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n  /**\n   * Warns if there is a duplicate or missing key\n   */\n\n\n  function warnOnInvalidKey(child, knownKeys, returnFiber) {\n    {\n      if (typeof child !== 'object' || child === null) {\n        return knownKeys;\n      }\n\n      switch (child.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n        case REACT_PORTAL_TYPE:\n          warnForMissingKey(child, returnFiber);\n          var key = child.key;\n\n          if (typeof key !== 'string') {\n            break;\n          }\n\n          if (knownKeys === null) {\n            knownKeys = new Set();\n            knownKeys.add(key);\n            break;\n          }\n\n          if (!knownKeys.has(key)) {\n            knownKeys.add(key);\n            break;\n          }\n\n          error('Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.', key);\n\n          break;\n      }\n    }\n\n    return knownKeys;\n  }\n\n  function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {\n    // This algorithm can't optimize by searching from both ends since we\n    // don't have backpointers on fibers. I'm trying to see how far we can get\n    // with that model. If it ends up not being worth the tradeoffs, we can\n    // add it later.\n    // Even with a two ended optimization, we'd want to optimize for the case\n    // where there are few changes and brute force the comparison instead of\n    // going for the Map. It'd like to explore hitting that path first in\n    // forward-only mode and only go for the Map once we notice that we need\n    // lots of look ahead. This doesn't handle reversal as well as two ended\n    // search but that's unusual. Besides, for the two ended optimization to\n    // work on Iterables, we'd need to copy the whole set.\n    // In this first iteration, we'll just live with hitting the bad case\n    // (adding everything to a Map) in for every insert/move.\n    // If you change this code, also update reconcileChildrenIterator() which\n    // uses the same algorithm.\n    {\n      // First, validate keys.\n      var knownKeys = null;\n\n      for (var i = 0; i < newChildren.length; i++) {\n        var child = newChildren[i];\n        knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n      }\n    }\n\n    var resultingFirstChild = null;\n    var previousNewFiber = null;\n    var oldFiber = currentFirstChild;\n    var lastPlacedIndex = 0;\n    var newIdx = 0;\n    var nextOldFiber = null;\n\n    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n\n      var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);\n\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n\n        break;\n      }\n\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (newIdx === newChildren.length) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; newIdx < newChildren.length; newIdx++) {\n        var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);\n\n        if (_newFiber === null) {\n          continue;\n        }\n\n        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);\n\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = _newFiber;\n        } else {\n          previousNewFiber.sibling = _newFiber;\n        }\n\n        previousNewFiber = _newFiber;\n      }\n\n      return resultingFirstChild;\n    } // Add all children to a key map for quick lookups.\n\n\n    var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.\n\n    for (; newIdx < newChildren.length; newIdx++) {\n      var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);\n\n      if (_newFiber2 !== null) {\n        if (shouldTrackSideEffects) {\n          if (_newFiber2.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);\n          }\n        }\n\n        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);\n\n        if (previousNewFiber === null) {\n          resultingFirstChild = _newFiber2;\n        } else {\n          previousNewFiber.sibling = _newFiber2;\n        }\n\n        previousNewFiber = _newFiber2;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(function (child) {\n        return deleteChild(returnFiber, child);\n      });\n    }\n\n    return resultingFirstChild;\n  }\n\n  function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {\n    // This is the same implementation as reconcileChildrenArray(),\n    // but using the iterator instead.\n    var iteratorFn = getIteratorFn(newChildrenIterable);\n\n    if (typeof iteratorFn !== 'function') {\n      throw new Error('An object is not an iterable. This error is likely caused by a bug in ' + 'React. Please file an issue.');\n    }\n\n    {\n      // We don't support rendering Generators because it's a mutation.\n      // See https://github.com/facebook/react/issues/12995\n      if (typeof Symbol === 'function' && // $FlowFixMe Flow doesn't know about toStringTag\n      newChildrenIterable[Symbol.toStringTag] === 'Generator') {\n        if (!didWarnAboutGenerators) {\n          error('Using Generators as children is unsupported and will likely yield ' + 'unexpected results because enumerating a generator mutates it. ' + 'You may convert it to an array with `Array.from()` or the ' + '`[...spread]` operator before rendering. Keep in mind ' + 'you might need to polyfill these features for older browsers.');\n        }\n\n        didWarnAboutGenerators = true;\n      } // Warn about using Maps as children\n\n\n      if (newChildrenIterable.entries === iteratorFn) {\n        if (!didWarnAboutMaps) {\n          error('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');\n        }\n\n        didWarnAboutMaps = true;\n      } // First, validate keys.\n      // We'll get a different iterator later for the main pass.\n\n\n      var _newChildren = iteratorFn.call(newChildrenIterable);\n\n      if (_newChildren) {\n        var knownKeys = null;\n\n        var _step = _newChildren.next();\n\n        for (; !_step.done; _step = _newChildren.next()) {\n          var child = _step.value;\n          knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n        }\n      }\n    }\n\n    var newChildren = iteratorFn.call(newChildrenIterable);\n\n    if (newChildren == null) {\n      throw new Error('An iterable object provided no iterator.');\n    }\n\n    var resultingFirstChild = null;\n    var previousNewFiber = null;\n    var oldFiber = currentFirstChild;\n    var lastPlacedIndex = 0;\n    var newIdx = 0;\n    var nextOldFiber = null;\n    var step = newChildren.next();\n\n    for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n\n      var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\n\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n\n        break;\n      }\n\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (step.done) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; !step.done; newIdx++, step = newChildren.next()) {\n        var _newFiber3 = createChild(returnFiber, step.value, lanes);\n\n        if (_newFiber3 === null) {\n          continue;\n        }\n\n        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);\n\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = _newFiber3;\n        } else {\n          previousNewFiber.sibling = _newFiber3;\n        }\n\n        previousNewFiber = _newFiber3;\n      }\n\n      return resultingFirstChild;\n    } // Add all children to a key map for quick lookups.\n\n\n    var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.\n\n    for (; !step.done; newIdx++, step = newChildren.next()) {\n      var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);\n\n      if (_newFiber4 !== null) {\n        if (shouldTrackSideEffects) {\n          if (_newFiber4.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);\n          }\n        }\n\n        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);\n\n        if (previousNewFiber === null) {\n          resultingFirstChild = _newFiber4;\n        } else {\n          previousNewFiber.sibling = _newFiber4;\n        }\n\n        previousNewFiber = _newFiber4;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(function (child) {\n        return deleteChild(returnFiber, child);\n      });\n    }\n\n    return resultingFirstChild;\n  }\n\n  function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {\n    // There's no need to check for keys on text nodes since we don't have a\n    // way to define them.\n    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {\n      // We already have an existing node so let's just update it and delete\n      // the rest.\n      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);\n      var existing = useFiber(currentFirstChild, textContent);\n      existing.return = returnFiber;\n      return existing;\n    } // The existing first child is not a text node so we need to create one\n    // and delete the existing ones.\n\n\n    deleteRemainingChildren(returnFiber, currentFirstChild);\n    var created = createFiberFromText(textContent, returnFiber.mode, lanes);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {\n    var key = element.key;\n    var child = currentFirstChild;\n\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        var elementType = element.type;\n\n        if (elementType === REACT_FRAGMENT_TYPE) {\n          if (child.tag === Fragment) {\n            deleteRemainingChildren(returnFiber, child.sibling);\n            var existing = useFiber(child, element.props.children);\n            existing.return = returnFiber;\n\n            {\n              existing._debugSource = element._source;\n              existing._debugOwner = element._owner;\n            }\n\n            return existing;\n          }\n        } else {\n          if (child.elementType === elementType || ( // Keep this check inline so it only runs on the false path:\n           isCompatibleFamilyForHotReloading(child, element) ) || // Lazy types should reconcile their resolved type.\n          // We need to do this after the Hot Reloading check above,\n          // because hot reloading has different semantics than prod because\n          // it doesn't resuspend. So we can't let the call below suspend.\n          enableLazyElements    ) {\n            deleteRemainingChildren(returnFiber, child.sibling);\n\n            var _existing = useFiber(child, element.props);\n\n            _existing.ref = coerceRef(returnFiber, child, element);\n            _existing.return = returnFiber;\n\n            {\n              _existing._debugSource = element._source;\n              _existing._debugOwner = element._owner;\n            }\n\n            return _existing;\n          }\n        } // Didn't match.\n\n\n        deleteRemainingChildren(returnFiber, child);\n        break;\n      } else {\n        deleteChild(returnFiber, child);\n      }\n\n      child = child.sibling;\n    }\n\n    if (element.type === REACT_FRAGMENT_TYPE) {\n      var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);\n      created.return = returnFiber;\n      return created;\n    } else {\n      var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);\n\n      _created4.ref = coerceRef(returnFiber, currentFirstChild, element);\n      _created4.return = returnFiber;\n      return _created4;\n    }\n  }\n\n  function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {\n    var key = portal.key;\n    var child = currentFirstChild;\n\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {\n          deleteRemainingChildren(returnFiber, child.sibling);\n          var existing = useFiber(child, portal.children || []);\n          existing.return = returnFiber;\n          return existing;\n        } else {\n          deleteRemainingChildren(returnFiber, child);\n          break;\n        }\n      } else {\n        deleteChild(returnFiber, child);\n      }\n\n      child = child.sibling;\n    }\n\n    var created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n    created.return = returnFiber;\n    return created;\n  } // This API will tag the children with the side-effect of the reconciliation\n  // itself. They will be added to the side-effect list as we pass through the\n  // children and the parent.\n\n\n  function reconcileChildFibers(returnFiber, currentFirstChild, newChild, lanes) {\n    // This function is not recursive.\n    // If the top level item is an array, we treat it as a set of children,\n    // not as a fragment. Nested arrays on the other hand will be treated as\n    // fragment nodes. Recursion happens at the normal flow.\n    // Handle top level unkeyed fragments as if they were arrays.\n    // This leads to an ambiguity between <>{[...]}</> and <>...</>.\n    // We treat the ambiguous cases above the same.\n    var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;\n\n    if (isUnkeyedTopLevelFragment) {\n      newChild = newChild.props.children;\n    } // Handle object types\n\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));\n\n        case REACT_PORTAL_TYPE:\n          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));\n\n      }\n\n      if (isArray(newChild)) {\n        return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);\n      }\n\n      if (getIteratorFn(newChild)) {\n        return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {\n      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, lanes));\n    }\n\n    {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    } // Remaining cases are all treated as empty.\n\n\n    return deleteRemainingChildren(returnFiber, currentFirstChild);\n  }\n\n  return reconcileChildFibers;\n}\n\nvar reconcileChildFibers = ChildReconciler(true);\nvar mountChildFibers = ChildReconciler(false);\nfunction cloneChildFibers(current, workInProgress) {\n  if (current !== null && workInProgress.child !== current.child) {\n    throw new Error('Resuming work not yet implemented.');\n  }\n\n  if (workInProgress.child === null) {\n    return;\n  }\n\n  var currentChild = workInProgress.child;\n  var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);\n  workInProgress.child = newChild;\n  newChild.return = workInProgress;\n\n  while (currentChild.sibling !== null) {\n    currentChild = currentChild.sibling;\n    newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);\n    newChild.return = workInProgress;\n  }\n\n  newChild.sibling = null;\n} // Reset a workInProgress child set to prepare it for a second pass.\n\nfunction resetChildFibers(workInProgress, lanes) {\n  var child = workInProgress.child;\n\n  while (child !== null) {\n    resetWorkInProgress(child, lanes);\n    child = child.sibling;\n  }\n}\n\nvar NO_CONTEXT$1 = {};\nvar contextStackCursor$1 = createCursor(NO_CONTEXT$1);\nvar contextFiberStackCursor = createCursor(NO_CONTEXT$1);\nvar rootInstanceStackCursor = createCursor(NO_CONTEXT$1);\n\nfunction requiredContext(c) {\n  if (c === NO_CONTEXT$1) {\n    throw new Error('Expected host context to exist. This error is likely caused by a bug ' + 'in React. Please file an issue.');\n  }\n\n  return c;\n}\n\nfunction getRootHostContainer() {\n  var rootInstance = requiredContext(rootInstanceStackCursor.current);\n  return rootInstance;\n}\n\nfunction pushHostContainer(fiber, nextRootInstance) {\n  // Push current root instance onto the stack;\n  // This allows us to reset root when portals are popped.\n  push(rootInstanceStackCursor, nextRootInstance, fiber); // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n\n  push(contextFiberStackCursor, fiber, fiber); // Finally, we need to push the host context to the stack.\n  // However, we can't just call getRootHostContext() and push it because\n  // we'd have a different number of entries on the stack depending on\n  // whether getRootHostContext() throws somewhere in renderer code or not.\n  // So we push an empty value first. This lets us safely unwind on errors.\n\n  push(contextStackCursor$1, NO_CONTEXT$1, fiber);\n  var nextRootContext = getRootHostContext(); // Now that we know this function doesn't throw, replace it.\n\n  pop(contextStackCursor$1, fiber);\n  push(contextStackCursor$1, nextRootContext, fiber);\n}\n\nfunction popHostContainer(fiber) {\n  pop(contextStackCursor$1, fiber);\n  pop(contextFiberStackCursor, fiber);\n  pop(rootInstanceStackCursor, fiber);\n}\n\nfunction getHostContext() {\n  var context = requiredContext(contextStackCursor$1.current);\n  return context;\n}\n\nfunction pushHostContext(fiber) {\n  var rootInstance = requiredContext(rootInstanceStackCursor.current);\n  var context = requiredContext(contextStackCursor$1.current);\n  var nextContext = getChildHostContext(context, fiber.type); // Don't push this Fiber's context unless it's unique.\n\n  if (context === nextContext) {\n    return;\n  } // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n\n\n  push(contextFiberStackCursor, fiber, fiber);\n  push(contextStackCursor$1, nextContext, fiber);\n}\n\nfunction popHostContext(fiber) {\n  // Do not pop unless this Fiber provided the current context.\n  // pushHostContext() only pushes Fibers that provide unique contexts.\n  if (contextFiberStackCursor.current !== fiber) {\n    return;\n  }\n\n  pop(contextStackCursor$1, fiber);\n  pop(contextFiberStackCursor, fiber);\n}\n\nvar DefaultSuspenseContext = 0; // The Suspense Context is split into two parts. The lower bits is\n// inherited deeply down the subtree. The upper bits only affect\n// this immediate suspense boundary and gets reset each new\n// boundary or suspense list.\n\nvar SubtreeSuspenseContextMask = 1; // Subtree Flags:\n// InvisibleParentSuspenseContext indicates that one of our parent Suspense\n// boundaries is not currently showing visible main content.\n// Either because it is already showing a fallback or is not mounted at all.\n// We can use this to determine if it is desirable to trigger a fallback at\n// the parent. If not, then we might need to trigger undesirable boundaries\n// and/or suspend the commit to avoid hiding the parent content.\n\nvar InvisibleParentSuspenseContext = 1; // Shallow Flags:\n// ForceSuspenseFallback can be used by SuspenseList to force newly added\n// items into their fallback state during one of the render passes.\n\nvar ForceSuspenseFallback = 2;\nvar suspenseStackCursor = createCursor(DefaultSuspenseContext);\nfunction hasSuspenseContext(parentContext, flag) {\n  return (parentContext & flag) !== 0;\n}\nfunction setDefaultShallowSuspenseContext(parentContext) {\n  return parentContext & SubtreeSuspenseContextMask;\n}\nfunction setShallowSuspenseContext(parentContext, shallowContext) {\n  return parentContext & SubtreeSuspenseContextMask | shallowContext;\n}\nfunction addSubtreeSuspenseContext(parentContext, subtreeContext) {\n  return parentContext | subtreeContext;\n}\nfunction pushSuspenseContext(fiber, newContext) {\n  push(suspenseStackCursor, newContext, fiber);\n}\nfunction popSuspenseContext(fiber) {\n  pop(suspenseStackCursor, fiber);\n}\n\nfunction shouldCaptureSuspense(workInProgress, hasInvisibleParent) {\n  // If it was the primary children that just suspended, capture and render the\n  // fallback. Otherwise, don't capture and bubble to the next boundary.\n  var nextState = workInProgress.memoizedState;\n\n  if (nextState !== null) {\n    if (nextState.dehydrated !== null) {\n      // A dehydrated boundary always captures.\n      return true;\n    }\n\n    return false;\n  }\n\n  var props = workInProgress.memoizedProps; // Regular boundaries always capture.\n\n  {\n    return true;\n  } // If it's a boundary we should avoid, then we prefer to bubble up to the\n}\nfunction findFirstSuspended(row) {\n  var node = row;\n\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      var state = node.memoizedState;\n\n      if (state !== null) {\n        var dehydrated = state.dehydrated;\n\n        if (dehydrated === null || isSuspenseInstancePending() || isSuspenseInstanceFallback()) {\n          return node;\n        }\n      }\n    } else if (node.tag === SuspenseListComponent && // revealOrder undefined can't be trusted because it don't\n    // keep track of whether it suspended or not.\n    node.memoizedProps.revealOrder !== undefined) {\n      var didSuspend = (node.flags & DidCapture) !== NoFlags;\n\n      if (didSuspend) {\n        return node;\n      }\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n\n    if (node === row) {\n      return null;\n    }\n\n    while (node.sibling === null) {\n      if (node.return === null || node.return === row) {\n        return null;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n\n  return null;\n}\n\nvar NoFlags$1 =\n/*   */\n0; // Represents whether effect should fire.\n\nvar HasEffect =\n/* */\n1; // Represents the phase in which the effect (not the clean-up) fires.\n\nvar Insertion =\n/*  */\n2;\nvar Layout =\n/*    */\n4;\nvar Passive$1 =\n/*   */\n8;\n\n// and should be reset before starting a new render.\n// This tracks which mutable sources need to be reset after a render.\n\nvar workInProgressSources = [];\nfunction resetWorkInProgressVersions() {\n  for (var i = 0; i < workInProgressSources.length; i++) {\n    var mutableSource = workInProgressSources[i];\n\n    {\n      mutableSource._workInProgressVersionSecondary = null;\n    }\n  }\n\n  workInProgressSources.length = 0;\n}\n\nvar ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,\n    ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;\nvar didWarnAboutMismatchedHooksForComponent;\nvar didWarnUncachedGetSnapshot;\n\n{\n  didWarnAboutMismatchedHooksForComponent = new Set();\n}\n\n// These are set right before calling the component.\nvar renderLanes = NoLanes; // The work-in-progress fiber. I've named it differently to distinguish it from\n// the work-in-progress hook.\n\nvar currentlyRenderingFiber$1 = null; // Hooks are stored as a linked list on the fiber's memoizedState field. The\n// current hook list is the list that belongs to the current fiber. The\n// work-in-progress hook list is a new list that will be added to the\n// work-in-progress fiber.\n\nvar currentHook = null;\nvar workInProgressHook = null; // Whether an update was scheduled at any point during the render phase. This\n// does not get reset if we do another render pass; only when we're completely\n// finished evaluating this component. This is an optimization so we know\n// whether we need to clear render phase updates after a throw.\n\nvar didScheduleRenderPhaseUpdate = false; // Where an update was scheduled only during the current render pass. This\n// gets reset after each attempt.\n// TODO: Maybe there's some way to consolidate this with\n// `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.\n\nvar didScheduleRenderPhaseUpdateDuringThisPass = false; // Counts the number of useId hooks in this component.\n// hydration). This counter is global, so client ids are not stable across\n// render attempts.\n\nvar globalClientIdCounter = 0;\nvar RE_RENDER_LIMIT = 25; // In DEV, this is the name of the currently executing primitive hook\n\nvar currentHookNameInDev = null; // In DEV, this list ensures that hooks are called in the same order between renders.\n// The list stores the order of hooks used during the initial render (mount).\n// Subsequent renders (updates) reference this list.\n\nvar hookTypesDev = null;\nvar hookTypesUpdateIndexDev = -1; // In DEV, this tracks whether currently rendering component needs to ignore\n// the dependencies for Hooks that need them (e.g. useEffect or useMemo).\n// When true, such Hooks will always be \"remounted\". Only used during hot reload.\n\nvar ignorePreviousDependencies = false;\n\nfunction mountHookTypesDev() {\n  {\n    var hookName = currentHookNameInDev;\n\n    if (hookTypesDev === null) {\n      hookTypesDev = [hookName];\n    } else {\n      hookTypesDev.push(hookName);\n    }\n  }\n}\n\nfunction updateHookTypesDev() {\n  {\n    var hookName = currentHookNameInDev;\n\n    if (hookTypesDev !== null) {\n      hookTypesUpdateIndexDev++;\n\n      if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {\n        warnOnHookMismatchInDev(hookName);\n      }\n    }\n  }\n}\n\nfunction checkDepsAreArrayDev(deps) {\n  {\n    if (deps !== undefined && deps !== null && !isArray(deps)) {\n      // Verify deps, but only on mount to avoid extra checks.\n      // It's unlikely their type would change as usually you define them inline.\n      error('%s received a final argument that is not an array (instead, received `%s`). When ' + 'specified, the final argument must be an array.', currentHookNameInDev, typeof deps);\n    }\n  }\n}\n\nfunction warnOnHookMismatchInDev(currentHookName) {\n  {\n    var componentName = getComponentNameFromFiber(currentlyRenderingFiber$1);\n\n    if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {\n      didWarnAboutMismatchedHooksForComponent.add(componentName);\n\n      if (hookTypesDev !== null) {\n        var table = '';\n        var secondColumnStart = 30;\n\n        for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {\n          var oldHookName = hookTypesDev[i];\n          var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;\n          var row = i + 1 + \". \" + oldHookName; // Extra space so second column lines up\n          // lol @ IE not supporting String#repeat\n\n          while (row.length < secondColumnStart) {\n            row += ' ';\n          }\n\n          row += newHookName + '\\n';\n          table += row;\n        }\n\n        error('React has detected a change in the order of Hooks called by %s. ' + 'This will lead to bugs and errors if not fixed. ' + 'For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\\n\\n' + '   Previous render            Next render\\n' + '   ------------------------------------------------------\\n' + '%s' + '   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n', componentName, table);\n      }\n    }\n  }\n}\n\nfunction throwInvalidHookError() {\n  throw new Error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' + '2. You might be breaking the Rules of Hooks\\n' + '3. You might have more than one copy of React in the same app\\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');\n}\n\nfunction areHookInputsEqual(nextDeps, prevDeps) {\n  {\n    if (ignorePreviousDependencies) {\n      // Only true when this component is being hot reloaded.\n      return false;\n    }\n  }\n\n  if (prevDeps === null) {\n    {\n      error('%s received a final argument during this render, but not during ' + 'the previous render. Even though the final argument is optional, ' + 'its type cannot change between renders.', currentHookNameInDev);\n    }\n\n    return false;\n  }\n\n  {\n    // Don't bother comparing lengths in prod because these arrays should be\n    // passed inline.\n    if (nextDeps.length !== prevDeps.length) {\n      error('The final argument passed to %s changed size between renders. The ' + 'order and size of this array must remain constant.\\n\\n' + 'Previous: %s\\n' + 'Incoming: %s', currentHookNameInDev, \"[\" + prevDeps.join(', ') + \"]\", \"[\" + nextDeps.join(', ') + \"]\");\n    }\n  }\n\n  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {\n    if (objectIs(nextDeps[i], prevDeps[i])) {\n      continue;\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {\n  renderLanes = nextRenderLanes;\n  currentlyRenderingFiber$1 = workInProgress;\n\n  {\n    hookTypesDev = current !== null ? current._debugHookTypes : null;\n    hookTypesUpdateIndexDev = -1; // Used for hot reloading:\n\n    ignorePreviousDependencies = current !== null && current.type !== workInProgress.type;\n  }\n\n  workInProgress.memoizedState = null;\n  workInProgress.updateQueue = null;\n  workInProgress.lanes = NoLanes; // The following should have already been reset\n  // currentHook = null;\n  // workInProgressHook = null;\n  // didScheduleRenderPhaseUpdate = false;\n  // localIdCounter = 0;\n  // TODO Warn if no hooks are used at all during mount, then some are used during update.\n  // Currently we will identify the update render as a mount because memoizedState === null.\n  // This is tricky because it's valid for certain types of components (e.g. React.lazy)\n  // Using memoizedState to differentiate between mount/update only works if at least one stateful hook is used.\n  // Non-stateful hooks (e.g. context) don't get added to memoizedState,\n  // so memoizedState would be null during updates and mounts.\n\n  {\n    if (current !== null && current.memoizedState !== null) {\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;\n    } else if (hookTypesDev !== null) {\n      // This dispatcher handles an edge case where a component is updating,\n      // but no stateful hooks have been used.\n      // We want to match the production code behavior (which will use HooksDispatcherOnMount),\n      // but with the extra DEV validation to ensure hooks ordering hasn't changed.\n      // This dispatcher does that.\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;\n    } else {\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;\n    }\n  }\n\n  var children = Component(props, secondArg); // Check if there was a render phase update\n\n  if (didScheduleRenderPhaseUpdateDuringThisPass) {\n    // Keep rendering in a loop for as long as render phase updates continue to\n    // be scheduled. Use a counter to prevent infinite loops.\n    var numberOfReRenders = 0;\n\n    do {\n      didScheduleRenderPhaseUpdateDuringThisPass = false;\n\n      if (numberOfReRenders >= RE_RENDER_LIMIT) {\n        throw new Error('Too many re-renders. React limits the number of renders to prevent ' + 'an infinite loop.');\n      }\n\n      numberOfReRenders += 1;\n\n      {\n        // Even when hot reloading, allow dependencies to stabilize\n        // after first render to prevent infinite render phase updates.\n        ignorePreviousDependencies = false;\n      } // Start over from the beginning of the list\n\n\n      currentHook = null;\n      workInProgressHook = null;\n      workInProgress.updateQueue = null;\n\n      {\n        // Also validate hook order for cascading updates.\n        hookTypesUpdateIndexDev = -1;\n      }\n\n      ReactCurrentDispatcher$1.current =  HooksDispatcherOnRerenderInDEV ;\n      children = Component(props, secondArg);\n    } while (didScheduleRenderPhaseUpdateDuringThisPass);\n  } // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrance.\n\n\n  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\n\n  {\n    workInProgress._debugHookTypes = hookTypesDev;\n  } // This check uses currentHook so that it works the same in DEV and prod bundles.\n  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.\n\n\n  var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;\n  renderLanes = NoLanes;\n  currentlyRenderingFiber$1 = null;\n  currentHook = null;\n  workInProgressHook = null;\n\n  {\n    currentHookNameInDev = null;\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1; // Confirm that a static flag was not added or removed since the last\n    // render. If this fires, it suggests that we incorrectly reset the static\n    // flags in some other part of the codebase. This has happened before, for\n    // example, in the SuspenseList implementation.\n\n    if (current !== null && (current.flags & StaticMask) !== (workInProgress.flags & StaticMask) && // Disable this warning in legacy mode, because legacy Suspense is weird\n    // and creates false positives. To make this work in legacy mode, we'd\n    // need to mark fibers that commit in an incomplete state, somehow. For\n    // now I'll disable the warning that most of the bugs that would trigger\n    // it are either exclusive to concurrent mode or exist in both.\n    (current.mode & ConcurrentMode) !== NoMode) {\n      error('Internal React error: Expected static flag was missing. Please ' + 'notify the React team.');\n    }\n  }\n\n  didScheduleRenderPhaseUpdate = false; // This is reset by checkDidRenderIdHook\n  // localIdCounter = 0;\n\n  if (didRenderTooFewHooks) {\n    throw new Error('Rendered fewer hooks than expected. This may be caused by an accidental ' + 'early return statement.');\n  }\n\n  return children;\n}\nfunction bailoutHooks(current, workInProgress, lanes) {\n  workInProgress.updateQueue = current.updateQueue; // TODO: Don't need to reset the flags here, because they're reset in the\n  // complete phase (bubbleProperties).\n\n  {\n    workInProgress.flags &= ~(Passive | Update);\n  }\n\n  current.lanes = removeLanes(current.lanes, lanes);\n}\nfunction resetHooksAfterThrow() {\n  // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrance.\n  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\n\n  if (didScheduleRenderPhaseUpdate) {\n    // There were render phase updates. These are only valid for this render\n    // phase, which we are now aborting. Remove the updates from the queues so\n    // they do not persist to the next render. Do not remove updates from hooks\n    // that weren't processed.\n    //\n    // Only reset the updates from the queue if it has a clone. If it does\n    // not have a clone, that means it wasn't processed, and the updates were\n    // scheduled before we entered the render phase.\n    var hook = currentlyRenderingFiber$1.memoizedState;\n\n    while (hook !== null) {\n      var queue = hook.queue;\n\n      if (queue !== null) {\n        queue.pending = null;\n      }\n\n      hook = hook.next;\n    }\n\n    didScheduleRenderPhaseUpdate = false;\n  }\n\n  renderLanes = NoLanes;\n  currentlyRenderingFiber$1 = null;\n  currentHook = null;\n  workInProgressHook = null;\n\n  {\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1;\n    currentHookNameInDev = null;\n    isUpdatingOpaqueValueInRenderPhase = false;\n  }\n\n  didScheduleRenderPhaseUpdateDuringThisPass = false;\n}\n\nfunction mountWorkInProgressHook() {\n  var hook = {\n    memoizedState: null,\n    baseState: null,\n    baseQueue: null,\n    queue: null,\n    next: null\n  };\n\n  if (workInProgressHook === null) {\n    // This is the first hook in the list\n    currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;\n  } else {\n    // Append to the end of the list\n    workInProgressHook = workInProgressHook.next = hook;\n  }\n\n  return workInProgressHook;\n}\n\nfunction updateWorkInProgressHook() {\n  // This function is used both for updates and for re-renders triggered by a\n  // render phase update. It assumes there is either a current hook we can\n  // clone, or a work-in-progress hook from a previous render pass that we can\n  // use as a base. When we reach the end of the base list, we must switch to\n  // the dispatcher used for mounts.\n  var nextCurrentHook;\n\n  if (currentHook === null) {\n    var current = currentlyRenderingFiber$1.alternate;\n\n    if (current !== null) {\n      nextCurrentHook = current.memoizedState;\n    } else {\n      nextCurrentHook = null;\n    }\n  } else {\n    nextCurrentHook = currentHook.next;\n  }\n\n  var nextWorkInProgressHook;\n\n  if (workInProgressHook === null) {\n    nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;\n  } else {\n    nextWorkInProgressHook = workInProgressHook.next;\n  }\n\n  if (nextWorkInProgressHook !== null) {\n    // There's already a work-in-progress. Reuse it.\n    workInProgressHook = nextWorkInProgressHook;\n    nextWorkInProgressHook = workInProgressHook.next;\n    currentHook = nextCurrentHook;\n  } else {\n    // Clone from the current hook.\n    if (nextCurrentHook === null) {\n      throw new Error('Rendered more hooks than during the previous render.');\n    }\n\n    currentHook = nextCurrentHook;\n    var newHook = {\n      memoizedState: currentHook.memoizedState,\n      baseState: currentHook.baseState,\n      baseQueue: currentHook.baseQueue,\n      queue: currentHook.queue,\n      next: null\n    };\n\n    if (workInProgressHook === null) {\n      // This is the first hook in the list.\n      currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;\n    } else {\n      // Append to the end of the list.\n      workInProgressHook = workInProgressHook.next = newHook;\n    }\n  }\n\n  return workInProgressHook;\n}\n\nfunction createFunctionComponentUpdateQueue() {\n  return {\n    lastEffect: null,\n    stores: null\n  };\n}\n\nfunction basicStateReducer(state, action) {\n  // $FlowFixMe: Flow doesn't like mixed types\n  return typeof action === 'function' ? action(state) : action;\n}\n\nfunction mountReducer(reducer, initialArg, init) {\n  var hook = mountWorkInProgressHook();\n  var initialState;\n\n  if (init !== undefined) {\n    initialState = init(initialArg);\n  } else {\n    initialState = initialArg;\n  }\n\n  hook.memoizedState = hook.baseState = initialState;\n  var queue = {\n    pending: null,\n    interleaved: null,\n    lanes: NoLanes,\n    dispatch: null,\n    lastRenderedReducer: reducer,\n    lastRenderedState: initialState\n  };\n  hook.queue = queue;\n  var dispatch = queue.dispatch = dispatchReducerAction.bind(null, currentlyRenderingFiber$1, queue);\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateReducer(reducer, initialArg, init) {\n  var hook = updateWorkInProgressHook();\n  var queue = hook.queue;\n\n  if (queue === null) {\n    throw new Error('Should have a queue. This is likely a bug in React. Please file an issue.');\n  }\n\n  queue.lastRenderedReducer = reducer;\n  var current = currentHook; // The last rebase update that is NOT part of the base state.\n\n  var baseQueue = current.baseQueue; // The last pending update that hasn't been processed yet.\n\n  var pendingQueue = queue.pending;\n\n  if (pendingQueue !== null) {\n    // We have new updates that haven't been processed yet.\n    // We'll add them to the base queue.\n    if (baseQueue !== null) {\n      // Merge the pending queue and the base queue.\n      var baseFirst = baseQueue.next;\n      var pendingFirst = pendingQueue.next;\n      baseQueue.next = pendingFirst;\n      pendingQueue.next = baseFirst;\n    }\n\n    {\n      if (current.baseQueue !== baseQueue) {\n        // Internal invariant that should never happen, but feasibly could in\n        // the future if we implement resuming, or some form of that.\n        error('Internal error: Expected work-in-progress queue to be a clone. ' + 'This is a bug in React.');\n      }\n    }\n\n    current.baseQueue = baseQueue = pendingQueue;\n    queue.pending = null;\n  }\n\n  if (baseQueue !== null) {\n    // We have a queue to process.\n    var first = baseQueue.next;\n    var newState = current.baseState;\n    var newBaseState = null;\n    var newBaseQueueFirst = null;\n    var newBaseQueueLast = null;\n    var update = first;\n\n    do {\n      var updateLane = update.lane;\n\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        var clone = {\n          lane: updateLane,\n          action: update.action,\n          hasEagerState: update.hasEagerState,\n          eagerState: update.eagerState,\n          next: null\n        };\n\n        if (newBaseQueueLast === null) {\n          newBaseQueueFirst = newBaseQueueLast = clone;\n          newBaseState = newState;\n        } else {\n          newBaseQueueLast = newBaseQueueLast.next = clone;\n        } // Update the remaining priority in the queue.\n        // TODO: Don't need to accumulate this. Instead, we can remove\n        // renderLanes from the original lanes.\n\n\n        currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);\n        markSkippedUpdateLanes(updateLane);\n      } else {\n        // This update does have sufficient priority.\n        if (newBaseQueueLast !== null) {\n          var _clone = {\n            // This update is going to be committed so we never want uncommit\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\n            // this will never be skipped by the check above.\n            lane: NoLane,\n            action: update.action,\n            hasEagerState: update.hasEagerState,\n            eagerState: update.eagerState,\n            next: null\n          };\n          newBaseQueueLast = newBaseQueueLast.next = _clone;\n        } // Process this update.\n\n\n        if (update.hasEagerState) {\n          // If this update is a state update (not a reducer) and was processed eagerly,\n          // we can use the eagerly computed state\n          newState = update.eagerState;\n        } else {\n          var action = update.action;\n          newState = reducer(newState, action);\n        }\n      }\n\n      update = update.next;\n    } while (update !== null && update !== first);\n\n    if (newBaseQueueLast === null) {\n      newBaseState = newState;\n    } else {\n      newBaseQueueLast.next = newBaseQueueFirst;\n    } // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n\n\n    if (!objectIs(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState;\n    hook.baseState = newBaseState;\n    hook.baseQueue = newBaseQueueLast;\n    queue.lastRenderedState = newState;\n  } // Interleaved updates are stored on a separate queue. We aren't going to\n  // process them during this render, but we do need to track which lanes\n  // are remaining.\n\n\n  var lastInterleaved = queue.interleaved;\n\n  if (lastInterleaved !== null) {\n    var interleaved = lastInterleaved;\n\n    do {\n      var interleavedLane = interleaved.lane;\n      currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, interleavedLane);\n      markSkippedUpdateLanes(interleavedLane);\n      interleaved = interleaved.next;\n    } while (interleaved !== lastInterleaved);\n  } else if (baseQueue === null) {\n    // `queue.lanes` is used for entangling transitions. We can set it back to\n    // zero once the queue is empty.\n    queue.lanes = NoLanes;\n  }\n\n  var dispatch = queue.dispatch;\n  return [hook.memoizedState, dispatch];\n}\n\nfunction rerenderReducer(reducer, initialArg, init) {\n  var hook = updateWorkInProgressHook();\n  var queue = hook.queue;\n\n  if (queue === null) {\n    throw new Error('Should have a queue. This is likely a bug in React. Please file an issue.');\n  }\n\n  queue.lastRenderedReducer = reducer; // This is a re-render. Apply the new render phase updates to the previous\n  // work-in-progress hook.\n\n  var dispatch = queue.dispatch;\n  var lastRenderPhaseUpdate = queue.pending;\n  var newState = hook.memoizedState;\n\n  if (lastRenderPhaseUpdate !== null) {\n    // The queue doesn't persist past this render pass.\n    queue.pending = null;\n    var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;\n    var update = firstRenderPhaseUpdate;\n\n    do {\n      // Process this render phase update. We don't have to check the\n      // priority because it will always be the same as the current\n      // render's.\n      var action = update.action;\n      newState = reducer(newState, action);\n      update = update.next;\n    } while (update !== firstRenderPhaseUpdate); // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n\n\n    if (!objectIs(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState; // Don't persist the state accumulated from the render phase updates to\n    // the base state unless the queue is empty.\n    // TODO: Not sure if this is the desired semantics, but it's what we\n    // do for gDSFP. I can't remember why.\n\n    if (hook.baseQueue === null) {\n      hook.baseState = newState;\n    }\n\n    queue.lastRenderedState = newState;\n  }\n\n  return [newState, dispatch];\n}\n\nfunction mountMutableSource(source, getSnapshot, subscribe) {\n  {\n    return undefined;\n  }\n}\n\nfunction updateMutableSource(source, getSnapshot, subscribe) {\n  {\n    return undefined;\n  }\n}\n\nfunction mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var fiber = currentlyRenderingFiber$1;\n  var hook = mountWorkInProgressHook();\n  var nextSnapshot;\n\n  {\n    nextSnapshot = getSnapshot();\n\n    {\n      if (!didWarnUncachedGetSnapshot) {\n        var cachedSnapshot = getSnapshot();\n\n        if (!objectIs(nextSnapshot, cachedSnapshot)) {\n          error('The result of getSnapshot should be cached to avoid an infinite loop');\n\n          didWarnUncachedGetSnapshot = true;\n        }\n      }\n    } // Unless we're rendering a blocking lane, schedule a consistency check.\n    // Right before committing, we will walk the tree and check if any of the\n    // stores were mutated.\n    //\n    // We won't do this if we're hydrating server-rendered content, because if\n    // the content is stale, it's already visible anyway. Instead we'll patch\n    // it up in a passive effect.\n\n\n    var root = getWorkInProgressRoot();\n\n    if (root === null) {\n      throw new Error('Expected a work-in-progress root. This is a bug in React. Please file an issue.');\n    }\n\n    if (!includesBlockingLane(root, renderLanes)) {\n      pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\n    }\n  } // Read the current snapshot from the store on every render. This breaks the\n  // normal rules of React, and only works because store updates are\n  // always synchronous.\n\n\n  hook.memoizedState = nextSnapshot;\n  var inst = {\n    value: nextSnapshot,\n    getSnapshot: getSnapshot\n  };\n  hook.queue = inst; // Schedule an effect to subscribe to the store.\n\n  mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]); // Schedule an effect to update the mutable instance fields. We will update\n  // this whenever subscribe, getSnapshot, or value changes. Because there's no\n  // clean-up function, and we track the deps correctly, we can call pushEffect\n  // directly, without storing any additional state. For the same reason, we\n  // don't need to set a static flag, either.\n  // TODO: We can move this to the passive phase once we add a pre-commit\n  // consistency check. See the next comment.\n\n  fiber.flags |= Passive;\n  pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null);\n  return nextSnapshot;\n}\n\nfunction updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var fiber = currentlyRenderingFiber$1;\n  var hook = updateWorkInProgressHook(); // Read the current snapshot from the store on every render. This breaks the\n  // normal rules of React, and only works because store updates are\n  // always synchronous.\n\n  var nextSnapshot = getSnapshot();\n\n  {\n    if (!didWarnUncachedGetSnapshot) {\n      var cachedSnapshot = getSnapshot();\n\n      if (!objectIs(nextSnapshot, cachedSnapshot)) {\n        error('The result of getSnapshot should be cached to avoid an infinite loop');\n\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  }\n\n  var prevSnapshot = hook.memoizedState;\n  var snapshotChanged = !objectIs(prevSnapshot, nextSnapshot);\n\n  if (snapshotChanged) {\n    hook.memoizedState = nextSnapshot;\n    markWorkInProgressReceivedUpdate();\n  }\n\n  var inst = hook.queue;\n  updateEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]); // Whenever getSnapshot or subscribe changes, we need to check in the\n  // commit phase if there was an interleaved mutation. In concurrent mode\n  // this can happen all the time, but even in synchronous mode, an earlier\n  // effect may have mutated the store.\n\n  if (inst.getSnapshot !== getSnapshot || snapshotChanged || // Check if the susbcribe function changed. We can save some memory by\n  // checking whether we scheduled a subscription effect above.\n  workInProgressHook !== null && workInProgressHook.memoizedState.tag & HasEffect) {\n    fiber.flags |= Passive;\n    pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null); // Unless we're rendering a blocking lane, schedule a consistency check.\n    // Right before committing, we will walk the tree and check if any of the\n    // stores were mutated.\n\n    var root = getWorkInProgressRoot();\n\n    if (root === null) {\n      throw new Error('Expected a work-in-progress root. This is a bug in React. Please file an issue.');\n    }\n\n    if (!includesBlockingLane(root, renderLanes)) {\n      pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\n    }\n  }\n\n  return nextSnapshot;\n}\n\nfunction pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {\n  fiber.flags |= StoreConsistency;\n  var check = {\n    getSnapshot: getSnapshot,\n    value: renderedSnapshot\n  };\n  var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;\n\n  if (componentUpdateQueue === null) {\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\n    currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;\n    componentUpdateQueue.stores = [check];\n  } else {\n    var stores = componentUpdateQueue.stores;\n\n    if (stores === null) {\n      componentUpdateQueue.stores = [check];\n    } else {\n      stores.push(check);\n    }\n  }\n}\n\nfunction updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {\n  // These are updated in the passive phase\n  inst.value = nextSnapshot;\n  inst.getSnapshot = getSnapshot; // Something may have been mutated in between render and commit. This could\n  // have been in an event that fired before the passive effects, or it could\n  // have been in a layout effect. In that case, we would have used the old\n  // snapsho and getSnapshot values to bail out. We need to check one more time.\n\n  if (checkIfSnapshotChanged(inst)) {\n    // Force a re-render.\n    forceStoreRerender(fiber);\n  }\n}\n\nfunction subscribeToStore(fiber, inst, subscribe) {\n  var handleStoreChange = function () {\n    // The store changed. Check if the snapshot changed since the last time we\n    // read from the store.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceStoreRerender(fiber);\n    }\n  }; // Subscribe to the store and return a clean-up function.\n\n\n  return subscribe(handleStoreChange);\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  var prevValue = inst.value;\n\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction forceStoreRerender(fiber) {\n  scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n}\n\nfunction mountState(initialState) {\n  var hook = mountWorkInProgressHook();\n\n  if (typeof initialState === 'function') {\n    // $FlowFixMe: Flow doesn't like mixed types\n    initialState = initialState();\n  }\n\n  hook.memoizedState = hook.baseState = initialState;\n  var queue = {\n    pending: null,\n    interleaved: null,\n    lanes: NoLanes,\n    dispatch: null,\n    lastRenderedReducer: basicStateReducer,\n    lastRenderedState: initialState\n  };\n  hook.queue = queue;\n  var dispatch = queue.dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateState(initialState) {\n  return updateReducer(basicStateReducer);\n}\n\nfunction rerenderState(initialState) {\n  return rerenderReducer(basicStateReducer);\n}\n\nfunction pushEffect(tag, create, destroy, deps) {\n  var effect = {\n    tag: tag,\n    create: create,\n    destroy: destroy,\n    deps: deps,\n    // Circular\n    next: null\n  };\n  var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;\n\n  if (componentUpdateQueue === null) {\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\n    currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;\n    componentUpdateQueue.lastEffect = effect.next = effect;\n  } else {\n    var lastEffect = componentUpdateQueue.lastEffect;\n\n    if (lastEffect === null) {\n      componentUpdateQueue.lastEffect = effect.next = effect;\n    } else {\n      var firstEffect = lastEffect.next;\n      lastEffect.next = effect;\n      effect.next = firstEffect;\n      componentUpdateQueue.lastEffect = effect;\n    }\n  }\n\n  return effect;\n}\n\nfunction mountRef(initialValue) {\n  var hook = mountWorkInProgressHook();\n\n  {\n    var _ref2 = {\n      current: initialValue\n    };\n    hook.memoizedState = _ref2;\n    return _ref2;\n  }\n}\n\nfunction updateRef(initialValue) {\n  var hook = updateWorkInProgressHook();\n  return hook.memoizedState;\n}\n\nfunction mountEffectImpl(fiberFlags, hookFlags, create, deps) {\n  var hook = mountWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  currentlyRenderingFiber$1.flags |= fiberFlags;\n  hook.memoizedState = pushEffect(HasEffect | hookFlags, create, undefined, nextDeps);\n}\n\nfunction updateEffectImpl(fiberFlags, hookFlags, create, deps) {\n  var hook = updateWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  var destroy = undefined;\n\n  if (currentHook !== null) {\n    var prevEffect = currentHook.memoizedState;\n    destroy = prevEffect.destroy;\n\n    if (nextDeps !== null) {\n      var prevDeps = prevEffect.deps;\n\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);\n        return;\n      }\n    }\n  }\n\n  currentlyRenderingFiber$1.flags |= fiberFlags;\n  hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);\n}\n\nfunction mountEffect(create, deps) {\n  {\n    return mountEffectImpl(Passive | PassiveStatic, Passive$1, create, deps);\n  }\n}\n\nfunction updateEffect(create, deps) {\n  return updateEffectImpl(Passive, Passive$1, create, deps);\n}\n\nfunction mountInsertionEffect(create, deps) {\n  return mountEffectImpl(Update, Insertion, create, deps);\n}\n\nfunction updateInsertionEffect(create, deps) {\n  return updateEffectImpl(Update, Insertion, create, deps);\n}\n\nfunction mountLayoutEffect(create, deps) {\n  var fiberFlags = Update;\n\n  return mountEffectImpl(fiberFlags, Layout, create, deps);\n}\n\nfunction updateLayoutEffect(create, deps) {\n  return updateEffectImpl(Update, Layout, create, deps);\n}\n\nfunction imperativeHandleEffect(create, ref) {\n  if (typeof ref === 'function') {\n    var refCallback = ref;\n\n    var _inst = create();\n\n    refCallback(_inst);\n    return function () {\n      refCallback(null);\n    };\n  } else if (ref !== null && ref !== undefined) {\n    var refObject = ref;\n\n    {\n      if (!refObject.hasOwnProperty('current')) {\n        error('Expected useImperativeHandle() first argument to either be a ' + 'ref callback or React.createRef() object. Instead received: %s.', 'an object with keys {' + Object.keys(refObject).join(', ') + '}');\n      }\n    }\n\n    var _inst2 = create();\n\n    refObject.current = _inst2;\n    return function () {\n      refObject.current = null;\n    };\n  }\n}\n\nfunction mountImperativeHandle(ref, create, deps) {\n  {\n    if (typeof create !== 'function') {\n      error('Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null');\n    }\n  } // TODO: If deps are provided, should we skip comparing the ref itself?\n\n\n  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n  var fiberFlags = Update;\n\n  return mountEffectImpl(fiberFlags, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);\n}\n\nfunction updateImperativeHandle(ref, create, deps) {\n  {\n    if (typeof create !== 'function') {\n      error('Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null');\n    }\n  } // TODO: If deps are provided, should we skip comparing the ref itself?\n\n\n  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n  return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);\n}\n\nfunction mountDebugValue(value, formatterFn) {// This hook is normally a no-op.\n  // The react-debug-hooks package injects its own implementation\n  // so that e.g. DevTools can display custom hook values.\n}\n\nvar updateDebugValue = mountDebugValue;\n\nfunction mountCallback(callback, deps) {\n  var hook = mountWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction updateCallback(callback, deps) {\n  var hook = updateWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  var prevState = hook.memoizedState;\n\n  if (prevState !== null) {\n    if (nextDeps !== null) {\n      var prevDeps = prevState[1];\n\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction mountMemo(nextCreate, deps) {\n  var hook = mountWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  var nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction updateMemo(nextCreate, deps) {\n  var hook = updateWorkInProgressHook();\n  var nextDeps = deps === undefined ? null : deps;\n  var prevState = hook.memoizedState;\n\n  if (prevState !== null) {\n    // Assume these are defined. If they're not, areHookInputsEqual will warn.\n    if (nextDeps !== null) {\n      var prevDeps = prevState[1];\n\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n\n  var nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction mountDeferredValue(value) {\n  var _mountState = mountState(value),\n      prevValue = _mountState[0],\n      setValue = _mountState[1];\n\n  mountEffect(function () {\n    var prevTransition = ReactCurrentBatchConfig$1.transition;\n    ReactCurrentBatchConfig$1.transition = {};\n\n    try {\n      setValue(value);\n    } finally {\n      ReactCurrentBatchConfig$1.transition = prevTransition;\n    }\n  }, [value]);\n  return prevValue;\n}\n\nfunction updateDeferredValue(value) {\n  var _updateState = updateState(),\n      prevValue = _updateState[0],\n      setValue = _updateState[1];\n\n  updateEffect(function () {\n    var prevTransition = ReactCurrentBatchConfig$1.transition;\n    ReactCurrentBatchConfig$1.transition = {};\n\n    try {\n      setValue(value);\n    } finally {\n      ReactCurrentBatchConfig$1.transition = prevTransition;\n    }\n  }, [value]);\n  return prevValue;\n}\n\nfunction rerenderDeferredValue(value) {\n  var _rerenderState = rerenderState(),\n      prevValue = _rerenderState[0],\n      setValue = _rerenderState[1];\n\n  updateEffect(function () {\n    var prevTransition = ReactCurrentBatchConfig$1.transition;\n    ReactCurrentBatchConfig$1.transition = {};\n\n    try {\n      setValue(value);\n    } finally {\n      ReactCurrentBatchConfig$1.transition = prevTransition;\n    }\n  }, [value]);\n  return prevValue;\n}\n\nfunction startTransition(setPending, callback, options) {\n  var previousPriority = getCurrentUpdatePriority();\n  setCurrentUpdatePriority(higherEventPriority(previousPriority, ContinuousEventPriority));\n  setPending(true);\n  var prevTransition = ReactCurrentBatchConfig$1.transition;\n  ReactCurrentBatchConfig$1.transition = {};\n  var currentTransition = ReactCurrentBatchConfig$1.transition;\n\n  {\n    ReactCurrentBatchConfig$1.transition._updatedFibers = new Set();\n  }\n\n  try {\n    setPending(false);\n    callback();\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig$1.transition = prevTransition;\n\n    {\n      if (prevTransition === null && currentTransition._updatedFibers) {\n        var updatedFibersCount = currentTransition._updatedFibers.size;\n\n        if (updatedFibersCount > 10) {\n          warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');\n        }\n\n        currentTransition._updatedFibers.clear();\n      }\n    }\n  }\n}\n\nfunction mountTransition() {\n  var _mountState2 = mountState(false),\n      isPending = _mountState2[0],\n      setPending = _mountState2[1]; // The `start` method never changes.\n\n\n  var start = startTransition.bind(null, setPending);\n  var hook = mountWorkInProgressHook();\n  hook.memoizedState = start;\n  return [isPending, start];\n}\n\nfunction updateTransition() {\n  var _updateState2 = updateState(),\n      isPending = _updateState2[0];\n\n  var hook = updateWorkInProgressHook();\n  var start = hook.memoizedState;\n  return [isPending, start];\n}\n\nfunction rerenderTransition() {\n  var _rerenderState2 = rerenderState(),\n      isPending = _rerenderState2[0];\n\n  var hook = updateWorkInProgressHook();\n  var start = hook.memoizedState;\n  return [isPending, start];\n}\n\nvar isUpdatingOpaqueValueInRenderPhase = false;\nfunction getIsUpdatingOpaqueValueInRenderPhaseInDEV() {\n  {\n    return isUpdatingOpaqueValueInRenderPhase;\n  }\n}\n\nfunction mountId() {\n  var hook = mountWorkInProgressHook();\n  var root = getWorkInProgressRoot(); // TODO: In Fizz, id generation is specific to each server config. Maybe we\n  // should do this in Fiber, too? Deferring this decision for now because\n  // there's no other place to store the prefix except for an internal field on\n  // the public createRoot object, which the fiber tree does not currently have\n  // a reference to.\n\n  var identifierPrefix = root.identifierPrefix;\n  var id;\n\n  {\n    // Use a lowercase r prefix for client-generated ids.\n    var globalClientId = globalClientIdCounter++;\n    id = ':' + identifierPrefix + 'r' + globalClientId.toString(32) + ':';\n  }\n\n  hook.memoizedState = id;\n  return id;\n}\n\nfunction updateId() {\n  var hook = updateWorkInProgressHook();\n  var id = hook.memoizedState;\n  return id;\n}\n\nfunction dispatchReducerAction(fiber, queue, action) {\n  {\n    if (typeof arguments[3] === 'function') {\n      error(\"State updates from the useState() and useReducer() Hooks don't support the \" + 'second callback argument. To execute a side effect after ' + 'rendering, declare it in the component body with useEffect().');\n    }\n  }\n\n  var lane = requestUpdateLane(fiber);\n  var update = {\n    lane: lane,\n    action: action,\n    hasEagerState: false,\n    eagerState: null,\n    next: null\n  };\n\n  if (isRenderPhaseUpdate(fiber)) {\n    enqueueRenderPhaseUpdate(queue, update);\n  } else {\n    enqueueUpdate$1(fiber, queue, update);\n    var eventTime = requestEventTime();\n    var root = scheduleUpdateOnFiber(fiber, lane, eventTime);\n\n    if (root !== null) {\n      entangleTransitionUpdate(root, queue, lane);\n    }\n  }\n}\n\nfunction dispatchSetState(fiber, queue, action) {\n  {\n    if (typeof arguments[3] === 'function') {\n      error(\"State updates from the useState() and useReducer() Hooks don't support the \" + 'second callback argument. To execute a side effect after ' + 'rendering, declare it in the component body with useEffect().');\n    }\n  }\n\n  var lane = requestUpdateLane(fiber);\n  var update = {\n    lane: lane,\n    action: action,\n    hasEagerState: false,\n    eagerState: null,\n    next: null\n  };\n\n  if (isRenderPhaseUpdate(fiber)) {\n    enqueueRenderPhaseUpdate(queue, update);\n  } else {\n    enqueueUpdate$1(fiber, queue, update);\n    var alternate = fiber.alternate;\n\n    if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {\n      // The queue is currently empty, which means we can eagerly compute the\n      // next state before entering the render phase. If the new state is the\n      // same as the current state, we may be able to bail out entirely.\n      var lastRenderedReducer = queue.lastRenderedReducer;\n\n      if (lastRenderedReducer !== null) {\n        var prevDispatcher;\n\n        {\n          prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n        }\n\n        try {\n          var currentState = queue.lastRenderedState;\n          var eagerState = lastRenderedReducer(currentState, action); // Stash the eagerly computed state, and the reducer used to compute\n          // it, on the update object. If the reducer hasn't changed by the\n          // time we enter the render phase, then the eager state can be used\n          // without calling the reducer again.\n\n          update.hasEagerState = true;\n          update.eagerState = eagerState;\n\n          if (objectIs(eagerState, currentState)) {\n            // Fast path. We can bail out without scheduling React to re-render.\n            // It's still possible that we'll need to rebase this update later,\n            // if the component re-renders for a different reason and by that\n            // time the reducer has changed.\n            return;\n          }\n        } catch (error) {// Suppress the error. It will throw again in the render phase.\n        } finally {\n          {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        }\n      }\n    }\n\n    var eventTime = requestEventTime();\n    var root = scheduleUpdateOnFiber(fiber, lane, eventTime);\n\n    if (root !== null) {\n      entangleTransitionUpdate(root, queue, lane);\n    }\n  }\n}\n\nfunction isRenderPhaseUpdate(fiber) {\n  var alternate = fiber.alternate;\n  return fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1;\n}\n\nfunction enqueueRenderPhaseUpdate(queue, update) {\n  // This is a render phase update. Stash it in a lazily-created map of\n  // queue -> linked list of updates. After this render pass, we'll restart\n  // and apply the stashed updates on top of the work-in-progress hook.\n  didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;\n  var pending = queue.pending;\n\n  if (pending === null) {\n    // This is the first update. Create a circular list.\n    update.next = update;\n  } else {\n    update.next = pending.next;\n    pending.next = update;\n  }\n\n  queue.pending = update;\n}\n\nfunction enqueueUpdate$1(fiber, queue, update, lane) {\n  if (isInterleavedUpdate(fiber)) {\n    var interleaved = queue.interleaved;\n\n    if (interleaved === null) {\n      // This is the first update. Create a circular list.\n      update.next = update; // At the end of the current render, this queue's interleaved updates will\n      // be transferred to the pending queue.\n\n      pushInterleavedQueue(queue);\n    } else {\n      update.next = interleaved.next;\n      interleaved.next = update;\n    }\n\n    queue.interleaved = update;\n  } else {\n    var pending = queue.pending;\n\n    if (pending === null) {\n      // This is the first update. Create a circular list.\n      update.next = update;\n    } else {\n      update.next = pending.next;\n      pending.next = update;\n    }\n\n    queue.pending = update;\n  }\n}\n\nfunction entangleTransitionUpdate(root, queue, lane) {\n  if (isTransitionLane(lane)) {\n    var queueLanes = queue.lanes; // If any entangled lanes are no longer pending on the root, then they\n    // must have finished. We can remove them from the shared queue, which\n    // represents a superset of the actually pending lanes. In some cases we\n    // may entangle more than we need to, but that's OK. In fact it's worse if\n    // we *don't* entangle when we should.\n\n    queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.\n\n    var newQueueLanes = mergeLanes(queueLanes, lane);\n    queue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if\n    // the lane finished since the last time we entangled it. So we need to\n    // entangle it again, just to be sure.\n\n    markRootEntangled(root, newQueueLanes);\n  }\n}\n\nvar ContextOnlyDispatcher = {\n  readContext: readContext,\n  useCallback: throwInvalidHookError,\n  useContext: throwInvalidHookError,\n  useEffect: throwInvalidHookError,\n  useImperativeHandle: throwInvalidHookError,\n  useInsertionEffect: throwInvalidHookError,\n  useLayoutEffect: throwInvalidHookError,\n  useMemo: throwInvalidHookError,\n  useReducer: throwInvalidHookError,\n  useRef: throwInvalidHookError,\n  useState: throwInvalidHookError,\n  useDebugValue: throwInvalidHookError,\n  useDeferredValue: throwInvalidHookError,\n  useTransition: throwInvalidHookError,\n  useMutableSource: throwInvalidHookError,\n  useSyncExternalStore: throwInvalidHookError,\n  useId: throwInvalidHookError,\n  unstable_isNewReconciler: enableNewReconciler\n};\n\nvar HooksDispatcherOnMountInDEV = null;\nvar HooksDispatcherOnMountWithHookTypesInDEV = null;\nvar HooksDispatcherOnUpdateInDEV = null;\nvar HooksDispatcherOnRerenderInDEV = null;\nvar InvalidNestedHooksDispatcherOnMountInDEV = null;\nvar InvalidNestedHooksDispatcherOnUpdateInDEV = null;\nvar InvalidNestedHooksDispatcherOnRerenderInDEV = null;\n\n{\n  var warnInvalidContextAccess = function () {\n    error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');\n  };\n\n  var warnInvalidHookAccess = function () {\n    error('Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' + 'You can only call Hooks at the top level of your React function. ' + 'For more information, see ' + 'https://reactjs.org/link/rules-of-hooks');\n  };\n\n  HooksDispatcherOnMountInDEV = {\n    readContext: function (context) {\n      return readContext(context);\n    },\n    useCallback: function (callback, deps) {\n      currentHookNameInDev = 'useCallback';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountCallback(callback, deps);\n    },\n    useContext: function (context) {\n      currentHookNameInDev = 'useContext';\n      mountHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function (create, deps) {\n      currentHookNameInDev = 'useEffect';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle: function (ref, create, deps) {\n      currentHookNameInDev = 'useImperativeHandle';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function (create, deps) {\n      currentHookNameInDev = 'useInsertionEffect';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function (create, deps) {\n      currentHookNameInDev = 'useLayoutEffect';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo: function (create, deps) {\n      currentHookNameInDev = 'useMemo';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function (reducer, initialArg, init) {\n      currentHookNameInDev = 'useReducer';\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function (initialValue) {\n      currentHookNameInDev = 'useRef';\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState: function (initialState) {\n      currentHookNameInDev = 'useState';\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function (value, formatterFn) {\n      currentHookNameInDev = 'useDebugValue';\n      mountHookTypesDev();\n      return mountDebugValue();\n    },\n    useDeferredValue: function (value) {\n      currentHookNameInDev = 'useDeferredValue';\n      mountHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition: function () {\n      currentHookNameInDev = 'useTransition';\n      mountHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource: function (source, getSnapshot, subscribe) {\n      currentHookNameInDev = 'useMutableSource';\n      mountHookTypesDev();\n      return mountMutableSource();\n    },\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = 'useSyncExternalStore';\n      mountHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function () {\n      currentHookNameInDev = 'useId';\n      mountHookTypesDev();\n      return mountId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  HooksDispatcherOnMountWithHookTypesInDEV = {\n    readContext: function (context) {\n      return readContext(context);\n    },\n    useCallback: function (callback, deps) {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext: function (context) {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function (create, deps) {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle: function (ref, create, deps) {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function (create, deps) {\n      currentHookNameInDev = 'useInsertionEffect';\n      updateHookTypesDev();\n      return mountInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function (create, deps) {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo: function (create, deps) {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function (reducer, initialArg, init) {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function (initialValue) {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState: function (initialState) {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function (value, formatterFn) {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return mountDebugValue();\n    },\n    useDeferredValue: function (value) {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition: function () {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource: function (source, getSnapshot, subscribe) {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return mountMutableSource();\n    },\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = 'useSyncExternalStore';\n      updateHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function () {\n      currentHookNameInDev = 'useId';\n      updateHookTypesDev();\n      return mountId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  HooksDispatcherOnUpdateInDEV = {\n    readContext: function (context) {\n      return readContext(context);\n    },\n    useCallback: function (callback, deps) {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext: function (context) {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function (create, deps) {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle: function (ref, create, deps) {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function (create, deps) {\n      currentHookNameInDev = 'useInsertionEffect';\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function (create, deps) {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo: function (create, deps) {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function (reducer, initialArg, init) {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function (initialValue) {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return updateRef();\n    },\n    useState: function (initialState) {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function (value, formatterFn) {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return updateDebugValue();\n    },\n    useDeferredValue: function (value) {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return updateDeferredValue(value);\n    },\n    useTransition: function () {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return updateTransition();\n    },\n    useMutableSource: function (source, getSnapshot, subscribe) {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return updateMutableSource();\n    },\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = 'useSyncExternalStore';\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function () {\n      currentHookNameInDev = 'useId';\n      updateHookTypesDev();\n      return updateId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  HooksDispatcherOnRerenderInDEV = {\n    readContext: function (context) {\n      return readContext(context);\n    },\n    useCallback: function (callback, deps) {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext: function (context) {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function (create, deps) {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle: function (ref, create, deps) {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function (create, deps) {\n      currentHookNameInDev = 'useInsertionEffect';\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function (create, deps) {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo: function (create, deps) {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function (reducer, initialArg, init) {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n\n      try {\n        return rerenderReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function (initialValue) {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return updateRef();\n    },\n    useState: function (initialState) {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n\n      try {\n        return rerenderState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function (value, formatterFn) {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return updateDebugValue();\n    },\n    useDeferredValue: function (value) {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return rerenderDeferredValue(value);\n    },\n    useTransition: function () {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return rerenderTransition();\n    },\n    useMutableSource: function (source, getSnapshot, subscribe) {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return updateMutableSource();\n    },\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = 'useSyncExternalStore';\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function () {\n      currentHookNameInDev = 'useId';\n      updateHookTypesDev();\n      return updateId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  InvalidNestedHooksDispatcherOnMountInDEV = {\n    readContext: function (context) {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n    useCallback: function (callback, deps) {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext: function (context) {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function (create, deps) {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle: function (ref, create, deps) {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function (create, deps) {\n      currentHookNameInDev = 'useInsertionEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function (create, deps) {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo: function (create, deps) {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function (reducer, initialArg, init) {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function (initialValue) {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState: function (initialState) {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function (value, formatterFn) {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDebugValue();\n    },\n    useDeferredValue: function (value) {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition: function () {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource: function (source, getSnapshot, subscribe) {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountMutableSource();\n    },\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = 'useSyncExternalStore';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function () {\n      currentHookNameInDev = 'useId';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  InvalidNestedHooksDispatcherOnUpdateInDEV = {\n    readContext: function (context) {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n    useCallback: function (callback, deps) {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext: function (context) {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function (create, deps) {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle: function (ref, create, deps) {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function (create, deps) {\n      currentHookNameInDev = 'useInsertionEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function (create, deps) {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo: function (create, deps) {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function (reducer, initialArg, init) {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function (initialValue) {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef();\n    },\n    useState: function (initialState) {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function (value, formatterFn) {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue();\n    },\n    useDeferredValue: function (value) {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDeferredValue(value);\n    },\n    useTransition: function () {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateTransition();\n    },\n    useMutableSource: function (source, getSnapshot, subscribe) {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateMutableSource();\n    },\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = 'useSyncExternalStore';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function () {\n      currentHookNameInDev = 'useId';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n\n  InvalidNestedHooksDispatcherOnRerenderInDEV = {\n    readContext: function (context) {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n    useCallback: function (callback, deps) {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext: function (context) {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect: function (create, deps) {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle: function (ref, create, deps) {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useInsertionEffect: function (create, deps) {\n      currentHookNameInDev = 'useInsertionEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateInsertionEffect(create, deps);\n    },\n    useLayoutEffect: function (create, deps) {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo: function (create, deps) {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useReducer: function (reducer, initialArg, init) {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return rerenderReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useRef: function (initialValue) {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef();\n    },\n    useState: function (initialState) {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n\n      try {\n        return rerenderState(initialState);\n      } finally {\n        ReactCurrentDispatcher$1.current = prevDispatcher;\n      }\n    },\n    useDebugValue: function (value, formatterFn) {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue();\n    },\n    useDeferredValue: function (value) {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderDeferredValue(value);\n    },\n    useTransition: function () {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderTransition();\n    },\n    useMutableSource: function (source, getSnapshot, subscribe) {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateMutableSource();\n    },\n    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {\n      currentHookNameInDev = 'useSyncExternalStore';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useId: function () {\n      currentHookNameInDev = 'useId';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateId();\n    },\n    unstable_isNewReconciler: enableNewReconciler\n  };\n}\n\nvar now$1 = Scheduler$1.unstable_now;\nvar commitTime = 0;\nvar layoutEffectStartTime = -1;\nvar profilerStartTime = -1;\nvar passiveEffectStartTime = -1;\n/**\n * Tracks whether the current update was a nested/cascading update (scheduled from a layout effect).\n *\n * The overall sequence is:\n *   1. render\n *   2. commit (and call `onRender`, `onCommit`)\n *   3. check for nested updates\n *   4. flush passive effects (and call `onPostCommit`)\n *\n * Nested updates are identified in step 3 above,\n * but step 4 still applies to the work that was just committed.\n * We use two flags to track nested updates then:\n * one tracks whether the upcoming update is a nested update,\n * and the other tracks whether the current update was a nested update.\n * The first value gets synced to the second at the start of the render phase.\n */\n\nvar currentUpdateIsNested = false;\nvar nestedUpdateScheduled = false;\n\nfunction isCurrentUpdateNested() {\n  return currentUpdateIsNested;\n}\n\nfunction markNestedUpdateScheduled() {\n  {\n    nestedUpdateScheduled = true;\n  }\n}\n\nfunction resetNestedUpdateFlag() {\n  {\n    currentUpdateIsNested = false;\n    nestedUpdateScheduled = false;\n  }\n}\n\nfunction syncNestedUpdateFlag() {\n  {\n    currentUpdateIsNested = nestedUpdateScheduled;\n    nestedUpdateScheduled = false;\n  }\n}\n\nfunction getCommitTime() {\n  return commitTime;\n}\n\nfunction recordCommitTime() {\n\n  commitTime = now$1();\n}\n\nfunction startProfilerTimer(fiber) {\n\n  profilerStartTime = now$1();\n\n  if (fiber.actualStartTime < 0) {\n    fiber.actualStartTime = now$1();\n  }\n}\n\nfunction stopProfilerTimerIfRunning(fiber) {\n\n  profilerStartTime = -1;\n}\n\nfunction stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {\n\n  if (profilerStartTime >= 0) {\n    var elapsedTime = now$1() - profilerStartTime;\n    fiber.actualDuration += elapsedTime;\n\n    if (overrideBaseTime) {\n      fiber.selfBaseDuration = elapsedTime;\n    }\n\n    profilerStartTime = -1;\n  }\n}\n\nfunction recordLayoutEffectDuration(fiber) {\n\n  if (layoutEffectStartTime >= 0) {\n    var elapsedTime = now$1() - layoutEffectStartTime;\n    layoutEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor\n    // Or the root (for the DevTools Profiler to read)\n\n    var parentFiber = fiber.return;\n\n    while (parentFiber !== null) {\n      switch (parentFiber.tag) {\n        case HostRoot:\n          var root = parentFiber.stateNode;\n          root.effectDuration += elapsedTime;\n          return;\n\n        case Profiler:\n          var parentStateNode = parentFiber.stateNode;\n          parentStateNode.effectDuration += elapsedTime;\n          return;\n      }\n\n      parentFiber = parentFiber.return;\n    }\n  }\n}\n\nfunction recordPassiveEffectDuration(fiber) {\n\n  if (passiveEffectStartTime >= 0) {\n    var elapsedTime = now$1() - passiveEffectStartTime;\n    passiveEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor\n    // Or the root (for the DevTools Profiler to read)\n\n    var parentFiber = fiber.return;\n\n    while (parentFiber !== null) {\n      switch (parentFiber.tag) {\n        case HostRoot:\n          var root = parentFiber.stateNode;\n\n          if (root !== null) {\n            root.passiveEffectDuration += elapsedTime;\n          }\n\n          return;\n\n        case Profiler:\n          var parentStateNode = parentFiber.stateNode;\n\n          if (parentStateNode !== null) {\n            // Detached fibers have their state node cleared out.\n            // In this case, the return pointer is also cleared out,\n            // so we won't be able to report the time spent in this Profiler's subtree.\n            parentStateNode.passiveEffectDuration += elapsedTime;\n          }\n\n          return;\n      }\n\n      parentFiber = parentFiber.return;\n    }\n  }\n}\n\nfunction startLayoutEffectTimer() {\n\n  layoutEffectStartTime = now$1();\n}\n\nfunction startPassiveEffectTimer() {\n\n  passiveEffectStartTime = now$1();\n}\n\nfunction transferActualDuration(fiber) {\n  // Transfer time spent rendering these children so we don't lose it\n  // after we rerender. This is used as a helper in special cases\n  // where we should count the work of multiple passes.\n  var child = fiber.child;\n\n  while (child) {\n    fiber.actualDuration += child.actualDuration;\n    child = child.sibling;\n  }\n}\n\nfunction createCapturedValue(value, source) {\n  // If the value is an error, call this function immediately after it is thrown\n  // so the stack is accurate.\n  return {\n    value: value,\n    source: source,\n    stack: getStackByFiberInDevAndProd(source)\n  };\n}\n\n// This module is forked in different environments.\n// By default, return `true` to log errors to the console.\n// Forks can return `false` if this isn't desirable.\nfunction showErrorDialog(boundary, errorInfo) {\n  return true;\n}\n\nfunction logCapturedError(boundary, errorInfo) {\n  try {\n    var logError = showErrorDialog(boundary, errorInfo); // Allow injected showErrorDialog() to prevent default console.error logging.\n    // This enables renderers like ReactNative to better manage redbox behavior.\n\n    if (logError === false) {\n      return;\n    }\n\n    var error = errorInfo.value;\n\n    if (true) {\n      var source = errorInfo.source;\n      var stack = errorInfo.stack;\n      var componentStack = stack !== null ? stack : ''; // Browsers support silencing uncaught errors by calling\n      // `preventDefault()` in window `error` handler.\n      // We record this information as an expando on the error.\n\n      if (error != null && error._suppressLogging) {\n        if (boundary.tag === ClassComponent) {\n          // The error is recoverable and was silenced.\n          // Ignore it and don't print the stack addendum.\n          // This is handy for testing error boundaries without noise.\n          return;\n        } // The error is fatal. Since the silencing might have\n        // been accidental, we'll surface it anyway.\n        // However, the browser would have silenced the original error\n        // so we'll print it first, and then print the stack addendum.\n\n\n        console['error'](error); // Don't transform to our wrapper\n        // For a more detailed description of this block, see:\n        // https://github.com/facebook/react/pull/13384\n      }\n\n      var componentName = source ? getComponentNameFromFiber(source) : null;\n      var componentNameMessage = componentName ? \"The above error occurred in the <\" + componentName + \"> component:\" : 'The above error occurred in one of your React components:';\n      var errorBoundaryMessage;\n\n      if (boundary.tag === HostRoot) {\n        errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\\n' + 'Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.';\n      } else {\n        var errorBoundaryName = getComponentNameFromFiber(boundary) || 'Anonymous';\n        errorBoundaryMessage = \"React will try to recreate this component tree from scratch \" + (\"using the error boundary you provided, \" + errorBoundaryName + \".\");\n      }\n\n      var combinedMessage = componentNameMessage + \"\\n\" + componentStack + \"\\n\\n\" + (\"\" + errorBoundaryMessage); // In development, we provide our own message with just the component stack.\n      // We don't include the original error message and JS stack because the browser\n      // has already printed it. Even if the application swallows the error, it is still\n      // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.\n\n      console['error'](combinedMessage); // Don't transform to our wrapper\n    } else {\n      // In production, we print the error directly.\n      // This will include the message, the JS stack, and anything the browser wants to show.\n      // We pass the error object instead of custom message so that the browser displays the error natively.\n      console['error'](error); // Don't transform to our wrapper\n    }\n  } catch (e) {\n    // This method must not throw, or React internal state will get messed up.\n    // If console.error is overridden, or logCapturedError() shows a dialog that throws,\n    // we want to report this error outside of the normal stack as a last resort.\n    // https://github.com/facebook/react/issues/13188\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nvar PossiblyWeakMap$1 = typeof WeakMap === 'function' ? WeakMap : Map;\n\nfunction createRootErrorUpdate(fiber, errorInfo, lane) {\n  var update = createUpdate(NoTimestamp, lane); // Unmount the root by rendering null.\n\n  update.tag = CaptureUpdate; // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n\n  update.payload = {\n    element: null\n  };\n  var error = errorInfo.value;\n\n  update.callback = function () {\n    onUncaughtError(error);\n    logCapturedError(fiber, errorInfo);\n  };\n\n  return update;\n}\n\nfunction createClassErrorUpdate(fiber, errorInfo, lane) {\n  var update = createUpdate(NoTimestamp, lane);\n  update.tag = CaptureUpdate;\n  var getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n\n  if (typeof getDerivedStateFromError === 'function') {\n    var error$1 = errorInfo.value;\n\n    update.payload = function () {\n      return getDerivedStateFromError(error$1);\n    };\n\n    update.callback = function () {\n      {\n        markFailedErrorBoundaryForHotReloading(fiber);\n      }\n\n      logCapturedError(fiber, errorInfo);\n    };\n  }\n\n  var inst = fiber.stateNode;\n\n  if (inst !== null && typeof inst.componentDidCatch === 'function') {\n    update.callback = function callback() {\n      {\n        markFailedErrorBoundaryForHotReloading(fiber);\n      }\n\n      logCapturedError(fiber, errorInfo);\n\n      if (typeof getDerivedStateFromError !== 'function') {\n        // To preserve the preexisting retry behavior of error boundaries,\n        // we keep track of which ones already failed during this batch.\n        // This gets reset before we yield back to the browser.\n        // TODO: Warn in strict mode if getDerivedStateFromError is\n        // not defined.\n        markLegacyErrorBoundaryAsFailed(this);\n      }\n\n      var error$1 = errorInfo.value;\n      var stack = errorInfo.stack;\n      this.componentDidCatch(error$1, {\n        componentStack: stack !== null ? stack : ''\n      });\n\n      {\n        if (typeof getDerivedStateFromError !== 'function') {\n          // If componentDidCatch is the only error boundary method defined,\n          // then it needs to call setState to recover from errors.\n          // If no state update is scheduled then the boundary will swallow the error.\n          if (!includesSomeLane(fiber.lanes, SyncLane)) {\n            error('%s: Error boundaries should implement getDerivedStateFromError(). ' + 'In that method, return a state update to display an error message or fallback UI.', getComponentNameFromFiber(fiber) || 'Unknown');\n          }\n        }\n      }\n    };\n  }\n\n  return update;\n}\n\nfunction attachPingListener(root, wakeable, lanes) {\n  // Attach a ping listener\n  //\n  // The data might resolve before we have a chance to commit the fallback. Or,\n  // in the case of a refresh, we'll never commit a fallback. So we need to\n  // attach a listener now. When it resolves (\"pings\"), we can decide whether to\n  // try rendering the tree again.\n  //\n  // Only attach a listener if one does not already exist for the lanes\n  // we're currently rendering (which acts like a \"thread ID\" here).\n  //\n  // We only need to do this in concurrent mode. Legacy Suspense always\n  // commits fallbacks synchronously, so there are no pings.\n  var pingCache = root.pingCache;\n  var threadIDs;\n\n  if (pingCache === null) {\n    pingCache = root.pingCache = new PossiblyWeakMap$1();\n    threadIDs = new Set();\n    pingCache.set(wakeable, threadIDs);\n  } else {\n    threadIDs = pingCache.get(wakeable);\n\n    if (threadIDs === undefined) {\n      threadIDs = new Set();\n      pingCache.set(wakeable, threadIDs);\n    }\n  }\n\n  if (!threadIDs.has(lanes)) {\n    // Memoize using the thread ID to prevent redundant listeners.\n    threadIDs.add(lanes);\n    var ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);\n\n    wakeable.then(ping, ping);\n  }\n}\n\nfunction attachRetryListener(suspenseBoundary, root, wakeable, lanes) {\n  // Retry listener\n  //\n  // If the fallback does commit, we need to attach a different type of\n  // listener. This one schedules an update on the Suspense boundary to turn\n  // the fallback state off.\n  //\n  // Stash the wakeable on the boundary fiber so we can access it in the\n  // commit phase.\n  //\n  // When the wakeable resolves, we'll attempt to render the boundary\n  // again (\"retry\").\n  var wakeables = suspenseBoundary.updateQueue;\n\n  if (wakeables === null) {\n    var updateQueue = new Set();\n    updateQueue.add(wakeable);\n    suspenseBoundary.updateQueue = updateQueue;\n  } else {\n    wakeables.add(wakeable);\n  }\n}\n\nfunction resetSuspendedComponent(sourceFiber, rootRenderLanes) {\n  // A legacy mode Suspense quirk, only relevant to hook components.\n\n\n  var tag = sourceFiber.tag;\n\n  if ((sourceFiber.mode & ConcurrentMode) === NoMode && (tag === FunctionComponent || tag === ForwardRef || tag === SimpleMemoComponent)) {\n    var currentSource = sourceFiber.alternate;\n\n    if (currentSource) {\n      sourceFiber.updateQueue = currentSource.updateQueue;\n      sourceFiber.memoizedState = currentSource.memoizedState;\n      sourceFiber.lanes = currentSource.lanes;\n    } else {\n      sourceFiber.updateQueue = null;\n      sourceFiber.memoizedState = null;\n    }\n  }\n}\n\nfunction getNearestSuspenseBoundaryToCapture(returnFiber) {\n  var node = returnFiber;\n\n  do {\n    if (node.tag === SuspenseComponent && shouldCaptureSuspense(node)) {\n      return node;\n    } // This boundary already captured during this render. Continue to the next\n    // boundary.\n\n\n    node = node.return;\n  } while (node !== null);\n\n  return null;\n}\n\nfunction markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes) {\n  // This marks a Suspense boundary so that when we're unwinding the stack,\n  // it captures the suspended \"exception\" and does a second (fallback) pass.\n  if ((suspenseBoundary.mode & ConcurrentMode) === NoMode) {\n    // Legacy Mode Suspense\n    //\n    // If the boundary is in legacy mode, we should *not*\n    // suspend the commit. Pretend as if the suspended component rendered\n    // null and keep rendering. When the Suspense boundary completes,\n    // we'll do a second pass to render the fallback.\n    if (suspenseBoundary === returnFiber) {\n      // Special case where we suspended while reconciling the children of\n      // a Suspense boundary's inner Offscreen wrapper fiber. This happens\n      // when a React.lazy component is a direct child of a\n      // Suspense boundary.\n      //\n      // Suspense boundaries are implemented as multiple fibers, but they\n      // are a single conceptual unit. The legacy mode behavior where we\n      // pretend the suspended fiber committed as `null` won't work,\n      // because in this case the \"suspended\" fiber is the inner\n      // Offscreen wrapper.\n      //\n      // Because the contents of the boundary haven't started rendering\n      // yet (i.e. nothing in the tree has partially rendered) we can\n      // switch to the regular, concurrent mode behavior: mark the\n      // boundary with ShouldCapture and enter the unwind phase.\n      suspenseBoundary.flags |= ShouldCapture;\n    } else {\n      suspenseBoundary.flags |= DidCapture;\n      sourceFiber.flags |= ForceUpdateForLegacySuspense; // We're going to commit this fiber even though it didn't complete.\n      // But we shouldn't call any lifecycle methods or callbacks. Remove\n      // all lifecycle effect tags.\n\n      sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);\n\n      if (sourceFiber.tag === ClassComponent) {\n        var currentSourceFiber = sourceFiber.alternate;\n\n        if (currentSourceFiber === null) {\n          // This is a new mount. Change the tag so it's not mistaken for a\n          // completed class component. For example, we should not call\n          // componentWillUnmount if it is deleted.\n          sourceFiber.tag = IncompleteClassComponent;\n        } else {\n          // When we try rendering again, we should not reuse the current fiber,\n          // since it's known to be in an inconsistent state. Use a force update to\n          // prevent a bail out.\n          var update = createUpdate(NoTimestamp, SyncLane);\n          update.tag = ForceUpdate;\n          enqueueUpdate(sourceFiber, update);\n        }\n      } // The source fiber did not complete. Mark it with Sync priority to\n      // indicate that it still has pending work.\n\n\n      sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);\n    }\n\n    return suspenseBoundary;\n  } // Confirmed that the boundary is in a concurrent mode tree. Continue\n  // with the normal suspend path.\n  //\n  // After this we'll use a set of heuristics to determine whether this\n  // render pass will run to completion or restart or \"suspend\" the commit.\n  // The actual logic for this is spread out in different places.\n  //\n  // This first principle is that if we're going to suspend when we complete\n  // a root, then we should also restart if we get an update or ping that\n  // might unsuspend it, and vice versa. The only reason to suspend is\n  // because you think you might want to restart before committing. However,\n  // it doesn't make sense to restart only while in the period we're suspended.\n  //\n  // Restarting too aggressively is also not good because it starves out any\n  // intermediate loading state. So we use heuristics to determine when.\n  // Suspense Heuristics\n  //\n  // If nothing threw a Promise or all the same fallbacks are already showing,\n  // then don't suspend/restart.\n  //\n  // If this is an initial render of a new tree of Suspense boundaries and\n  // those trigger a fallback, then don't suspend/restart. We want to ensure\n  // that we can show the initial loading state as quickly as possible.\n  //\n  // If we hit a \"Delayed\" case, such as when we'd switch from content back into\n  // a fallback, then we should always suspend/restart. Transitions apply\n  // to this case. If none is defined, JND is used instead.\n  //\n  // If we're already showing a fallback and it gets \"retried\", allowing us to show\n  // another level, but there's still an inner boundary that would show a fallback,\n  // then we suspend/restart for 500ms since the last time we showed a fallback\n  // anywhere in the tree. This effectively throttles progressive loading into a\n  // consistent train of commits. This also gives us an opportunity to restart to\n  // get to the completed state slightly earlier.\n  //\n  // If there's ambiguity due to batching it's resolved in preference of:\n  // 1) \"delayed\", 2) \"initial render\", 3) \"retry\".\n  //\n  // We want to ensure that a \"busy\" state doesn't get force committed. We want to\n  // ensure that new initial loading states can commit as soon as possible.\n\n\n  suspenseBoundary.flags |= ShouldCapture; // TODO: I think we can remove this, since we now use `DidCapture` in\n  // the begin phase to prevent an early bailout.\n\n  suspenseBoundary.lanes = rootRenderLanes;\n  return suspenseBoundary;\n}\n\nfunction throwException(root, returnFiber, sourceFiber, value, rootRenderLanes) {\n  // The source fiber did not complete.\n  sourceFiber.flags |= Incomplete;\n\n  if (value !== null && typeof value === 'object' && typeof value.then === 'function') {\n    // This is a wakeable. The component suspended.\n    var wakeable = value;\n    resetSuspendedComponent(sourceFiber);\n\n\n    var suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);\n\n    if (suspenseBoundary !== null) {\n      suspenseBoundary.flags &= ~ForceClientRender;\n      markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes); // We only attach ping listeners in concurrent mode. Legacy Suspense always\n      // commits fallbacks synchronously, so there are no pings.\n\n      if (suspenseBoundary.mode & ConcurrentMode) {\n        attachPingListener(root, wakeable, rootRenderLanes);\n      }\n\n      attachRetryListener(suspenseBoundary, root, wakeable);\n      return;\n    } else {\n      // No boundary was found. Unless this is a sync update, this is OK.\n      // We can suspend and wait for more data to arrive.\n      if (!includesSyncLane(rootRenderLanes)) {\n        // This is not a sync update. Suspend. Since we're not activating a\n        // Suspense boundary, this will unwind all the way to the root without\n        // performing a second pass to render a fallback. (This is arguably how\n        // refresh transitions should work, too, since we're not going to commit\n        // the fallbacks anyway.)\n        //\n        // This case also applies to initial hydration.\n        attachPingListener(root, wakeable, rootRenderLanes);\n        renderDidSuspendDelayIfPossible();\n        return;\n      } // This is a sync/discrete update. We treat this case like an error\n      // because discrete renders are expected to produce a complete tree\n      // synchronously to maintain consistency with external state.\n\n\n      var uncaughtSuspenseError = new Error('A component suspended while responding to synchronous input. This ' + 'will cause the UI to be replaced with a loading indicator. To ' + 'fix, updates that suspend should be wrapped ' + 'with startTransition.'); // If we're outside a transition, fall through to the regular error path.\n      // The error will be caught by the nearest suspense boundary.\n\n      value = uncaughtSuspenseError;\n    }\n  } // We didn't find a boundary that could handle this type of exception. Start\n  // over and traverse parent path again, this time treating the exception\n  // as an error.\n\n\n  renderDidError(value);\n  value = createCapturedValue(value, sourceFiber);\n  var workInProgress = returnFiber;\n\n  do {\n    switch (workInProgress.tag) {\n      case HostRoot:\n        {\n          var _errorInfo = value;\n          workInProgress.flags |= ShouldCapture;\n          var lane = pickArbitraryLane(rootRenderLanes);\n          workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n          var update = createRootErrorUpdate(workInProgress, _errorInfo, lane);\n          enqueueCapturedUpdate(workInProgress, update);\n          return;\n        }\n\n      case ClassComponent:\n        // Capture and retry\n        var errorInfo = value;\n        var ctor = workInProgress.type;\n        var instance = workInProgress.stateNode;\n\n        if ((workInProgress.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === 'function' || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {\n          workInProgress.flags |= ShouldCapture;\n\n          var _lane = pickArbitraryLane(rootRenderLanes);\n\n          workInProgress.lanes = mergeLanes(workInProgress.lanes, _lane); // Schedule the error boundary to re-render using updated state\n\n          var _update = createClassErrorUpdate(workInProgress, errorInfo, _lane);\n\n          enqueueCapturedUpdate(workInProgress, _update);\n          return;\n        }\n\n        break;\n    }\n\n    workInProgress = workInProgress.return;\n  } while (workInProgress !== null);\n}\n\nfunction getSuspendedCache() {\n  {\n    return null;\n  } // This function is called when a Suspense boundary suspends. It returns the\n}\n\nfunction markUpdate(workInProgress) {\n  // Tag the fiber with an update effect. This turns a Placement into\n  // a PlacementAndUpdate.\n  workInProgress.flags |= Update;\n}\n\nfunction markRef(workInProgress) {\n  workInProgress.flags |= Ref;\n}\n\nvar appendAllChildren;\nvar updateHostContainer;\nvar updateHostComponent;\nvar updateHostText;\n\n{\n  // Mutation mode\n  appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    var node = workInProgress.child;\n\n    while (node !== null) {\n      if (node.tag === HostComponent || node.tag === HostText) {\n        appendInitialChild(parent, node.stateNode);\n      } else if (node.tag === HostPortal) ; else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n\n      if (node === workInProgress) {\n        return;\n      }\n\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n\n        node = node.return;\n      }\n\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n\n  updateHostContainer = function (current, workInProgress) {// Noop\n  };\n\n  updateHostComponent = function (current, workInProgress, type, newProps, rootContainerInstance) {\n    // If we have an alternate, that means this is an update and we need to\n    // schedule a side-effect to do the updates.\n    var oldProps = current.memoizedProps;\n\n    if (oldProps === newProps) {\n      // In mutation mode, this is sufficient for a bailout because\n      // we won't touch this node even if children changed.\n      return;\n    } // If we get updated because one of our children updated, we don't\n    // have newProps so we'll have to reuse them.\n    // TODO: Split the update API as separate for the props vs. children.\n    // Even better would be if children weren't special cased at all tho.\n\n\n    var instance = workInProgress.stateNode;\n    var currentHostContext = getHostContext(); // TODO: Experiencing an error where oldProps is null. Suggests a host\n    // component is hitting the resume path. Figure out why. Possibly\n    // related to `hidden`.\n\n    var updatePayload = prepareUpdate(); // TODO: Type this specific to this type of component.\n\n    workInProgress.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there\n    // is a new ref we mark this as an update. All the work is done in commitWork.\n\n    if (updatePayload) {\n      markUpdate(workInProgress);\n    }\n  };\n\n  updateHostText = function (current, workInProgress, oldText, newText) {\n    // If the text differs, mark it as an update. All the work in done in commitWork.\n    if (oldText !== newText) {\n      markUpdate(workInProgress);\n    }\n  };\n}\n\nfunction cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {\n\n  switch (renderState.tailMode) {\n    case 'hidden':\n      {\n        // Any insertions at the end of the tail list after this point\n        // should be invisible. If there are already mounted boundaries\n        // anything before them are not considered for collapsing.\n        // Therefore we need to go through the whole tail to find if\n        // there are any.\n        var tailNode = renderState.tail;\n        var lastTailNode = null;\n\n        while (tailNode !== null) {\n          if (tailNode.alternate !== null) {\n            lastTailNode = tailNode;\n          }\n\n          tailNode = tailNode.sibling;\n        } // Next we're simply going to delete all insertions after the\n        // last rendered item.\n\n\n        if (lastTailNode === null) {\n          // All remaining items in the tail are insertions.\n          renderState.tail = null;\n        } else {\n          // Detach the insertion after the last node that was already\n          // inserted.\n          lastTailNode.sibling = null;\n        }\n\n        break;\n      }\n\n    case 'collapsed':\n      {\n        // Any insertions at the end of the tail list after this point\n        // should be invisible. If there are already mounted boundaries\n        // anything before them are not considered for collapsing.\n        // Therefore we need to go through the whole tail to find if\n        // there are any.\n        var _tailNode = renderState.tail;\n        var _lastTailNode = null;\n\n        while (_tailNode !== null) {\n          if (_tailNode.alternate !== null) {\n            _lastTailNode = _tailNode;\n          }\n\n          _tailNode = _tailNode.sibling;\n        } // Next we're simply going to delete all insertions after the\n        // last rendered item.\n\n\n        if (_lastTailNode === null) {\n          // All remaining items in the tail are insertions.\n          if (!hasRenderedATailFallback && renderState.tail !== null) {\n            // We suspended during the head. We want to show at least one\n            // row at the tail. So we'll keep on and cut off the rest.\n            renderState.tail.sibling = null;\n          } else {\n            renderState.tail = null;\n          }\n        } else {\n          // Detach the insertion after the last node that was already\n          // inserted.\n          _lastTailNode.sibling = null;\n        }\n\n        break;\n      }\n  }\n}\n\nfunction bubbleProperties(completedWork) {\n  var didBailout = completedWork.alternate !== null && completedWork.alternate.child === completedWork.child;\n  var newChildLanes = NoLanes;\n  var subtreeFlags = NoFlags;\n\n  if (!didBailout) {\n    // Bubble up the earliest expiration time.\n    if ( (completedWork.mode & ProfileMode) !== NoMode) {\n      // In profiling mode, resetChildExpirationTime is also used to reset\n      // profiler durations.\n      var actualDuration = completedWork.actualDuration;\n      var treeBaseDuration = completedWork.selfBaseDuration;\n      var child = completedWork.child;\n\n      while (child !== null) {\n        newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));\n        subtreeFlags |= child.subtreeFlags;\n        subtreeFlags |= child.flags; // When a fiber is cloned, its actualDuration is reset to 0. This value will\n        // only be updated if work is done on the fiber (i.e. it doesn't bailout).\n        // When work is done, it should bubble to the parent's actualDuration. If\n        // the fiber has not been cloned though, (meaning no work was done), then\n        // this value will reflect the amount of time spent working on a previous\n        // render. In that case it should not bubble. We determine whether it was\n        // cloned by comparing the child pointer.\n\n        actualDuration += child.actualDuration;\n        treeBaseDuration += child.treeBaseDuration;\n        child = child.sibling;\n      }\n\n      completedWork.actualDuration = actualDuration;\n      completedWork.treeBaseDuration = treeBaseDuration;\n    } else {\n      var _child = completedWork.child;\n\n      while (_child !== null) {\n        newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));\n        subtreeFlags |= _child.subtreeFlags;\n        subtreeFlags |= _child.flags; // Update the return pointer so the tree is consistent. This is a code\n        // smell because it assumes the commit phase is never concurrent with\n        // the render phase. Will address during refactor to alternate model.\n\n        _child.return = completedWork;\n        _child = _child.sibling;\n      }\n    }\n\n    completedWork.subtreeFlags |= subtreeFlags;\n  } else {\n    // Bubble up the earliest expiration time.\n    if ( (completedWork.mode & ProfileMode) !== NoMode) {\n      // In profiling mode, resetChildExpirationTime is also used to reset\n      // profiler durations.\n      var _treeBaseDuration = completedWork.selfBaseDuration;\n      var _child2 = completedWork.child;\n\n      while (_child2 !== null) {\n        newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child2.lanes, _child2.childLanes)); // \"Static\" flags share the lifetime of the fiber/hook they belong to,\n        // so we should bubble those up even during a bailout. All the other\n        // flags have a lifetime only of a single render + commit, so we should\n        // ignore them.\n\n        subtreeFlags |= _child2.subtreeFlags & StaticMask;\n        subtreeFlags |= _child2.flags & StaticMask;\n        _treeBaseDuration += _child2.treeBaseDuration;\n        _child2 = _child2.sibling;\n      }\n\n      completedWork.treeBaseDuration = _treeBaseDuration;\n    } else {\n      var _child3 = completedWork.child;\n\n      while (_child3 !== null) {\n        newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child3.lanes, _child3.childLanes)); // \"Static\" flags share the lifetime of the fiber/hook they belong to,\n        // so we should bubble those up even during a bailout. All the other\n        // flags have a lifetime only of a single render + commit, so we should\n        // ignore them.\n\n        subtreeFlags |= _child3.subtreeFlags & StaticMask;\n        subtreeFlags |= _child3.flags & StaticMask; // Update the return pointer so the tree is consistent. This is a code\n        // smell because it assumes the commit phase is never concurrent with\n        // the render phase. Will address during refactor to alternate model.\n\n        _child3.return = completedWork;\n        _child3 = _child3.sibling;\n      }\n    }\n\n    completedWork.subtreeFlags |= subtreeFlags;\n  }\n\n  completedWork.childLanes = newChildLanes;\n  return didBailout;\n}\n\nfunction completeWork(current, workInProgress, renderLanes) {\n  var newProps = workInProgress.pendingProps; // Note: This intentionally doesn't check if we're hydrating because comparing\n  // to the current tree provider fiber is just as fast and less error-prone.\n  // Ideally we would have a special version of the work loop only\n  // for hydration.\n\n  popTreeContext(workInProgress);\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent:\n    case LazyComponent:\n    case SimpleMemoComponent:\n    case FunctionComponent:\n    case ForwardRef:\n    case Fragment:\n    case Mode:\n    case Profiler:\n    case ContextConsumer:\n    case MemoComponent:\n      bubbleProperties(workInProgress);\n      return null;\n\n    case ClassComponent:\n      {\n        var Component = workInProgress.type;\n\n        if (isContextProvider(Component)) {\n          popContext(workInProgress);\n        }\n\n        bubbleProperties(workInProgress);\n        return null;\n      }\n\n    case HostRoot:\n      {\n        var fiberRoot = workInProgress.stateNode;\n\n        popHostContainer(workInProgress);\n        popTopLevelContextObject(workInProgress);\n        resetWorkInProgressVersions();\n\n        if (fiberRoot.pendingContext) {\n          fiberRoot.context = fiberRoot.pendingContext;\n          fiberRoot.pendingContext = null;\n        }\n\n        if (current === null || current.child === null) {\n          // If we hydrated, pop so that we can delete any remaining children\n          // that weren't hydrated.\n          var wasHydrated = popHydrationState();\n\n          if (wasHydrated) {\n            // If we hydrated, then we'll need to schedule an update for\n            // the commit side-effects on the root.\n            markUpdate(workInProgress);\n          } else {\n            if (current !== null) {\n              var prevState = current.memoizedState;\n\n              if ( // Check if this is a client root\n              !prevState.isDehydrated || // Check if we reverted to client rendering (e.g. due to an error)\n              (workInProgress.flags & ForceClientRender) !== NoFlags) {\n                // Schedule an effect to clear this container at the start of the\n                // next commit. This handles the case of React rendering into a\n                // container with previous children. It's also safe to do for\n                // updates too, because current.child would only be null if the\n                // previous render was null (so the container would already\n                // be empty).\n                workInProgress.flags |= Snapshot; // If this was a forced client render, there may have been\n              }\n            }\n          }\n        }\n\n        updateHostContainer(current, workInProgress);\n        bubbleProperties(workInProgress);\n        return null;\n      }\n\n    case HostComponent:\n      {\n        popHostContext(workInProgress);\n        var rootContainerInstance = getRootHostContainer();\n        var type = workInProgress.type;\n\n        if (current !== null && workInProgress.stateNode != null) {\n          updateHostComponent(current, workInProgress, type, newProps, rootContainerInstance);\n\n          if (current.ref !== workInProgress.ref) {\n            markRef(workInProgress);\n          }\n        } else {\n          if (!newProps) {\n            if (workInProgress.stateNode === null) {\n              throw new Error('We must have new props for new mounts. This error is likely ' + 'caused by a bug in React. Please file an issue.');\n            } // This can happen when we abort work.\n\n\n            bubbleProperties(workInProgress);\n            return null;\n          }\n\n          var currentHostContext = getHostContext(); // TODO: Move createInstance to beginWork and keep it on a context\n          // \"stack\" as the parent. Then append children as we go in beginWork\n          // or completeWork depending on whether we want to add them top->down or\n          // bottom->up. Top->down is faster in IE11.\n\n          var _wasHydrated = popHydrationState();\n\n          if (_wasHydrated) {\n            // TODO: Move this and createInstance step into the beginPhase\n            // to consolidate.\n            if (prepareToHydrateHostInstance()) {\n              // If changes to the hydrated node need to be applied at the\n              // commit-phase we mark this as such.\n              markUpdate(workInProgress);\n            }\n          } else {\n            var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);\n            appendAllChildren(instance, workInProgress, false, false);\n            workInProgress.stateNode = instance; // Certain renderers require commit-time effects for initial mount.\n          }\n\n          if (workInProgress.ref !== null) {\n            // If there is a ref on a host node we need to schedule a callback\n            markRef(workInProgress);\n          }\n        }\n\n        bubbleProperties(workInProgress);\n        return null;\n      }\n\n    case HostText:\n      {\n        var newText = newProps;\n\n        if (current && workInProgress.stateNode != null) {\n          var oldText = current.memoizedProps; // If we have an alternate, that means this is an update and we need\n          // to schedule a side-effect to do the updates.\n\n          updateHostText(current, workInProgress, oldText, newText);\n        } else {\n          if (typeof newText !== 'string') {\n            if (workInProgress.stateNode === null) {\n              throw new Error('We must have new props for new mounts. This error is likely ' + 'caused by a bug in React. Please file an issue.');\n            } // This can happen when we abort work.\n\n          }\n\n          var _rootContainerInstance = getRootHostContainer();\n\n          var _currentHostContext = getHostContext();\n\n          var _wasHydrated2 = popHydrationState();\n\n          if (_wasHydrated2) {\n            if (prepareToHydrateHostTextInstance()) {\n              markUpdate(workInProgress);\n            }\n          } else {\n            workInProgress.stateNode = createTextInstance(newText);\n          }\n        }\n\n        bubbleProperties(workInProgress);\n        return null;\n      }\n\n    case SuspenseComponent:\n      {\n        popSuspenseContext(workInProgress);\n        var nextState = workInProgress.memoizedState;\n\n        if ((workInProgress.flags & DidCapture) !== NoFlags) {\n          // Something suspended. Re-render with the fallback children.\n          workInProgress.lanes = renderLanes; // Do not reset the effect list.\n\n          if ( (workInProgress.mode & ProfileMode) !== NoMode) {\n            transferActualDuration(workInProgress);\n          } // Don't bubble properties in this case.\n\n\n          return workInProgress;\n        }\n\n        var nextDidTimeout = nextState !== null;\n        var prevDidTimeout = false;\n\n        if (current === null) ; else {\n          var _prevState = current.memoizedState;\n          prevDidTimeout = _prevState !== null;\n        }\n        // an effect to toggle the subtree's visibility. When we switch from\n        // fallback -> primary, the inner Offscreen fiber schedules this effect\n        // as part of its normal complete phase. But when we switch from\n        // primary -> fallback, the inner Offscreen fiber does not have a complete\n        // phase. So we need to schedule its effect here.\n        //\n        // We also use this flag to connect/disconnect the effects, but the same\n        // logic applies: when re-connecting, the Offscreen fiber's complete\n        // phase will handle scheduling the effect. It's only when the fallback\n        // is active that we have to do anything special.\n\n\n        if (nextDidTimeout && !prevDidTimeout) {\n          var _offscreenFiber = workInProgress.child;\n          _offscreenFiber.flags |= Visibility; // TODO: This will still suspend a synchronous tree if anything\n          // in the concurrent tree already suspended during this render.\n          // This is a known bug.\n\n          if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\n            // TODO: Move this back to throwException because this is too late\n            // if this is a large tree which is common for initial loads. We\n            // don't know if we should restart a render or not until we get\n            // this marker, and this is too late.\n            // If this render already had a ping or lower pri updates,\n            // and this is the first time we know we're going to suspend we\n            // should be able to immediately restart from within throwException.\n            var hasInvisibleChildContext = current === null && (workInProgress.memoizedProps.unstable_avoidThisFallback !== true || !enableSuspenseAvoidThisFallback);\n\n            if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) {\n              // If this was in an invisible tree or a new render, then showing\n              // this boundary is ok.\n              renderDidSuspend();\n            } else {\n              // Otherwise, we're going to have to hide content so we should\n              // suspend for longer if possible.\n              renderDidSuspendDelayIfPossible();\n            }\n          }\n        }\n\n        var wakeables = workInProgress.updateQueue;\n\n        if (wakeables !== null) {\n          // Schedule an effect to attach a retry listener to the promise.\n          // TODO: Move to passive phase\n          workInProgress.flags |= Update;\n        }\n\n        bubbleProperties(workInProgress);\n\n        {\n          if ((workInProgress.mode & ProfileMode) !== NoMode) {\n            if (nextDidTimeout) {\n              // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n              var _primaryChildFragment2 = workInProgress.child;\n\n              if (_primaryChildFragment2 !== null) {\n                // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\n                workInProgress.treeBaseDuration -= _primaryChildFragment2.treeBaseDuration;\n              }\n            }\n          }\n        }\n\n        return null;\n      }\n\n    case HostPortal:\n      popHostContainer(workInProgress);\n      updateHostContainer(current, workInProgress);\n\n      if (current === null) {\n        preparePortalMount(workInProgress.stateNode.containerInfo);\n      }\n\n      bubbleProperties(workInProgress);\n      return null;\n\n    case ContextProvider:\n      // Pop provider fiber\n      var context = workInProgress.type._context;\n      popProvider(context, workInProgress);\n      bubbleProperties(workInProgress);\n      return null;\n\n    case IncompleteClassComponent:\n      {\n        // Same as class component case. I put it down here so that the tags are\n        // sequential to ensure this switch is compiled to a jump table.\n        var _Component = workInProgress.type;\n\n        if (isContextProvider(_Component)) {\n          popContext(workInProgress);\n        }\n\n        bubbleProperties(workInProgress);\n        return null;\n      }\n\n    case SuspenseListComponent:\n      {\n        popSuspenseContext(workInProgress);\n        var renderState = workInProgress.memoizedState;\n\n        if (renderState === null) {\n          // We're running in the default, \"independent\" mode.\n          // We don't do anything in this mode.\n          bubbleProperties(workInProgress);\n          return null;\n        }\n\n        var didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;\n        var renderedTail = renderState.rendering;\n\n        if (renderedTail === null) {\n          // We just rendered the head.\n          if (!didSuspendAlready) {\n            // This is the first pass. We need to figure out if anything is still\n            // suspended in the rendered set.\n            // If new content unsuspended, but there's still some content that\n            // didn't. Then we need to do a second pass that forces everything\n            // to keep showing their fallbacks.\n            // We might be suspended if something in this render pass suspended, or\n            // something in the previous committed pass suspended. Otherwise,\n            // there's no chance so we can skip the expensive call to\n            // findFirstSuspended.\n            var cannotBeSuspended = renderHasNotSuspendedYet() && (current === null || (current.flags & DidCapture) === NoFlags);\n\n            if (!cannotBeSuspended) {\n              var row = workInProgress.child;\n\n              while (row !== null) {\n                var suspended = findFirstSuspended(row);\n\n                if (suspended !== null) {\n                  didSuspendAlready = true;\n                  workInProgress.flags |= DidCapture;\n                  cutOffTailIfNeeded(renderState, false); // If this is a newly suspended tree, it might not get committed as\n                  // part of the second pass. In that case nothing will subscribe to\n                  // its thenables. Instead, we'll transfer its thenables to the\n                  // SuspenseList so that it can retry if they resolve.\n                  // There might be multiple of these in the list but since we're\n                  // going to wait for all of them anyway, it doesn't really matter\n                  // which ones gets to ping. In theory we could get clever and keep\n                  // track of how many dependencies remain but it gets tricky because\n                  // in the meantime, we can add/remove/change items and dependencies.\n                  // We might bail out of the loop before finding any but that\n                  // doesn't matter since that means that the other boundaries that\n                  // we did find already has their listeners attached.\n\n                  var newThenables = suspended.updateQueue;\n\n                  if (newThenables !== null) {\n                    workInProgress.updateQueue = newThenables;\n                    workInProgress.flags |= Update;\n                  } // Rerender the whole list, but this time, we'll force fallbacks\n                  // to stay in place.\n                  // Reset the effect flags before doing the second pass since that's now invalid.\n                  // Reset the child fibers to their original state.\n\n\n                  workInProgress.subtreeFlags = NoFlags;\n                  resetChildFibers(workInProgress, renderLanes); // Set up the Suspense Context to force suspense and immediately\n                  // rerender the children.\n\n                  pushSuspenseContext(workInProgress, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback)); // Don't bubble properties in this case.\n\n                  return workInProgress.child;\n                }\n\n                row = row.sibling;\n              }\n            }\n\n            if (renderState.tail !== null && now() > getRenderTargetTime()) {\n              // We have already passed our CPU deadline but we still have rows\n              // left in the tail. We'll just give up further attempts to render\n              // the main content and only render fallbacks.\n              workInProgress.flags |= DidCapture;\n              didSuspendAlready = true;\n              cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this\n              // to get it started back up to attempt the next item. While in terms\n              // of priority this work has the same priority as this current render,\n              // it's not part of the same transition once the transition has\n              // committed. If it's sync, we still want to yield so that it can be\n              // painted. Conceptually, this is really the same as pinging.\n              // We can use any RetryLane even if it's the one currently rendering\n              // since we're leaving it behind on this node.\n\n              workInProgress.lanes = SomeRetryLane;\n            }\n          } else {\n            cutOffTailIfNeeded(renderState, false);\n          } // Next we're going to render the tail.\n\n        } else {\n          // Append the rendered row to the child list.\n          if (!didSuspendAlready) {\n            var _suspended = findFirstSuspended(renderedTail);\n\n            if (_suspended !== null) {\n              workInProgress.flags |= DidCapture;\n              didSuspendAlready = true; // Ensure we transfer the update queue to the parent so that it doesn't\n              // get lost if this row ends up dropped during a second pass.\n\n              var _newThenables = _suspended.updateQueue;\n\n              if (_newThenables !== null) {\n                workInProgress.updateQueue = _newThenables;\n                workInProgress.flags |= Update;\n              }\n\n              cutOffTailIfNeeded(renderState, true); // This might have been modified.\n\n              if (renderState.tail === null && renderState.tailMode === 'hidden' && !renderedTail.alternate && !getIsHydrating() // We don't cut it if we're hydrating.\n              ) {\n                  // We're done.\n                  bubbleProperties(workInProgress);\n                  return null;\n                }\n            } else if ( // The time it took to render last row is greater than the remaining\n            // time we have to render. So rendering one more row would likely\n            // exceed it.\n            now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes !== OffscreenLane) {\n              // We have now passed our CPU deadline and we'll just give up further\n              // attempts to render the main content and only render fallbacks.\n              // The assumption is that this is usually faster.\n              workInProgress.flags |= DidCapture;\n              didSuspendAlready = true;\n              cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this\n              // to get it started back up to attempt the next item. While in terms\n              // of priority this work has the same priority as this current render,\n              // it's not part of the same transition once the transition has\n              // committed. If it's sync, we still want to yield so that it can be\n              // painted. Conceptually, this is really the same as pinging.\n              // We can use any RetryLane even if it's the one currently rendering\n              // since we're leaving it behind on this node.\n\n              workInProgress.lanes = SomeRetryLane;\n            }\n          }\n\n          if (renderState.isBackwards) {\n            // The effect list of the backwards tail will have been added\n            // to the end. This breaks the guarantee that life-cycles fire in\n            // sibling order but that isn't a strong guarantee promised by React.\n            // Especially since these might also just pop in during future commits.\n            // Append to the beginning of the list.\n            renderedTail.sibling = workInProgress.child;\n            workInProgress.child = renderedTail;\n          } else {\n            var previousSibling = renderState.last;\n\n            if (previousSibling !== null) {\n              previousSibling.sibling = renderedTail;\n            } else {\n              workInProgress.child = renderedTail;\n            }\n\n            renderState.last = renderedTail;\n          }\n        }\n\n        if (renderState.tail !== null) {\n          // We still have tail rows to render.\n          // Pop a row.\n          var next = renderState.tail;\n          renderState.rendering = next;\n          renderState.tail = next.sibling;\n          renderState.renderingStartTime = now();\n          next.sibling = null; // Restore the context.\n          // TODO: We can probably just avoid popping it instead and only\n          // setting it the first time we go from not suspended to suspended.\n\n          var suspenseContext = suspenseStackCursor.current;\n\n          if (didSuspendAlready) {\n            suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);\n          } else {\n            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n          }\n\n          pushSuspenseContext(workInProgress, suspenseContext); // Do a pass over the next row.\n          // Don't bubble properties in this case.\n\n          return next;\n        }\n\n        bubbleProperties(workInProgress);\n        return null;\n      }\n\n    case ScopeComponent:\n      {\n\n        break;\n      }\n\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      {\n        popRenderLanes(workInProgress);\n        var _nextState = workInProgress.memoizedState;\n        var nextIsHidden = _nextState !== null;\n\n        if (current !== null) {\n          var _prevState2 = current.memoizedState;\n          var prevIsHidden = _prevState2 !== null;\n\n          if (prevIsHidden !== nextIsHidden && ( // LegacyHidden doesn't do any hiding — it only pre-renders.\n          !enableLegacyHidden )) {\n            workInProgress.flags |= Visibility;\n          }\n        }\n\n        if (!nextIsHidden || (workInProgress.mode & ConcurrentMode) === NoMode) {\n          bubbleProperties(workInProgress);\n        } else {\n          // Don't bubble properties for hidden children unless we're rendering\n          // at offscreen priority.\n          if (includesSomeLane(subtreeRenderLanes, OffscreenLane)) {\n            bubbleProperties(workInProgress);\n\n            {\n              // Check if there was an insertion or update in the hidden subtree.\n              // If so, we need to hide those nodes in the commit phase, so\n              // schedule a visibility effect.\n              if ( workInProgress.subtreeFlags & (Placement | Update)) {\n                workInProgress.flags |= Visibility;\n              }\n            }\n          }\n        }\n\n        return null;\n      }\n\n    case CacheComponent:\n      {\n\n        return null;\n      }\n\n    case TracingMarkerComponent:\n      {\n\n        return null;\n      }\n  }\n\n  throw new Error(\"Unknown unit of work tag (\" + workInProgress.tag + \"). This error is likely caused by a bug in \" + 'React. Please file an issue.');\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar didReceiveUpdate = false;\nvar didWarnAboutBadClass;\nvar didWarnAboutModulePatternComponent;\nvar didWarnAboutContextTypeOnFunctionComponent;\nvar didWarnAboutGetDerivedStateOnFunctionComponent;\nvar didWarnAboutFunctionRefs;\nvar didWarnAboutReassigningProps;\nvar didWarnAboutRevealOrder;\nvar didWarnAboutTailOptions;\n\n{\n  didWarnAboutBadClass = {};\n  didWarnAboutModulePatternComponent = {};\n  didWarnAboutContextTypeOnFunctionComponent = {};\n  didWarnAboutGetDerivedStateOnFunctionComponent = {};\n  didWarnAboutFunctionRefs = {};\n  didWarnAboutReassigningProps = false;\n  didWarnAboutRevealOrder = {};\n  didWarnAboutTailOptions = {};\n}\n\nfunction reconcileChildren(current, workInProgress, nextChildren, renderLanes) {\n  if (current === null) {\n    // If this is a fresh new component that hasn't been rendered yet, we\n    // won't update its child set by applying minimal side-effects. Instead,\n    // we will add them all to the child before it gets rendered. That means\n    // we can optimize this reconciliation pass by not tracking side-effects.\n    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);\n  } else {\n    // If the current child is the same as the work in progress, it means that\n    // we haven't yet started any work on these children. Therefore, we use\n    // the clone algorithm to create a copy of all the current children.\n    // If we had any progressed work already, that is invalid at this point so\n    // let's throw it out.\n    workInProgress.child = reconcileChildFibers(workInProgress, current.child, nextChildren, renderLanes);\n  }\n}\n\nfunction forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes) {\n  // This function is fork of reconcileChildren. It's used in cases where we\n  // want to reconcile without matching against the existing set. This has the\n  // effect of all current children being unmounted; even if the type and key\n  // are the same, the old child is unmounted and a new child is created.\n  //\n  // To do this, we're going to go through the reconcile algorithm twice. In\n  // the first pass, we schedule a deletion for all the current children by\n  // passing null.\n  workInProgress.child = reconcileChildFibers(workInProgress, current.child, null, renderLanes); // In the second pass, we mount the new children. The trick here is that we\n  // pass null in place of where we usually pass the current child set. This has\n  // the effect of remounting all children regardless of whether their\n  // identities match.\n\n  workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);\n}\n\nfunction updateForwardRef(current, workInProgress, Component, nextProps, renderLanes) {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens after the first render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n  {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      var innerPropTypes = Component.propTypes;\n\n      if (innerPropTypes) {\n        checkPropTypes(innerPropTypes, nextProps, // Resolved props\n        'prop', getComponentNameFromType(Component));\n      }\n    }\n  }\n\n  var render = Component.render;\n  var ref = workInProgress.ref; // The rest is a fork of updateFunctionComponent\n\n  var nextChildren;\n  prepareToReadContext(workInProgress, renderLanes);\n\n  {\n    ReactCurrentOwner$1.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);\n\n    setIsRendering(false);\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {\n  if (current === null) {\n    var type = Component.type;\n\n    if (isSimpleFunctionComponent(type) && Component.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.\n    Component.defaultProps === undefined) {\n      var resolvedType = type;\n\n      {\n        resolvedType = resolveFunctionForHotReloading(type);\n      } // If this is a plain function component without default props,\n      // and with only the default shallow comparison, we upgrade it\n      // to a SimpleMemoComponent to allow fast path updates.\n\n\n      workInProgress.tag = SimpleMemoComponent;\n      workInProgress.type = resolvedType;\n\n      {\n        validateFunctionComponentInDev(workInProgress, type);\n      }\n\n      return updateSimpleMemoComponent(current, workInProgress, resolvedType, nextProps, renderLanes);\n    }\n\n    {\n      var innerPropTypes = type.propTypes;\n\n      if (innerPropTypes) {\n        // Inner memo component props aren't currently validated in createElement.\n        // We could move it there, but we'd still need this for lazy code path.\n        checkPropTypes(innerPropTypes, nextProps, // Resolved props\n        'prop', getComponentNameFromType(type));\n      }\n    }\n\n    var child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress, workInProgress.mode, renderLanes);\n    child.ref = workInProgress.ref;\n    child.return = workInProgress;\n    workInProgress.child = child;\n    return child;\n  }\n\n  {\n    var _type = Component.type;\n    var _innerPropTypes = _type.propTypes;\n\n    if (_innerPropTypes) {\n      // Inner memo component props aren't currently validated in createElement.\n      // We could move it there, but we'd still need this for lazy code path.\n      checkPropTypes(_innerPropTypes, nextProps, // Resolved props\n      'prop', getComponentNameFromType(_type));\n    }\n  }\n\n  var currentChild = current.child; // This is always exactly one child\n\n  var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);\n\n  if (!hasScheduledUpdateOrContext) {\n    // This will be the props with resolved defaultProps,\n    // unlike current.memoizedProps which will be the unresolved ones.\n    var prevProps = currentChild.memoizedProps; // Default to shallow comparison\n\n    var compare = Component.compare;\n    compare = compare !== null ? compare : shallowEqual;\n\n    if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) {\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    }\n  } // React DevTools reads this flag.\n\n\n  workInProgress.flags |= PerformedWork;\n  var newChild = createWorkInProgress(currentChild, nextProps);\n  newChild.ref = workInProgress.ref;\n  newChild.return = workInProgress;\n  workInProgress.child = newChild;\n  return newChild;\n}\n\nfunction updateSimpleMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens when the inner render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n  {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      var outerMemoType = workInProgress.elementType;\n\n      if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {\n        // We warn when you define propTypes on lazy()\n        // so let's just skip over it to find memo() outer wrapper.\n        // Inner props for memo are validated later.\n        var lazyComponent = outerMemoType;\n        var payload = lazyComponent._payload;\n        var init = lazyComponent._init;\n\n        try {\n          outerMemoType = init(payload);\n        } catch (x) {\n          outerMemoType = null;\n        } // Inner propTypes will be validated in the function component path.\n\n\n        var outerPropTypes = outerMemoType && outerMemoType.propTypes;\n\n        if (outerPropTypes) {\n          checkPropTypes(outerPropTypes, nextProps, // Resolved (SimpleMemoComponent has no defaultProps)\n          'prop', getComponentNameFromType(outerMemoType));\n        }\n      }\n    }\n  }\n\n  if (current !== null) {\n    var prevProps = current.memoizedProps;\n\n    if (shallowEqual(prevProps, nextProps) && current.ref === workInProgress.ref && ( // Prevent bailout if the implementation changed due to hot reload.\n     workInProgress.type === current.type )) {\n      didReceiveUpdate = false;\n\n      if (!checkScheduledUpdateOrContext(current, renderLanes)) {\n        // The pending lanes were cleared at the beginning of beginWork. We're\n        // about to bail out, but there might be other lanes that weren't\n        // included in the current render. Usually, the priority level of the\n        // remaining updates is accumulated during the evaluation of the\n        // component (i.e. when processing the update queue). But since since\n        // we're bailing out early *without* evaluating the component, we need\n        // to account for it here, too. Reset to the value of the current fiber.\n        // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,\n        // because a MemoComponent fiber does not have hooks or an update queue;\n        // rather, it wraps around an inner component, which may or may not\n        // contains hooks.\n        // TODO: Move the reset at in beginWork out of the common path so that\n        // this is no longer necessary.\n        workInProgress.lanes = current.lanes;\n        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n      } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n        // This is a special case that only exists for legacy mode.\n        // See https://github.com/facebook/react/pull/19216.\n        didReceiveUpdate = true;\n      }\n    }\n  }\n\n  return updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes);\n}\n\nfunction updateOffscreenComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps;\n  var nextChildren = nextProps.children;\n  var prevState = current !== null ? current.memoizedState : null;\n\n  if (nextProps.mode === 'hidden' || enableLegacyHidden ) {\n    // Rendering a hidden tree.\n    if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n      // In legacy sync mode, don't defer the subtree. Render it now.\n      var nextState = {\n        baseLanes: NoLanes,\n        cachePool: null\n      };\n      workInProgress.memoizedState = nextState;\n\n      pushRenderLanes(workInProgress, renderLanes);\n    } else if (!includesSomeLane(renderLanes, OffscreenLane)) {\n      var spawnedCachePool = null; // We're hidden, and we're not rendering at Offscreen. We will bail out\n      // and resume this tree later.\n\n      var nextBaseLanes;\n\n      if (prevState !== null) {\n        var prevBaseLanes = prevState.baseLanes;\n        nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);\n      } else {\n        nextBaseLanes = renderLanes;\n      } // Schedule this fiber to re-render at offscreen priority. Then bailout.\n\n\n      workInProgress.lanes = workInProgress.childLanes = laneToLanes(OffscreenLane);\n      var _nextState = {\n        baseLanes: nextBaseLanes,\n        cachePool: spawnedCachePool\n      };\n      workInProgress.memoizedState = _nextState;\n      workInProgress.updateQueue = null;\n      // to avoid a push/pop misalignment.\n\n\n      pushRenderLanes(workInProgress, nextBaseLanes);\n\n      return null;\n    } else {\n      // This is the second render. The surrounding visible content has already\n      // committed. Now we resume rendering the hidden tree.\n      // Rendering at offscreen, so we can clear the base lanes.\n      var _nextState2 = {\n        baseLanes: NoLanes,\n        cachePool: null\n      };\n      workInProgress.memoizedState = _nextState2; // Push the lanes that were skipped when we bailed out.\n\n      var subtreeRenderLanes = prevState !== null ? prevState.baseLanes : renderLanes;\n\n      pushRenderLanes(workInProgress, subtreeRenderLanes);\n    }\n  } else {\n    // Rendering a visible tree.\n    var _subtreeRenderLanes;\n\n    if (prevState !== null) {\n      // We're going from hidden -> visible.\n      _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes);\n\n\n      workInProgress.memoizedState = null;\n    } else {\n      // We weren't previously hidden, and we still aren't, so there's nothing\n      // special to do. Need to push to the stack regardless, though, to avoid\n      // a push/pop misalignment.\n      _subtreeRenderLanes = renderLanes;\n    }\n\n    pushRenderLanes(workInProgress, _subtreeRenderLanes);\n  }\n\n  {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n    return workInProgress.child;\n  }\n}\n\nfunction updateFragment(current, workInProgress, renderLanes) {\n  var nextChildren = workInProgress.pendingProps;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateMode(current, workInProgress, renderLanes) {\n  var nextChildren = workInProgress.pendingProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateProfiler(current, workInProgress, renderLanes) {\n  {\n    workInProgress.flags |= Update;\n\n    {\n      // Reset effect durations for the next eventual effect phase.\n      // These are reset during render to allow the DevTools commit hook a chance to read them,\n      var stateNode = workInProgress.stateNode;\n      stateNode.effectDuration = 0;\n      stateNode.passiveEffectDuration = 0;\n    }\n  }\n\n  var nextProps = workInProgress.pendingProps;\n  var nextChildren = nextProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction markRef$1(current, workInProgress) {\n  var ref = workInProgress.ref;\n\n  if (current === null && ref !== null || current !== null && current.ref !== ref) {\n    // Schedule a Ref effect\n    workInProgress.flags |= Ref;\n  }\n}\n\nfunction updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes) {\n  {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      var innerPropTypes = Component.propTypes;\n\n      if (innerPropTypes) {\n        checkPropTypes(innerPropTypes, nextProps, // Resolved props\n        'prop', getComponentNameFromType(Component));\n      }\n    }\n  }\n\n  var context;\n\n  {\n    var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  var nextChildren;\n  prepareToReadContext(workInProgress, renderLanes);\n\n  {\n    ReactCurrentOwner$1.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);\n\n    setIsRendering(false);\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateClassComponent(current, workInProgress, Component, nextProps, renderLanes) {\n  {\n    // This is used by DevTools to force a boundary to error.\n    switch (shouldError(workInProgress)) {\n      case false:\n        {\n          var _instance = workInProgress.stateNode;\n          var ctor = workInProgress.type; // TODO This way of resetting the error boundary state is a hack.\n          // Is there a better way to do this?\n\n          var tempInstance = new ctor(workInProgress.memoizedProps, _instance.context);\n          var state = tempInstance.state;\n\n          _instance.updater.enqueueSetState(_instance, state, null);\n\n          break;\n        }\n\n      case true:\n        {\n          workInProgress.flags |= DidCapture;\n          workInProgress.flags |= ShouldCapture; // eslint-disable-next-line react-internal/prod-error-codes\n\n          var error$1 = new Error('Simulated error coming from DevTools');\n          var lane = pickArbitraryLane(renderLanes);\n          workInProgress.lanes = mergeLanes(workInProgress.lanes, lane); // Schedule the error boundary to re-render using updated state\n\n          var update = createClassErrorUpdate(workInProgress, createCapturedValue(error$1, workInProgress), lane);\n          enqueueCapturedUpdate(workInProgress, update);\n          break;\n        }\n    }\n\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      var innerPropTypes = Component.propTypes;\n\n      if (innerPropTypes) {\n        checkPropTypes(innerPropTypes, nextProps, // Resolved props\n        'prop', getComponentNameFromType(Component));\n      }\n    }\n  } // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n\n\n  var hasContext;\n\n  if (isContextProvider(Component)) {\n    hasContext = true;\n    pushContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  var instance = workInProgress.stateNode;\n  var shouldUpdate;\n\n  if (instance === null) {\n    if (current !== null) {\n      // A class component without an instance only mounts if it suspended\n      // inside a non-concurrent tree, in an inconsistent state. We want to\n      // treat it like a new mount, even though an empty version of it already\n      // committed. Disconnect the alternate pointers.\n      current.alternate = null;\n      workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect\n\n      workInProgress.flags |= Placement;\n    } // In the initial pass we might need to construct the instance.\n\n\n    constructClassInstance(workInProgress, Component, nextProps);\n    mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n    shouldUpdate = true;\n  } else if (current === null) {\n    // In a resume, we'll already have an instance we can reuse.\n    shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderLanes);\n  } else {\n    shouldUpdate = updateClassInstance(current, workInProgress, Component, nextProps, renderLanes);\n  }\n\n  var nextUnitOfWork = finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes);\n\n  {\n    var inst = workInProgress.stateNode;\n\n    if (shouldUpdate && inst.props !== nextProps) {\n      if (!didWarnAboutReassigningProps) {\n        error('It looks like %s is reassigning its own `this.props` while rendering. ' + 'This is not supported and can lead to confusing bugs.', getComponentNameFromFiber(workInProgress) || 'a component');\n      }\n\n      didWarnAboutReassigningProps = true;\n    }\n  }\n\n  return nextUnitOfWork;\n}\n\nfunction finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes) {\n  // Refs should update even if shouldComponentUpdate returns false\n  markRef$1(current, workInProgress);\n  var didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;\n\n  if (!shouldUpdate && !didCaptureError) {\n    // Context providers should defer to sCU for rendering\n    if (hasContext) {\n      invalidateContextProvider(workInProgress, Component, false);\n    }\n\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  var instance = workInProgress.stateNode; // Rerender\n\n  ReactCurrentOwner$1.current = workInProgress;\n  var nextChildren;\n\n  if (didCaptureError && typeof Component.getDerivedStateFromError !== 'function') {\n    // If we captured an error, but getDerivedStateFromError is not defined,\n    // unmount all the children. componentDidCatch will schedule an update to\n    // re-render a fallback. This is temporary until we migrate everyone to\n    // the new API.\n    // TODO: Warn in a future release.\n    nextChildren = null;\n\n    {\n      stopProfilerTimerIfRunning();\n    }\n  } else {\n\n    {\n      setIsRendering(true);\n      nextChildren = instance.render();\n\n      setIsRendering(false);\n    }\n  } // React DevTools reads this flag.\n\n\n  workInProgress.flags |= PerformedWork;\n\n  if (current !== null && didCaptureError) {\n    // If we're recovering from an error, reconcile without reusing any of\n    // the existing children. Conceptually, the normal children and the children\n    // that are shown on error are two different sets, so we shouldn't reuse\n    // normal children even if their identities match.\n    forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes);\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  } // Memoize state using the values we just used to render.\n  // TODO: Restructure so we never read values from the instance.\n\n\n  workInProgress.memoizedState = instance.state; // The context might have changed so we need to recalculate it.\n\n  if (hasContext) {\n    invalidateContextProvider(workInProgress, Component, true);\n  }\n\n  return workInProgress.child;\n}\n\nfunction pushHostRootContext(workInProgress) {\n  var root = workInProgress.stateNode;\n\n  if (root.pendingContext) {\n    pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);\n  } else if (root.context) {\n    // Should always be set\n    pushTopLevelContextObject(workInProgress, root.context, false);\n  }\n\n  pushHostContainer(workInProgress, root.containerInfo);\n}\n\nfunction updateHostRoot(current, workInProgress, renderLanes) {\n  pushHostRootContext(workInProgress);\n\n  if (current === null) {\n    throw new Error('Should have a current fiber. This is a bug in React.');\n  }\n\n  var nextProps = workInProgress.pendingProps;\n  var prevState = workInProgress.memoizedState;\n  var prevChildren = prevState.element;\n  cloneUpdateQueue(current, workInProgress);\n  processUpdateQueue(workInProgress, nextProps, null, renderLanes);\n  var nextState = workInProgress.memoizedState;\n  var root = workInProgress.stateNode;\n  // being called \"element\".\n\n\n  var nextChildren = nextState.element;\n\n  {\n\n    if (nextChildren === prevChildren) {\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    }\n\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n\n  return workInProgress.child;\n}\n\nfunction updateHostComponent$1(current, workInProgress, renderLanes) {\n  pushHostContext(workInProgress);\n\n  var type = workInProgress.type;\n  var nextProps = workInProgress.pendingProps;\n  var prevProps = current !== null ? current.memoizedProps : null;\n  var nextChildren = nextProps.children;\n\n  if (prevProps !== null && shouldSetTextContent()) {\n    // If we're switching from a direct text child to a normal child, or to\n    // empty, we need to schedule the text content to be reset.\n    workInProgress.flags |= ContentReset;\n  }\n\n  markRef$1(current, workInProgress);\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateHostText$1(current, workInProgress) {\n  // immediately after.\n\n\n  return null;\n}\n\nfunction mountLazyComponent(_current, workInProgress, elementType, renderLanes) {\n  if (_current !== null) {\n    // A lazy component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect\n\n    workInProgress.flags |= Placement;\n  }\n\n  var props = workInProgress.pendingProps;\n  var lazyComponent = elementType;\n  var payload = lazyComponent._payload;\n  var init = lazyComponent._init;\n  var Component = init(payload); // Store the unwrapped component in the type.\n\n  workInProgress.type = Component;\n  var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);\n  var resolvedProps = resolveDefaultProps(Component, props);\n  var child;\n\n  switch (resolvedTag) {\n    case FunctionComponent:\n      {\n        {\n          validateFunctionComponentInDev(workInProgress, Component);\n          workInProgress.type = Component = resolveFunctionForHotReloading(Component);\n        }\n\n        child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderLanes);\n        return child;\n      }\n\n    case ClassComponent:\n      {\n        {\n          workInProgress.type = Component = resolveClassForHotReloading(Component);\n        }\n\n        child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderLanes);\n        return child;\n      }\n\n    case ForwardRef:\n      {\n        {\n          workInProgress.type = Component = resolveForwardRefForHotReloading(Component);\n        }\n\n        child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderLanes);\n        return child;\n      }\n\n    case MemoComponent:\n      {\n        {\n          if (workInProgress.type !== workInProgress.elementType) {\n            var outerPropTypes = Component.propTypes;\n\n            if (outerPropTypes) {\n              checkPropTypes(outerPropTypes, resolvedProps, // Resolved for outer only\n              'prop', getComponentNameFromType(Component));\n            }\n          }\n        }\n\n        child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too\n        renderLanes);\n        return child;\n      }\n  }\n\n  var hint = '';\n\n  {\n    if (Component !== null && typeof Component === 'object' && Component.$$typeof === REACT_LAZY_TYPE) {\n      hint = ' Did you wrap a component in React.lazy() more than once?';\n    }\n  } // This message intentionally doesn't mention ForwardRef or MemoComponent\n  // because the fact that it's a separate type of work is an\n  // implementation detail.\n\n\n  throw new Error(\"Element type is invalid. Received a promise that resolves to: \" + Component + \". \" + (\"Lazy element type must resolve to a class or function.\" + hint));\n}\n\nfunction mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderLanes) {\n  if (_current !== null) {\n    // An incomplete component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect\n\n    workInProgress.flags |= Placement;\n  } // Promote the fiber to a class and try rendering again.\n\n\n  workInProgress.tag = ClassComponent; // The rest of this function is a fork of `updateClassComponent`\n  // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n\n  var hasContext;\n\n  if (isContextProvider(Component)) {\n    hasContext = true;\n    pushContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  constructClassInstance(workInProgress, Component, nextProps);\n  mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n  return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);\n}\n\nfunction mountIndeterminateComponent(_current, workInProgress, Component, renderLanes) {\n  if (_current !== null) {\n    // An indeterminate component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect\n\n    workInProgress.flags |= Placement;\n  }\n\n  var props = workInProgress.pendingProps;\n  var context;\n\n  {\n    var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  var value;\n\n  {\n    if (Component.prototype && typeof Component.prototype.render === 'function') {\n      var componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutBadClass[componentName]) {\n        error(\"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);\n\n        didWarnAboutBadClass[componentName] = true;\n      }\n    }\n\n    if (workInProgress.mode & StrictLegacyMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);\n    }\n\n    setIsRendering(true);\n    ReactCurrentOwner$1.current = workInProgress;\n    value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);\n    setIsRendering(false);\n  }\n\n\n  workInProgress.flags |= PerformedWork;\n\n  {\n    // Support for module components is deprecated and is removed behind a flag.\n    // Whether or not it would crash later, we want to show a good message in DEV first.\n    if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {\n      var _componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutModulePatternComponent[_componentName]) {\n        error('The <%s /> component appears to be a function component that returns a class instance. ' + 'Change %s to a class that extends React.Component instead. ' + \"If you can't use a class try assigning the prototype on the function as a workaround. \" + \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" + 'cannot be called with `new` by React.', _componentName, _componentName, _componentName);\n\n        didWarnAboutModulePatternComponent[_componentName] = true;\n      }\n    }\n  }\n\n  if ( // Run these checks in production only if the flag is off.\n  // Eventually we'll delete this branch altogether.\n   typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {\n    {\n      var _componentName2 = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutModulePatternComponent[_componentName2]) {\n        error('The <%s /> component appears to be a function component that returns a class instance. ' + 'Change %s to a class that extends React.Component instead. ' + \"If you can't use a class try assigning the prototype on the function as a workaround. \" + \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" + 'cannot be called with `new` by React.', _componentName2, _componentName2, _componentName2);\n\n        didWarnAboutModulePatternComponent[_componentName2] = true;\n      }\n    } // Proceed under the assumption that this is a class instance\n\n\n    workInProgress.tag = ClassComponent; // Throw out any hooks that were used.\n\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null; // Push context providers early to prevent context stack mismatches.\n    // During mounting we don't know the child context yet as the instance doesn't exist.\n    // We will invalidate the child context in finishClassComponent() right after rendering.\n\n    var hasContext = false;\n\n    if (isContextProvider(Component)) {\n      hasContext = true;\n      pushContextProvider(workInProgress);\n    } else {\n      hasContext = false;\n    }\n\n    workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;\n    initializeUpdateQueue(workInProgress);\n    adoptClassInstance(workInProgress, value);\n    mountClassInstance(workInProgress, Component, props, renderLanes);\n    return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);\n  } else {\n    // Proceed under the assumption that this is a function component\n    workInProgress.tag = FunctionComponent;\n\n    reconcileChildren(null, workInProgress, value, renderLanes);\n\n    {\n      validateFunctionComponentInDev(workInProgress, Component);\n    }\n\n    return workInProgress.child;\n  }\n}\n\nfunction validateFunctionComponentInDev(workInProgress, Component) {\n  {\n    if (Component) {\n      if (Component.childContextTypes) {\n        error('%s(...): childContextTypes cannot be defined on a function component.', Component.displayName || Component.name || 'Component');\n      }\n    }\n\n    if (workInProgress.ref !== null) {\n      var info = '';\n      var ownerName = getCurrentFiberOwnerNameInDevOrNull();\n\n      if (ownerName) {\n        info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n      }\n\n      var warningKey = ownerName || '';\n      var debugSource = workInProgress._debugSource;\n\n      if (debugSource) {\n        warningKey = debugSource.fileName + ':' + debugSource.lineNumber;\n      }\n\n      if (!didWarnAboutFunctionRefs[warningKey]) {\n        didWarnAboutFunctionRefs[warningKey] = true;\n\n        error('Function components cannot be given refs. ' + 'Attempts to access this ref will fail. ' + 'Did you mean to use React.forwardRef()?%s', info);\n      }\n    }\n\n    if (typeof Component.getDerivedStateFromProps === 'function') {\n      var _componentName3 = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {\n        error('%s: Function components do not support getDerivedStateFromProps.', _componentName3);\n\n        didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;\n      }\n    }\n\n    if (typeof Component.contextType === 'object' && Component.contextType !== null) {\n      var _componentName4 = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {\n        error('%s: Function components do not support contextType.', _componentName4);\n\n        didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;\n      }\n    }\n  }\n}\n\nvar SUSPENDED_MARKER = {\n  dehydrated: null,\n  treeContext: null,\n  retryLane: NoLane\n};\n\nfunction mountSuspenseOffscreenState(renderLanes) {\n  return {\n    baseLanes: renderLanes,\n    cachePool: getSuspendedCache()\n  };\n}\n\nfunction updateSuspenseOffscreenState(prevOffscreenState, renderLanes) {\n  var cachePool = null;\n\n  return {\n    baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes),\n    cachePool: cachePool\n  };\n} // TODO: Probably should inline this back\n\n\nfunction shouldRemainOnFallback(suspenseContext, current, workInProgress, renderLanes) {\n  // If we're already showing a fallback, there are cases where we need to\n  // remain on that fallback regardless of whether the content has resolved.\n  // For example, SuspenseList coordinates when nested content appears.\n  if (current !== null) {\n    var suspenseState = current.memoizedState;\n\n    if (suspenseState === null) {\n      // Currently showing content. Don't hide it, even if ForceSuspenseFallback\n      // is true. More precise name might be \"ForceRemainSuspenseFallback\".\n      // Note: This is a factoring smell. Can't remain on a fallback if there's\n      // no fallback to remain on.\n      return false;\n    }\n  } // Not currently showing content. Consult the Suspense context.\n\n\n  return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);\n}\n\nfunction getRemainingWorkInPrimaryTree(current, renderLanes) {\n  // TODO: Should not remove render lanes that were pinged during this render\n  return removeLanes(current.childLanes, renderLanes);\n}\n\nfunction updateSuspenseComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps; // This is used by DevTools to force a boundary to suspend.\n\n  {\n    if (shouldSuspend(workInProgress)) {\n      workInProgress.flags |= DidCapture;\n    }\n  }\n\n  var suspenseContext = suspenseStackCursor.current;\n  var showFallback = false;\n  var didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;\n\n  if (didSuspend || shouldRemainOnFallback(suspenseContext, current)) {\n    // Something in this boundary's subtree already suspended. Switch to\n    // rendering the fallback children.\n    showFallback = true;\n    workInProgress.flags &= ~DidCapture;\n  } else {\n    // Attempting the main content\n    if (current === null || current.memoizedState !== null) {\n      // This is a new mount or this boundary is already showing a fallback state.\n      // Mark this subtree context as having at least one invisible parent that could\n      // handle the fallback state.\n      // Avoided boundaries are not considered since they cannot handle preferred fallback states.\n      {\n        suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);\n      }\n    }\n  }\n\n  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n  pushSuspenseContext(workInProgress, suspenseContext); // OK, the next part is confusing. We're about to reconcile the Suspense\n  // boundary's children. This involves some custom reconciliation logic. Two\n  // main reasons this is so complicated.\n  //\n  // First, Legacy Mode has different semantics for backwards compatibility. The\n  // primary tree will commit in an inconsistent state, so when we do the\n  // second pass to render the fallback, we do some exceedingly, uh, clever\n  // hacks to make that not totally break. Like transferring effects and\n  // deletions from hidden tree. In Concurrent Mode, it's much simpler,\n  // because we bailout on the primary tree completely and leave it in its old\n  // state, no effects. Same as what we do for Offscreen (except that\n  // Offscreen doesn't have the first render pass).\n  //\n  // Second is hydration. During hydration, the Suspense fiber has a slightly\n  // different layout, where the child points to a dehydrated fragment, which\n  // contains the DOM rendered by the server.\n  //\n  // Third, even if you set all that aside, Suspense is like error boundaries in\n  // that we first we try to render one tree, and if that fails, we render again\n  // and switch to a different tree. Like a try/catch block. So we have to track\n  // which branch we're currently rendering. Ideally we would model this using\n  // a stack.\n\n  if (current === null) {\n\n    var nextPrimaryChildren = nextProps.children;\n    var nextFallbackChildren = nextProps.fallback;\n\n    if (showFallback) {\n      var fallbackFragment = mountSuspenseFallbackChildren(workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);\n      var primaryChildFragment = workInProgress.child;\n      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes);\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n      return fallbackFragment;\n    } else {\n      return mountSuspensePrimaryChildren(workInProgress, nextPrimaryChildren);\n    }\n  } else {\n    // This is an update.\n    // If the current fiber has a SuspenseState, that means it's already showing\n    // a fallback.\n    var prevState = current.memoizedState;\n\n    if (prevState !== null) {\n\n      if (showFallback) {\n        var _nextFallbackChildren2 = nextProps.fallback;\n        var _nextPrimaryChildren2 = nextProps.children;\n\n        var _fallbackChildFragment = updateSuspenseFallbackChildren(current, workInProgress, _nextPrimaryChildren2, _nextFallbackChildren2, renderLanes);\n\n        var _primaryChildFragment3 = workInProgress.child;\n        var prevOffscreenState = current.child.memoizedState;\n        _primaryChildFragment3.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);\n        _primaryChildFragment3.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes);\n        workInProgress.memoizedState = SUSPENDED_MARKER;\n        return _fallbackChildFragment;\n      } else {\n        var _nextPrimaryChildren3 = nextProps.children;\n\n        var _primaryChildFragment4 = updateSuspensePrimaryChildren(current, workInProgress, _nextPrimaryChildren3, renderLanes);\n\n        workInProgress.memoizedState = null;\n        return _primaryChildFragment4;\n      }\n    } else {\n      // The current tree is not already showing a fallback.\n      if (showFallback) {\n        // Timed out.\n        var _nextFallbackChildren3 = nextProps.fallback;\n        var _nextPrimaryChildren4 = nextProps.children;\n\n        var _fallbackChildFragment2 = updateSuspenseFallbackChildren(current, workInProgress, _nextPrimaryChildren4, _nextFallbackChildren3, renderLanes);\n\n        var _primaryChildFragment5 = workInProgress.child;\n        var _prevOffscreenState = current.child.memoizedState;\n        _primaryChildFragment5.memoizedState = _prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(_prevOffscreenState, renderLanes);\n        _primaryChildFragment5.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes); // Skip the primary children, and continue working on the\n        // fallback children.\n\n        workInProgress.memoizedState = SUSPENDED_MARKER;\n        return _fallbackChildFragment2;\n      } else {\n        // Still haven't timed out. Continue rendering the children, like we\n        // normally do.\n        var _nextPrimaryChildren5 = nextProps.children;\n\n        var _primaryChildFragment6 = updateSuspensePrimaryChildren(current, workInProgress, _nextPrimaryChildren5, renderLanes);\n\n        workInProgress.memoizedState = null;\n        return _primaryChildFragment6;\n      }\n    }\n  }\n}\n\nfunction mountSuspensePrimaryChildren(workInProgress, primaryChildren, renderLanes) {\n  var mode = workInProgress.mode;\n  var primaryChildProps = {\n    mode: 'visible',\n    children: primaryChildren\n  };\n  var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);\n  primaryChildFragment.return = workInProgress;\n  workInProgress.child = primaryChildFragment;\n  return primaryChildFragment;\n}\n\nfunction mountSuspenseFallbackChildren(workInProgress, primaryChildren, fallbackChildren, renderLanes) {\n  var mode = workInProgress.mode;\n  var progressedPrimaryFragment = workInProgress.child;\n  var primaryChildProps = {\n    mode: 'hidden',\n    children: primaryChildren\n  };\n  var primaryChildFragment;\n  var fallbackChildFragment;\n\n  if ((mode & ConcurrentMode) === NoMode && progressedPrimaryFragment !== null) {\n    // In legacy mode, we commit the primary tree as if it successfully\n    // completed, even though it's in an inconsistent state.\n    primaryChildFragment = progressedPrimaryFragment;\n    primaryChildFragment.childLanes = NoLanes;\n    primaryChildFragment.pendingProps = primaryChildProps;\n\n    if ( workInProgress.mode & ProfileMode) {\n      // Reset the durations from the first pass so they aren't included in the\n      // final amounts. This seems counterintuitive, since we're intentionally\n      // not measuring part of the render phase, but this makes it match what we\n      // do in Concurrent Mode.\n      primaryChildFragment.actualDuration = 0;\n      primaryChildFragment.actualStartTime = -1;\n      primaryChildFragment.selfBaseDuration = 0;\n      primaryChildFragment.treeBaseDuration = 0;\n    }\n\n    fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);\n  } else {\n    primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);\n    fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);\n  }\n\n  primaryChildFragment.return = workInProgress;\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n  return fallbackChildFragment;\n}\n\nfunction mountWorkInProgressOffscreenFiber(offscreenProps, mode, renderLanes) {\n  // The props argument to `createFiberFromOffscreen` is `any` typed, so we use\n  // this wrapper function to constrain it.\n  return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);\n}\n\nfunction updateWorkInProgressOffscreenFiber(current, offscreenProps) {\n  // The props argument to `createWorkInProgress` is `any` typed, so we use this\n  // wrapper function to constrain it.\n  return createWorkInProgress(current, offscreenProps);\n}\n\nfunction updateSuspensePrimaryChildren(current, workInProgress, primaryChildren, renderLanes) {\n  var currentPrimaryChildFragment = current.child;\n  var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\n  var primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {\n    mode: 'visible',\n    children: primaryChildren\n  });\n\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    primaryChildFragment.lanes = renderLanes;\n  }\n\n  primaryChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = null;\n\n  if (currentFallbackChildFragment !== null) {\n    // Delete the fallback child fragment\n    var deletions = workInProgress.deletions;\n\n    if (deletions === null) {\n      workInProgress.deletions = [currentFallbackChildFragment];\n      workInProgress.flags |= ChildDeletion;\n    } else {\n      deletions.push(currentFallbackChildFragment);\n    }\n  }\n\n  workInProgress.child = primaryChildFragment;\n  return primaryChildFragment;\n}\n\nfunction updateSuspenseFallbackChildren(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {\n  var mode = workInProgress.mode;\n  var currentPrimaryChildFragment = current.child;\n  var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\n  var primaryChildProps = {\n    mode: 'hidden',\n    children: primaryChildren\n  };\n  var primaryChildFragment;\n\n  if ( // In legacy mode, we commit the primary tree as if it successfully\n  // completed, even though it's in an inconsistent state.\n  (mode & ConcurrentMode) === NoMode && // Make sure we're on the second pass, i.e. the primary child fragment was\n  // already cloned. In legacy mode, the only case where this isn't true is\n  // when DevTools forces us to display a fallback; we skip the first render\n  // pass entirely and go straight to rendering the fallback. (In Concurrent\n  // Mode, SuspenseList can also trigger this scenario, but this is a legacy-\n  // only codepath.)\n  workInProgress.child !== currentPrimaryChildFragment) {\n    var progressedPrimaryFragment = workInProgress.child;\n    primaryChildFragment = progressedPrimaryFragment;\n    primaryChildFragment.childLanes = NoLanes;\n    primaryChildFragment.pendingProps = primaryChildProps;\n\n    if ( workInProgress.mode & ProfileMode) {\n      // Reset the durations from the first pass so they aren't included in the\n      // final amounts. This seems counterintuitive, since we're intentionally\n      // not measuring part of the render phase, but this makes it match what we\n      // do in Concurrent Mode.\n      primaryChildFragment.actualDuration = 0;\n      primaryChildFragment.actualStartTime = -1;\n      primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;\n      primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;\n    }\n    // However, since we're going to remain on the fallback, we no longer want\n    // to delete it.\n\n\n    workInProgress.deletions = null;\n  } else {\n    primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps);\n    // (We don't do this in legacy mode, because in legacy mode we don't re-use\n    // the current tree; see previous branch.)\n\n\n    primaryChildFragment.subtreeFlags = currentPrimaryChildFragment.subtreeFlags & StaticMask;\n  }\n\n  var fallbackChildFragment;\n\n  if (currentFallbackChildFragment !== null) {\n    fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);\n  } else {\n    fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null); // Needs a placement effect because the parent (the Suspense boundary) already\n    // mounted but this is a new fiber.\n\n    fallbackChildFragment.flags |= Placement;\n  }\n\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n  return fallbackChildFragment;\n}\n\nfunction scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {\n  fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n  var alternate = fiber.alternate;\n\n  if (alternate !== null) {\n    alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n  }\n\n  scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);\n}\n\nfunction propagateSuspenseContextChange(workInProgress, firstChild, renderLanes) {\n  // Mark any Suspense boundaries with fallbacks as having work to do.\n  // If they were previously forced into fallbacks, they may now be able\n  // to unblock.\n  var node = firstChild;\n\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      var state = node.memoizedState;\n\n      if (state !== null) {\n        scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);\n      }\n    } else if (node.tag === SuspenseListComponent) {\n      // If the tail is hidden there might not be an Suspense boundaries\n      // to schedule work on. In this case we have to schedule it on the\n      // list itself.\n      // We don't have to traverse to the children of the list since\n      // the list will propagate the change when it rerenders.\n      scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n\n    if (node === workInProgress) {\n      return;\n    }\n\n    while (node.sibling === null) {\n      if (node.return === null || node.return === workInProgress) {\n        return;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction findLastContentRow(firstChild) {\n  // This is going to find the last row among these children that is already\n  // showing content on the screen, as opposed to being in fallback state or\n  // new. If a row has multiple Suspense boundaries, any of them being in the\n  // fallback state, counts as the whole row being in a fallback state.\n  // Note that the \"rows\" will be workInProgress, but any nested children\n  // will still be current since we haven't rendered them yet. The mounted\n  // order may not be the same as the new order. We use the new order.\n  var row = firstChild;\n  var lastContentRow = null;\n\n  while (row !== null) {\n    var currentRow = row.alternate; // New rows can't be content rows.\n\n    if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n      lastContentRow = row;\n    }\n\n    row = row.sibling;\n  }\n\n  return lastContentRow;\n}\n\nfunction validateRevealOrder(revealOrder) {\n  {\n    if (revealOrder !== undefined && revealOrder !== 'forwards' && revealOrder !== 'backwards' && revealOrder !== 'together' && !didWarnAboutRevealOrder[revealOrder]) {\n      didWarnAboutRevealOrder[revealOrder] = true;\n\n      if (typeof revealOrder === 'string') {\n        switch (revealOrder.toLowerCase()) {\n          case 'together':\n          case 'forwards':\n          case 'backwards':\n            {\n              error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' + 'Use lowercase \"%s\" instead.', revealOrder, revealOrder.toLowerCase());\n\n              break;\n            }\n\n          case 'forward':\n          case 'backward':\n            {\n              error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' + 'React uses the -s suffix in the spelling. Use \"%ss\" instead.', revealOrder, revealOrder.toLowerCase());\n\n              break;\n            }\n\n          default:\n            error('\"%s\" is not a supported revealOrder on <SuspenseList />. ' + 'Did you mean \"together\", \"forwards\" or \"backwards\"?', revealOrder);\n\n            break;\n        }\n      } else {\n        error('%s is not a supported value for revealOrder on <SuspenseList />. ' + 'Did you mean \"together\", \"forwards\" or \"backwards\"?', revealOrder);\n      }\n    }\n  }\n}\n\nfunction validateTailOptions(tailMode, revealOrder) {\n  {\n    if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {\n      if (tailMode !== 'collapsed' && tailMode !== 'hidden') {\n        didWarnAboutTailOptions[tailMode] = true;\n\n        error('\"%s\" is not a supported value for tail on <SuspenseList />. ' + 'Did you mean \"collapsed\" or \"hidden\"?', tailMode);\n      } else if (revealOrder !== 'forwards' && revealOrder !== 'backwards') {\n        didWarnAboutTailOptions[tailMode] = true;\n\n        error('<SuspenseList tail=\"%s\" /> is only valid if revealOrder is ' + '\"forwards\" or \"backwards\". ' + 'Did you mean to specify revealOrder=\"forwards\"?', tailMode);\n      }\n    }\n  }\n}\n\nfunction validateSuspenseListNestedChild(childSlot, index) {\n  {\n    var isAnArray = isArray(childSlot);\n    var isIterable = !isAnArray && typeof getIteratorFn(childSlot) === 'function';\n\n    if (isAnArray || isIterable) {\n      var type = isAnArray ? 'array' : 'iterable';\n\n      error('A nested %s was passed to row #%s in <SuspenseList />. Wrap it in ' + 'an additional SuspenseList to configure its revealOrder: ' + '<SuspenseList revealOrder=...> ... ' + '<SuspenseList revealOrder=...>{%s}</SuspenseList> ... ' + '</SuspenseList>', type, index, type);\n\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction validateSuspenseListChildren(children, revealOrder) {\n  {\n    if ((revealOrder === 'forwards' || revealOrder === 'backwards') && children !== undefined && children !== null && children !== false) {\n      if (isArray(children)) {\n        for (var i = 0; i < children.length; i++) {\n          if (!validateSuspenseListNestedChild(children[i], i)) {\n            return;\n          }\n        }\n      } else {\n        var iteratorFn = getIteratorFn(children);\n\n        if (typeof iteratorFn === 'function') {\n          var childrenIterator = iteratorFn.call(children);\n\n          if (childrenIterator) {\n            var step = childrenIterator.next();\n            var _i = 0;\n\n            for (; !step.done; step = childrenIterator.next()) {\n              if (!validateSuspenseListNestedChild(step.value, _i)) {\n                return;\n              }\n\n              _i++;\n            }\n          }\n        } else {\n          error('A single row was passed to a <SuspenseList revealOrder=\"%s\" />. ' + 'This is not useful since it needs multiple rows. ' + 'Did you mean to pass multiple children or an array?', revealOrder);\n        }\n      }\n    }\n  }\n}\n\nfunction initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {\n  var renderState = workInProgress.memoizedState;\n\n  if (renderState === null) {\n    workInProgress.memoizedState = {\n      isBackwards: isBackwards,\n      rendering: null,\n      renderingStartTime: 0,\n      last: lastContentRow,\n      tail: tail,\n      tailMode: tailMode\n    };\n  } else {\n    // We can reuse the existing object from previous renders.\n    renderState.isBackwards = isBackwards;\n    renderState.rendering = null;\n    renderState.renderingStartTime = 0;\n    renderState.last = lastContentRow;\n    renderState.tail = tail;\n    renderState.tailMode = tailMode;\n  }\n} // This can end up rendering this component multiple passes.\n// The first pass splits the children fibers into two sets. A head and tail.\n// We first render the head. If anything is in fallback state, we do another\n// pass through beginWork to rerender all children (including the tail) with\n// the force suspend context. If the first render didn't have anything in\n// in fallback state. Then we render each row in the tail one-by-one.\n// That happens in the completeWork phase without going back to beginWork.\n\n\nfunction updateSuspenseListComponent(current, workInProgress, renderLanes) {\n  var nextProps = workInProgress.pendingProps;\n  var revealOrder = nextProps.revealOrder;\n  var tailMode = nextProps.tail;\n  var newChildren = nextProps.children;\n  validateRevealOrder(revealOrder);\n  validateTailOptions(tailMode, revealOrder);\n  validateSuspenseListChildren(newChildren, revealOrder);\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  var suspenseContext = suspenseStackCursor.current;\n  var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);\n\n  if (shouldForceFallback) {\n    suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);\n    workInProgress.flags |= DidCapture;\n  } else {\n    var didSuspendBefore = current !== null && (current.flags & DidCapture) !== NoFlags;\n\n    if (didSuspendBefore) {\n      // If we previously forced a fallback, we need to schedule work\n      // on any nested boundaries to let them know to try to render\n      // again. This is the same as context updating.\n      propagateSuspenseContextChange(workInProgress, workInProgress.child, renderLanes);\n    }\n\n    suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n  }\n\n  pushSuspenseContext(workInProgress, suspenseContext);\n\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    // In legacy mode, SuspenseList doesn't work so we just\n    // use make it a noop by treating it as the default revealOrder.\n    workInProgress.memoizedState = null;\n  } else {\n    switch (revealOrder) {\n      case 'forwards':\n        {\n          var lastContentRow = findLastContentRow(workInProgress.child);\n          var tail;\n\n          if (lastContentRow === null) {\n            // The whole list is part of the tail.\n            // TODO: We could fast path by just rendering the tail now.\n            tail = workInProgress.child;\n            workInProgress.child = null;\n          } else {\n            // Disconnect the tail rows after the content row.\n            // We're going to render them separately later.\n            tail = lastContentRow.sibling;\n            lastContentRow.sibling = null;\n          }\n\n          initSuspenseListRenderState(workInProgress, false, // isBackwards\n          tail, lastContentRow, tailMode);\n          break;\n        }\n\n      case 'backwards':\n        {\n          // We're going to find the first row that has existing content.\n          // At the same time we're going to reverse the list of everything\n          // we pass in the meantime. That's going to be our tail in reverse\n          // order.\n          var _tail = null;\n          var row = workInProgress.child;\n          workInProgress.child = null;\n\n          while (row !== null) {\n            var currentRow = row.alternate; // New rows can't be content rows.\n\n            if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n              // This is the beginning of the main content.\n              workInProgress.child = row;\n              break;\n            }\n\n            var nextRow = row.sibling;\n            row.sibling = _tail;\n            _tail = row;\n            row = nextRow;\n          } // TODO: If workInProgress.child is null, we can continue on the tail immediately.\n\n\n          initSuspenseListRenderState(workInProgress, true, // isBackwards\n          _tail, null, // last\n          tailMode);\n          break;\n        }\n\n      case 'together':\n        {\n          initSuspenseListRenderState(workInProgress, false, // isBackwards\n          null, // tail\n          null, // last\n          undefined);\n          break;\n        }\n\n      default:\n        {\n          // The default reveal order is the same as not having\n          // a boundary.\n          workInProgress.memoizedState = null;\n        }\n    }\n  }\n\n  return workInProgress.child;\n}\n\nfunction updatePortalComponent(current, workInProgress, renderLanes) {\n  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n  var nextChildren = workInProgress.pendingProps;\n\n  if (current === null) {\n    // Portals are special because we don't append the children during mount\n    // but at commit. Therefore we need to track insertions which the normal\n    // flow doesn't do during mount. This doesn't happen at the root because\n    // the root always starts with a \"current\" with a null child.\n    // TODO: Consider unifying this with how the root works.\n    workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n\n  return workInProgress.child;\n}\n\nvar hasWarnedAboutUsingNoValuePropOnContextProvider = false;\n\nfunction updateContextProvider(current, workInProgress, renderLanes) {\n  var providerType = workInProgress.type;\n  var context = providerType._context;\n  var newProps = workInProgress.pendingProps;\n  var oldProps = workInProgress.memoizedProps;\n  var newValue = newProps.value;\n\n  {\n    if (!('value' in newProps)) {\n      if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {\n        hasWarnedAboutUsingNoValuePropOnContextProvider = true;\n\n        error('The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?');\n      }\n    }\n\n    var providerPropTypes = workInProgress.type.propTypes;\n\n    if (providerPropTypes) {\n      checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider');\n    }\n  }\n\n  pushProvider(workInProgress, context, newValue);\n\n  {\n    if (oldProps !== null) {\n      var oldValue = oldProps.value;\n\n      if (objectIs(oldValue, newValue)) {\n        // No change. Bailout early if children are the same.\n        if (oldProps.children === newProps.children && !hasContextChanged()) {\n          return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n        }\n      } else {\n        // The context value changed. Search for matching consumers and schedule\n        // them to update.\n        propagateContextChange(workInProgress, context, renderLanes);\n      }\n    }\n  }\n\n  var newChildren = newProps.children;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nvar hasWarnedAboutUsingContextAsConsumer = false;\n\nfunction updateContextConsumer(current, workInProgress, renderLanes) {\n  var context = workInProgress.type; // The logic below for Context differs depending on PROD or DEV mode. In\n  // DEV mode, we create a separate object for Context.Consumer that acts\n  // like a proxy to Context. This proxy object adds unnecessary code in PROD\n  // so we use the old behaviour (Context.Consumer references Context) to\n  // reduce size and overhead. The separate object references context via\n  // a property called \"_context\", which also gives us the ability to check\n  // in DEV mode if this property exists or not and warn if it does not.\n\n  {\n    if (context._context === undefined) {\n      // This may be because it's a Context (rather than a Consumer).\n      // Or it may be because it's older React where they're the same thing.\n      // We only want to warn if we're sure it's a new React.\n      if (context !== context.Consumer) {\n        if (!hasWarnedAboutUsingContextAsConsumer) {\n          hasWarnedAboutUsingContextAsConsumer = true;\n\n          error('Rendering <Context> directly is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n        }\n      }\n    } else {\n      context = context._context;\n    }\n  }\n\n  var newProps = workInProgress.pendingProps;\n  var render = newProps.children;\n\n  {\n    if (typeof render !== 'function') {\n      error('A context consumer was rendered with multiple children, or a child ' + \"that isn't a function. A context consumer expects a single child \" + 'that is a function. If you did pass a function, make sure there ' + 'is no trailing or leading whitespace around it.');\n    }\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  var newValue = readContext(context);\n\n  var newChildren;\n\n  {\n    ReactCurrentOwner$1.current = workInProgress;\n    setIsRendering(true);\n    newChildren = render(newValue);\n    setIsRendering(false);\n  }\n\n\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction markWorkInProgressReceivedUpdate() {\n  didReceiveUpdate = true;\n}\n\nfunction bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {\n  if (current !== null) {\n    // Reuse previous dependencies\n    workInProgress.dependencies = current.dependencies;\n  }\n\n  {\n    // Don't update \"base\" render times for bailouts.\n    stopProfilerTimerIfRunning();\n  }\n\n  markSkippedUpdateLanes(workInProgress.lanes); // Check if the children have any pending work.\n\n  if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {\n    // The children don't have any work either. We can skip them.\n    // TODO: Once we add back resuming, we should check if the children are\n    // a work-in-progress set. If so, we need to transfer their effects.\n    {\n      return null;\n    }\n  } // This fiber doesn't have work, but its subtree does. Clone the child\n  // fibers and continue.\n\n\n  cloneChildFibers(current, workInProgress);\n  return workInProgress.child;\n}\n\nfunction remountFiber(current, oldWorkInProgress, newWorkInProgress) {\n  {\n    var returnFiber = oldWorkInProgress.return;\n\n    if (returnFiber === null) {\n      // eslint-disable-next-line react-internal/prod-error-codes\n      throw new Error('Cannot swap the root fiber.');\n    } // Disconnect from the old current.\n    // It will get deleted.\n\n\n    current.alternate = null;\n    oldWorkInProgress.alternate = null; // Connect to the new tree.\n\n    newWorkInProgress.index = oldWorkInProgress.index;\n    newWorkInProgress.sibling = oldWorkInProgress.sibling;\n    newWorkInProgress.return = oldWorkInProgress.return;\n    newWorkInProgress.ref = oldWorkInProgress.ref; // Replace the child/sibling pointers above it.\n\n    if (oldWorkInProgress === returnFiber.child) {\n      returnFiber.child = newWorkInProgress;\n    } else {\n      var prevSibling = returnFiber.child;\n\n      if (prevSibling === null) {\n        // eslint-disable-next-line react-internal/prod-error-codes\n        throw new Error('Expected parent to have a child.');\n      }\n\n      while (prevSibling.sibling !== oldWorkInProgress) {\n        prevSibling = prevSibling.sibling;\n\n        if (prevSibling === null) {\n          // eslint-disable-next-line react-internal/prod-error-codes\n          throw new Error('Expected to find the previous sibling.');\n        }\n      }\n\n      prevSibling.sibling = newWorkInProgress;\n    } // Delete the old fiber and place the new one.\n    // Since the old fiber is disconnected, we have to schedule it manually.\n\n\n    var deletions = returnFiber.deletions;\n\n    if (deletions === null) {\n      returnFiber.deletions = [current];\n      returnFiber.flags |= ChildDeletion;\n    } else {\n      deletions.push(current);\n    }\n\n    newWorkInProgress.flags |= Placement; // Restart work from the new fiber.\n\n    return newWorkInProgress;\n  }\n}\n\nfunction checkScheduledUpdateOrContext(current, renderLanes) {\n  // Before performing an early bailout, we must check if there are pending\n  // updates or context.\n  var updateLanes = current.lanes;\n\n  if (includesSomeLane(updateLanes, renderLanes)) {\n    return true;\n  } // No pending update, but because context is propagated lazily, we need\n\n  return false;\n}\n\nfunction attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes) {\n  // This fiber does not have any pending work. Bailout without entering\n  // the begin phase. There's still some bookkeeping we that needs to be done\n  // in this optimized path, mostly pushing stuff onto the stack.\n  switch (workInProgress.tag) {\n    case HostRoot:\n      pushHostRootContext(workInProgress);\n      var root = workInProgress.stateNode;\n      break;\n\n    case HostComponent:\n      pushHostContext(workInProgress);\n      break;\n\n    case ClassComponent:\n      {\n        var Component = workInProgress.type;\n\n        if (isContextProvider(Component)) {\n          pushContextProvider(workInProgress);\n        }\n\n        break;\n      }\n\n    case HostPortal:\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      break;\n\n    case ContextProvider:\n      {\n        var newValue = workInProgress.memoizedProps.value;\n        var context = workInProgress.type._context;\n        pushProvider(workInProgress, context, newValue);\n        break;\n      }\n\n    case Profiler:\n      {\n        // Profiler should only call onRender when one of its descendants actually rendered.\n        var hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);\n\n        if (hasChildWork) {\n          workInProgress.flags |= Update;\n        }\n\n        {\n          // Reset effect durations for the next eventual effect phase.\n          // These are reset during render to allow the DevTools commit hook a chance to read them,\n          var stateNode = workInProgress.stateNode;\n          stateNode.effectDuration = 0;\n          stateNode.passiveEffectDuration = 0;\n        }\n      }\n\n      break;\n\n    case SuspenseComponent:\n      {\n        var state = workInProgress.memoizedState;\n\n        if (state !== null) {\n          // whether to retry the primary children, or to skip over it and\n          // go straight to the fallback. Check the priority of the primary\n          // child fragment.\n\n\n          var primaryChildFragment = workInProgress.child;\n          var primaryChildLanes = primaryChildFragment.childLanes;\n\n          if (includesSomeLane(renderLanes, primaryChildLanes)) {\n            // The primary children have pending work. Use the normal path\n            // to attempt to render the primary children again.\n            return updateSuspenseComponent(current, workInProgress, renderLanes);\n          } else {\n            // The primary child fragment does not have pending work marked\n            // on it\n            pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // The primary children do not have pending work with sufficient\n            // priority. Bailout.\n\n            var child = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n\n            if (child !== null) {\n              // The fallback children have pending work. Skip over the\n              // primary children and work on the fallback.\n              return child.sibling;\n            } else {\n              // Note: We can return `null` here because we already checked\n              // whether there were nested context consumers, via the call to\n              // `bailoutOnAlreadyFinishedWork` above.\n              return null;\n            }\n          }\n        } else {\n          pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));\n        }\n\n        break;\n      }\n\n    case SuspenseListComponent:\n      {\n        var didSuspendBefore = (current.flags & DidCapture) !== NoFlags;\n\n        var _hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);\n\n        if (didSuspendBefore) {\n          if (_hasChildWork) {\n            // If something was in fallback state last time, and we have all the\n            // same children then we're still in progressive loading state.\n            // Something might get unblocked by state updates or retries in the\n            // tree which will affect the tail. So we need to use the normal\n            // path to compute the correct tail.\n            return updateSuspenseListComponent(current, workInProgress, renderLanes);\n          } // If none of the children had any work, that means that none of\n          // them got retried so they'll still be blocked in the same way\n          // as before. We can fast bail out.\n\n\n          workInProgress.flags |= DidCapture;\n        } // If nothing suspended before and we're rendering the same children,\n        // then the tail doesn't matter. Anything new that suspends will work\n        // in the \"together\" mode, so we can continue from the state we had.\n\n\n        var renderState = workInProgress.memoizedState;\n\n        if (renderState !== null) {\n          // Reset to the \"together\" mode in case we've started a different\n          // update in the past but didn't complete it.\n          renderState.rendering = null;\n          renderState.tail = null;\n          renderState.lastEffect = null;\n        }\n\n        pushSuspenseContext(workInProgress, suspenseStackCursor.current);\n\n        if (_hasChildWork) {\n          break;\n        } else {\n          // If none of the children had any work, that means that none of\n          // them got retried so they'll still be blocked in the same way\n          // as before. We can fast bail out.\n          return null;\n        }\n      }\n\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      {\n        // Need to check if the tree still needs to be deferred. This is\n        // almost identical to the logic used in the normal update path,\n        // so we'll just enter that. The only difference is we'll bail out\n        // at the next level instead of this one, because the child props\n        // have not changed. Which is fine.\n        // TODO: Probably should refactor `beginWork` to split the bailout\n        // path from the normal path. I'm tempted to do a labeled break here\n        // but I won't :)\n        workInProgress.lanes = NoLanes;\n        return updateOffscreenComponent(current, workInProgress, renderLanes);\n      }\n  }\n\n  return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n}\n\nfunction beginWork(current, workInProgress, renderLanes) {\n  {\n    if (workInProgress._debugNeedsRemount && current !== null) {\n      // This will restart the begin phase with a new fiber.\n      return remountFiber(current, workInProgress, createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.lanes));\n    }\n  }\n\n  if (current !== null) {\n    var oldProps = current.memoizedProps;\n    var newProps = workInProgress.pendingProps;\n\n    if (oldProps !== newProps || hasContextChanged() || ( // Force a re-render if the implementation changed due to hot reload:\n     workInProgress.type !== current.type )) {\n      // If props or context changed, mark the fiber as having performed work.\n      // This may be unset if the props are determined to be equal later (memo).\n      didReceiveUpdate = true;\n    } else {\n      // Neither props nor legacy context changes. Check if there's a pending\n      // update or context change.\n      var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);\n\n      if (!hasScheduledUpdateOrContext && // If this is the second pass of an error or suspense boundary, there\n      // may not be work scheduled on `current`, so we check for this flag.\n      (workInProgress.flags & DidCapture) === NoFlags) {\n        // No pending updates or context. Bail out now.\n        didReceiveUpdate = false;\n        return attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes);\n      }\n\n      if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n        // This is a special case that only exists for legacy mode.\n        // See https://github.com/facebook/react/pull/19216.\n        didReceiveUpdate = true;\n      } else {\n        // An update was scheduled on this fiber, but there are no new props\n        // nor legacy context. Set this to false. If an update queue or context\n        // consumer produces a changed value, it will set this to true. Otherwise,\n        // the component will assume the children have not changed and bail out.\n        didReceiveUpdate = false;\n      }\n    }\n  } else {\n    didReceiveUpdate = false;\n  } // Before entering the begin phase, clear pending update priority.\n  // TODO: This assumes that we're about to evaluate the component and process\n  // the update queue. However, there's an exception: SimpleMemoComponent\n  // sometimes bails out later in the begin phase. This indicates that we should\n  // move this assignment out of the common path and into each branch.\n\n\n  workInProgress.lanes = NoLanes;\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent:\n      {\n        return mountIndeterminateComponent(current, workInProgress, workInProgress.type, renderLanes);\n      }\n\n    case LazyComponent:\n      {\n        var elementType = workInProgress.elementType;\n        return mountLazyComponent(current, workInProgress, elementType, renderLanes);\n      }\n\n    case FunctionComponent:\n      {\n        var Component = workInProgress.type;\n        var unresolvedProps = workInProgress.pendingProps;\n        var resolvedProps = workInProgress.elementType === Component ? unresolvedProps : resolveDefaultProps(Component, unresolvedProps);\n        return updateFunctionComponent(current, workInProgress, Component, resolvedProps, renderLanes);\n      }\n\n    case ClassComponent:\n      {\n        var _Component = workInProgress.type;\n        var _unresolvedProps = workInProgress.pendingProps;\n\n        var _resolvedProps = workInProgress.elementType === _Component ? _unresolvedProps : resolveDefaultProps(_Component, _unresolvedProps);\n\n        return updateClassComponent(current, workInProgress, _Component, _resolvedProps, renderLanes);\n      }\n\n    case HostRoot:\n      return updateHostRoot(current, workInProgress, renderLanes);\n\n    case HostComponent:\n      return updateHostComponent$1(current, workInProgress, renderLanes);\n\n    case HostText:\n      return updateHostText$1();\n\n    case SuspenseComponent:\n      return updateSuspenseComponent(current, workInProgress, renderLanes);\n\n    case HostPortal:\n      return updatePortalComponent(current, workInProgress, renderLanes);\n\n    case ForwardRef:\n      {\n        var type = workInProgress.type;\n        var _unresolvedProps2 = workInProgress.pendingProps;\n\n        var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);\n\n        return updateForwardRef(current, workInProgress, type, _resolvedProps2, renderLanes);\n      }\n\n    case Fragment:\n      return updateFragment(current, workInProgress, renderLanes);\n\n    case Mode:\n      return updateMode(current, workInProgress, renderLanes);\n\n    case Profiler:\n      return updateProfiler(current, workInProgress, renderLanes);\n\n    case ContextProvider:\n      return updateContextProvider(current, workInProgress, renderLanes);\n\n    case ContextConsumer:\n      return updateContextConsumer(current, workInProgress, renderLanes);\n\n    case MemoComponent:\n      {\n        var _type2 = workInProgress.type;\n        var _unresolvedProps3 = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.\n\n        var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);\n\n        {\n          if (workInProgress.type !== workInProgress.elementType) {\n            var outerPropTypes = _type2.propTypes;\n\n            if (outerPropTypes) {\n              checkPropTypes(outerPropTypes, _resolvedProps3, // Resolved for outer only\n              'prop', getComponentNameFromType(_type2));\n            }\n          }\n        }\n\n        _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);\n        return updateMemoComponent(current, workInProgress, _type2, _resolvedProps3, renderLanes);\n      }\n\n    case SimpleMemoComponent:\n      {\n        return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);\n      }\n\n    case IncompleteClassComponent:\n      {\n        var _Component2 = workInProgress.type;\n        var _unresolvedProps4 = workInProgress.pendingProps;\n\n        var _resolvedProps4 = workInProgress.elementType === _Component2 ? _unresolvedProps4 : resolveDefaultProps(_Component2, _unresolvedProps4);\n\n        return mountIncompleteClassComponent(current, workInProgress, _Component2, _resolvedProps4, renderLanes);\n      }\n\n    case SuspenseListComponent:\n      {\n        return updateSuspenseListComponent(current, workInProgress, renderLanes);\n      }\n\n    case ScopeComponent:\n      {\n\n        break;\n      }\n\n    case OffscreenComponent:\n      {\n        return updateOffscreenComponent(current, workInProgress, renderLanes);\n      }\n  }\n\n  throw new Error(\"Unknown unit of work tag (\" + workInProgress.tag + \"). This error is likely caused by a bug in \" + 'React. Please file an issue.');\n}\n\nfunction unwindWork(current, workInProgress, renderLanes) {\n  // Note: This intentionally doesn't check if we're hydrating because comparing\n  // to the current tree provider fiber is just as fast and less error-prone.\n  // Ideally we would have a special version of the work loop only\n  // for hydration.\n  popTreeContext(workInProgress);\n\n  switch (workInProgress.tag) {\n    case ClassComponent:\n      {\n        var Component = workInProgress.type;\n\n        if (isContextProvider(Component)) {\n          popContext(workInProgress);\n        }\n\n        var flags = workInProgress.flags;\n\n        if (flags & ShouldCapture) {\n          workInProgress.flags = flags & ~ShouldCapture | DidCapture;\n\n          if ( (workInProgress.mode & ProfileMode) !== NoMode) {\n            transferActualDuration(workInProgress);\n          }\n\n          return workInProgress;\n        }\n\n        return null;\n      }\n\n    case HostRoot:\n      {\n\n        popHostContainer(workInProgress);\n        popTopLevelContextObject(workInProgress);\n        resetWorkInProgressVersions();\n        var _flags = workInProgress.flags;\n\n        if ((_flags & ShouldCapture) !== NoFlags && (_flags & DidCapture) === NoFlags) {\n          // There was an error during render that wasn't captured by a suspense\n          // boundary. Do a second pass on the root to unmount the children.\n          workInProgress.flags = _flags & ~ShouldCapture | DidCapture;\n          return workInProgress;\n        } // We unwound to the root without completing it. Exit.\n\n\n        return null;\n      }\n\n    case HostComponent:\n      {\n        // TODO: popHydrationState\n        popHostContext(workInProgress);\n        return null;\n      }\n\n    case SuspenseComponent:\n      {\n        popSuspenseContext(workInProgress);\n\n        var _flags2 = workInProgress.flags;\n\n        if (_flags2 & ShouldCapture) {\n          workInProgress.flags = _flags2 & ~ShouldCapture | DidCapture; // Captured a suspense effect. Re-render the boundary.\n\n          if ( (workInProgress.mode & ProfileMode) !== NoMode) {\n            transferActualDuration(workInProgress);\n          }\n\n          return workInProgress;\n        }\n\n        return null;\n      }\n\n    case SuspenseListComponent:\n      {\n        popSuspenseContext(workInProgress); // SuspenseList doesn't actually catch anything. It should've been\n        // caught by a nested boundary. If not, it should bubble through.\n\n        return null;\n      }\n\n    case HostPortal:\n      popHostContainer(workInProgress);\n      return null;\n\n    case ContextProvider:\n      var context = workInProgress.type._context;\n      popProvider(context, workInProgress);\n      return null;\n\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      popRenderLanes(workInProgress);\n\n      return null;\n\n    case CacheComponent:\n\n      return null;\n\n    default:\n      return null;\n  }\n}\n\nfunction unwindInterruptedWork(current, interruptedWork, renderLanes) {\n  // Note: This intentionally doesn't check if we're hydrating because comparing\n  // to the current tree provider fiber is just as fast and less error-prone.\n  // Ideally we would have a special version of the work loop only\n  // for hydration.\n  popTreeContext(interruptedWork);\n\n  switch (interruptedWork.tag) {\n    case ClassComponent:\n      {\n        var childContextTypes = interruptedWork.type.childContextTypes;\n\n        if (childContextTypes !== null && childContextTypes !== undefined) {\n          popContext(interruptedWork);\n        }\n\n        break;\n      }\n\n    case HostRoot:\n      {\n\n        popHostContainer(interruptedWork);\n        popTopLevelContextObject(interruptedWork);\n        resetWorkInProgressVersions();\n        break;\n      }\n\n    case HostComponent:\n      {\n        popHostContext(interruptedWork);\n        break;\n      }\n\n    case HostPortal:\n      popHostContainer(interruptedWork);\n      break;\n\n    case SuspenseComponent:\n      popSuspenseContext(interruptedWork);\n      break;\n\n    case SuspenseListComponent:\n      popSuspenseContext(interruptedWork);\n      break;\n\n    case ContextProvider:\n      var context = interruptedWork.type._context;\n      popProvider(context, interruptedWork);\n      break;\n\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      popRenderLanes(interruptedWork);\n\n      break;\n  }\n}\n\nfunction invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {\n  var funcArgs = Array.prototype.slice.call(arguments, 3);\n\n  try {\n    func.apply(context, funcArgs);\n  } catch (error) {\n    this.onError(error);\n  }\n}\n\nvar invokeGuardedCallbackImpl = invokeGuardedCallbackProd;\n\n{\n  // In DEV mode, we swap out invokeGuardedCallback for a special version\n  // that plays more nicely with the browser's DevTools. The idea is to preserve\n  // \"Pause on exceptions\" behavior. Because React wraps all user-provided\n  // functions in invokeGuardedCallback, and the production version of\n  // invokeGuardedCallback uses a try-catch, all user exceptions are treated\n  // like caught exceptions, and the DevTools won't pause unless the developer\n  // takes the extra step of enabling pause on caught exceptions. This is\n  // unintuitive, though, because even though React has caught the error, from\n  // the developer's perspective, the error is uncaught.\n  //\n  // To preserve the expected \"Pause on exceptions\" behavior, we don't use a\n  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake\n  // DOM node, and call the user-provided callback from inside an event handler\n  // for that fake event. If the callback throws, the error is \"captured\" using\n  // a global event handler. But because the error happens in a different\n  // event loop context, it does not interrupt the normal program flow.\n  // Effectively, this gives us try-catch behavior without actually using\n  // try-catch. Neat!\n  // Check that the browser supports the APIs we need to implement our special\n  // DEV version of invokeGuardedCallback\n  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {\n    var fakeNode = document.createElement('react');\n\n    invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context, a, b, c, d, e, f) {\n      // If document doesn't exist we know for sure we will crash in this method\n      // when we call document.createEvent(). However this can cause confusing\n      // errors: https://github.com/facebook/create-react-app/issues/3482\n      // So we preemptively throw with a better message instead.\n      if (typeof document === 'undefined' || document === null) {\n        throw new Error('The `document` global was defined when React was initialized, but is not ' + 'defined anymore. This can happen in a test environment if a component ' + 'schedules an update from an asynchronous callback, but the test has already ' + 'finished running. To solve this, you can either unmount the component at ' + 'the end of your test (and ensure that any asynchronous operations get ' + 'canceled in `componentWillUnmount`), or you can change the test itself ' + 'to be asynchronous.');\n      }\n\n      var evt = document.createEvent('Event');\n      var didCall = false; // Keeps track of whether the user-provided callback threw an error. We\n      // set this to true at the beginning, then set it to false right after\n      // calling the function. If the function errors, `didError` will never be\n      // set to false. This strategy works even if the browser is flaky and\n      // fails to call our global error handler, because it doesn't rely on\n      // the error event at all.\n\n      var didError = true; // Keeps track of the value of window.event so that we can reset it\n      // during the callback to let user code access window.event in the\n      // browsers that support it.\n\n      var windowEvent = window.event; // Keeps track of the descriptor of window.event to restore it after event\n      // dispatching: https://github.com/facebook/react/issues/13688\n\n      var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, 'event');\n\n      function restoreAfterDispatch() {\n        // We immediately remove the callback from event listeners so that\n        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a\n        // nested call would trigger the fake event handlers of any call higher\n        // in the stack.\n        fakeNode.removeEventListener(evtType, callCallback, false); // We check for window.hasOwnProperty('event') to prevent the\n        // window.event assignment in both IE <= 10 as they throw an error\n        // \"Member not found\" in strict mode, and in Firefox which does not\n        // support window.event.\n\n        if (typeof window.event !== 'undefined' && window.hasOwnProperty('event')) {\n          window.event = windowEvent;\n        }\n      } // Create an event handler for our fake event. We will synchronously\n      // dispatch our fake event using `dispatchEvent`. Inside the handler, we\n      // call the user-provided callback.\n\n\n      var funcArgs = Array.prototype.slice.call(arguments, 3);\n\n      function callCallback() {\n        didCall = true;\n        restoreAfterDispatch();\n        func.apply(context, funcArgs);\n        didError = false;\n      } // Create a global error event handler. We use this to capture the value\n      // that was thrown. It's possible that this error handler will fire more\n      // than once; for example, if non-React code also calls `dispatchEvent`\n      // and a handler for that event throws. We should be resilient to most of\n      // those cases. Even if our error event handler fires more than once, the\n      // last error event is always used. If the callback actually does error,\n      // we know that the last error event is the correct one, because it's not\n      // possible for anything else to have happened in between our callback\n      // erroring and the code that follows the `dispatchEvent` call below. If\n      // the callback doesn't error, but the error event was fired, we know to\n      // ignore it because `didError` will be false, as described above.\n\n\n      var error; // Use this to track whether the error event is ever called.\n\n      var didSetError = false;\n      var isCrossOriginError = false;\n\n      function handleWindowError(event) {\n        error = event.error;\n        didSetError = true;\n\n        if (error === null && event.colno === 0 && event.lineno === 0) {\n          isCrossOriginError = true;\n        }\n\n        if (event.defaultPrevented) {\n          // Some other error handler has prevented default.\n          // Browsers silence the error report if this happens.\n          // We'll remember this to later decide whether to log it or not.\n          if (error != null && typeof error === 'object') {\n            try {\n              error._suppressLogging = true;\n            } catch (inner) {// Ignore.\n            }\n          }\n        }\n      } // Create a fake event type.\n\n\n      var evtType = \"react-\" + (name ? name : 'invokeguardedcallback'); // Attach our event handlers\n\n      window.addEventListener('error', handleWindowError);\n      fakeNode.addEventListener(evtType, callCallback, false); // Synchronously dispatch our fake event. If the user-provided function\n      // errors, it will trigger our global error handler.\n\n      evt.initEvent(evtType, false, false);\n      fakeNode.dispatchEvent(evt);\n\n      if (windowEventDescriptor) {\n        Object.defineProperty(window, 'event', windowEventDescriptor);\n      }\n\n      if (didCall && didError) {\n        if (!didSetError) {\n          // The callback errored, but the error event never fired.\n          // eslint-disable-next-line react-internal/prod-error-codes\n          error = new Error('An error was thrown inside one of your components, but React ' + \"doesn't know what it was. This is likely due to browser \" + 'flakiness. React does its best to preserve the \"Pause on ' + 'exceptions\" behavior of the DevTools, which requires some ' + \"DEV-mode only tricks. It's possible that these don't work in \" + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');\n        } else if (isCrossOriginError) {\n          // eslint-disable-next-line react-internal/prod-error-codes\n          error = new Error(\"A cross-origin error was thrown. React doesn't have access to \" + 'the actual error object in development. ' + 'See https://reactjs.org/link/crossorigin-error for more information.');\n        }\n\n        this.onError(error);\n      } // Remove our event listeners\n\n\n      window.removeEventListener('error', handleWindowError);\n\n      if (!didCall) {\n        // Something went really wrong, and our event was not dispatched.\n        // https://github.com/facebook/react/issues/16734\n        // https://github.com/facebook/react/issues/16585\n        // Fall back to the production implementation.\n        restoreAfterDispatch();\n        return invokeGuardedCallbackProd.apply(this, arguments);\n      }\n    };\n  }\n}\n\nvar invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;\n\nvar hasError = false;\nvar caughtError = null; // Used by event system to capture/rethrow the first error.\nvar reporter = {\n  onError: function (error) {\n    hasError = true;\n    caughtError = error;\n  }\n};\n/**\n * Call a function while guarding against errors that happens within it.\n * Returns an error if it throws, otherwise null.\n *\n * In production, this is implemented using a try-catch. The reason we don't\n * use a try-catch directly is so that we can swap out a different\n * implementation in DEV mode.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\n\nfunction invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {\n  hasError = false;\n  caughtError = null;\n  invokeGuardedCallbackImpl$1.apply(reporter, arguments);\n}\nfunction clearCaughtError() {\n  if (hasError) {\n    var error = caughtError;\n    hasError = false;\n    caughtError = null;\n    return error;\n  } else {\n    throw new Error('clearCaughtError was called but no error was captured. This error ' + 'is likely caused by a bug in React. Please file an issue.');\n  }\n}\n\nvar didWarnAboutUndefinedSnapshotBeforeUpdate = null;\n\n{\n  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();\n} // Used during the commit phase to track the state of the Offscreen component stack.\nvar PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;\nvar nextEffect = null; // Used for Profiling builds to track updaters.\n\nfunction reportUncaughtErrorInDEV(error) {\n  // Wrapping each small part of the commit phase into a guarded\n  // callback is a bit too slow (https://github.com/facebook/react/pull/21666).\n  // But we rely on it to surface errors to DEV tools like overlays\n  // (https://github.com/facebook/react/issues/21712).\n  // As a compromise, rethrow only caught errors in a guard.\n  {\n    invokeGuardedCallback(null, function () {\n      throw error;\n    });\n    clearCaughtError();\n  }\n}\n\nvar callComponentWillUnmountWithTimer = function (current, instance) {\n  instance.props = current.memoizedProps;\n  instance.state = current.memoizedState;\n\n  if ( current.mode & ProfileMode) {\n    try {\n      startLayoutEffectTimer();\n      instance.componentWillUnmount();\n    } finally {\n      recordLayoutEffectDuration(current);\n    }\n  } else {\n    instance.componentWillUnmount();\n  }\n}; // Capture errors so they don't interrupt mounting.\n\n\nfunction safelyCallComponentWillUnmount(current, nearestMountedAncestor, instance) {\n  try {\n    callComponentWillUnmountWithTimer(current, instance);\n  } catch (error) {\n    reportUncaughtErrorInDEV(error);\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n} // Capture errors so they don't interrupt mounting.\n\nfunction safelyDetachRef(current, nearestMountedAncestor) {\n  var ref = current.ref;\n\n  if (ref !== null) {\n    if (typeof ref === 'function') {\n      var retVal;\n\n      try {\n        if (enableProfilerTimer && enableProfilerCommitHooks && current.mode & ProfileMode) {\n          try {\n            startLayoutEffectTimer();\n            retVal = ref(null);\n          } finally {\n            recordLayoutEffectDuration(current);\n          }\n        } else {\n          retVal = ref(null);\n        }\n      } catch (error) {\n        reportUncaughtErrorInDEV(error);\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\n      }\n\n      {\n        if (typeof retVal === 'function') {\n          error('Unexpected return value from a callback ref in %s. ' + 'A callback ref should not return a function.', getComponentNameFromFiber(current));\n        }\n      }\n    } else {\n      ref.current = null;\n    }\n  }\n}\n\nfunction safelyCallDestroy(current, nearestMountedAncestor, destroy) {\n  try {\n    destroy();\n  } catch (error) {\n    reportUncaughtErrorInDEV(error);\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\n\nvar focusedInstanceHandle = null;\nvar shouldFireAfterActiveInstanceBlur = false;\nfunction commitBeforeMutationEffects(root, firstChild) {\n  focusedInstanceHandle = prepareForCommit(root.containerInfo);\n  nextEffect = firstChild;\n  commitBeforeMutationEffects_begin(); // We no longer need to track the active instance fiber\n\n  var shouldFire = shouldFireAfterActiveInstanceBlur;\n  shouldFireAfterActiveInstanceBlur = false;\n  focusedInstanceHandle = null;\n  return shouldFire;\n}\n\nfunction commitBeforeMutationEffects_begin() {\n  while (nextEffect !== null) {\n    var fiber = nextEffect; // This phase is only used for beforeActiveInstanceBlur.\n\n    var child = fiber.child;\n\n    if ((fiber.subtreeFlags & BeforeMutationMask) !== NoFlags && child !== null) {\n      ensureCorrectReturnPointer(child, fiber);\n      nextEffect = child;\n    } else {\n      commitBeforeMutationEffects_complete();\n    }\n  }\n}\n\nfunction commitBeforeMutationEffects_complete() {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    setCurrentFiber(fiber);\n\n    try {\n      commitBeforeMutationEffectsOnFiber(fiber);\n    } catch (error) {\n      reportUncaughtErrorInDEV(error);\n      captureCommitPhaseError(fiber, fiber.return, error);\n    }\n\n    resetCurrentFiber();\n    var sibling = fiber.sibling;\n\n    if (sibling !== null) {\n      ensureCorrectReturnPointer(sibling, fiber.return);\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitBeforeMutationEffectsOnFiber(finishedWork) {\n  var current = finishedWork.alternate;\n  var flags = finishedWork.flags;\n\n  if ((flags & Snapshot) !== NoFlags) {\n    setCurrentFiber(finishedWork);\n\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent:\n        {\n          break;\n        }\n\n      case ClassComponent:\n        {\n          if (current !== null) {\n            var prevProps = current.memoizedProps;\n            var prevState = current.memoizedState;\n            var instance = finishedWork.stateNode; // We could update instance props and state here,\n            // but instead we rely on them being set during last render.\n            // TODO: revisit this when we implement resuming.\n\n            {\n              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                if (instance.props !== finishedWork.memoizedProps) {\n                  error('Expected %s props to match memoized props before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\n                }\n\n                if (instance.state !== finishedWork.memoizedState) {\n                  error('Expected %s state to match memoized state before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\n                }\n              }\n            }\n\n            var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);\n\n            {\n              var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;\n\n              if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {\n                didWarnSet.add(finishedWork.type);\n\n                error('%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' + 'must be returned. You have returned undefined.', getComponentNameFromFiber(finishedWork));\n              }\n            }\n\n            instance.__reactInternalSnapshotBeforeUpdate = snapshot;\n          }\n\n          break;\n        }\n\n      case HostRoot:\n        {\n          {\n            var root = finishedWork.stateNode;\n            clearContainer(root.containerInfo);\n          }\n\n          break;\n        }\n\n      case HostComponent:\n      case HostText:\n      case HostPortal:\n      case IncompleteClassComponent:\n        // Nothing to do for these component types\n        break;\n\n      default:\n        {\n          throw new Error('This unit of work tag should not have side-effects. This error is ' + 'likely caused by a bug in React. Please file an issue.');\n        }\n    }\n\n    resetCurrentFiber();\n  }\n}\n\nfunction commitHookEffectListUnmount(flags, finishedWork, nearestMountedAncestor) {\n  var updateQueue = finishedWork.updateQueue;\n  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n\n  if (lastEffect !== null) {\n    var firstEffect = lastEffect.next;\n    var effect = firstEffect;\n\n    do {\n      if ((effect.tag & flags) === flags) {\n        // Unmount\n        var destroy = effect.destroy;\n        effect.destroy = undefined;\n\n        if (destroy !== undefined) {\n\n          safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy);\n        }\n      }\n\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction commitHookEffectListMount(flags, finishedWork) {\n  var updateQueue = finishedWork.updateQueue;\n  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n\n  if (lastEffect !== null) {\n    var firstEffect = lastEffect.next;\n    var effect = firstEffect;\n\n    do {\n      if ((effect.tag & flags) === flags) {\n\n\n        var create = effect.create;\n        effect.destroy = create();\n\n        {\n          var destroy = effect.destroy;\n\n          if (destroy !== undefined && typeof destroy !== 'function') {\n            var hookName = void 0;\n\n            if ((effect.tag & Layout) !== NoFlags) {\n              hookName = 'useLayoutEffect';\n            } else if ((effect.tag & Insertion) !== NoFlags) {\n              hookName = 'useInsertionEffect';\n            } else {\n              hookName = 'useEffect';\n            }\n\n            var addendum = void 0;\n\n            if (destroy === null) {\n              addendum = ' You returned null. If your effect does not require clean ' + 'up, return undefined (or nothing).';\n            } else if (typeof destroy.then === 'function') {\n              addendum = '\\n\\nIt looks like you wrote ' + hookName + '(async () => ...) or returned a Promise. ' + 'Instead, write the async function inside your effect ' + 'and call it immediately:\\n\\n' + hookName + '(() => {\\n' + '  async function fetchData() {\\n' + '    // You can await here\\n' + '    const response = await MyAPI.getData(someId);\\n' + '    // ...\\n' + '  }\\n' + '  fetchData();\\n' + \"}, [someId]); // Or [] if effect doesn't need props or state\\n\\n\" + 'Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching';\n            } else {\n              addendum = ' You returned: ' + destroy;\n            }\n\n            error('%s must not return anything besides a function, ' + 'which is used for clean-up.%s', hookName, addendum);\n          }\n        }\n      }\n\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction commitPassiveEffectDurations(finishedRoot, finishedWork) {\n  {\n    // Only Profilers with work in their subtree will have an Update effect scheduled.\n    if ((finishedWork.flags & Update) !== NoFlags) {\n      switch (finishedWork.tag) {\n        case Profiler:\n          {\n            var passiveEffectDuration = finishedWork.stateNode.passiveEffectDuration;\n            var _finishedWork$memoize = finishedWork.memoizedProps,\n                id = _finishedWork$memoize.id,\n                onPostCommit = _finishedWork$memoize.onPostCommit; // This value will still reflect the previous commit phase.\n            // It does not get reset until the start of the next commit phase.\n\n            var commitTime = getCommitTime();\n            var phase = finishedWork.alternate === null ? 'mount' : 'update';\n\n            {\n              if (isCurrentUpdateNested()) {\n                phase = 'nested-update';\n              }\n            }\n\n            if (typeof onPostCommit === 'function') {\n              onPostCommit(id, phase, passiveEffectDuration, commitTime);\n            } // Bubble times to the next nearest ancestor Profiler.\n            // After we process that Profiler, we'll bubble further up.\n\n\n            var parentFiber = finishedWork.return;\n\n            outer: while (parentFiber !== null) {\n              switch (parentFiber.tag) {\n                case HostRoot:\n                  var root = parentFiber.stateNode;\n                  root.passiveEffectDuration += passiveEffectDuration;\n                  break outer;\n\n                case Profiler:\n                  var parentStateNode = parentFiber.stateNode;\n                  parentStateNode.passiveEffectDuration += passiveEffectDuration;\n                  break outer;\n              }\n\n              parentFiber = parentFiber.return;\n            }\n\n            break;\n          }\n      }\n    }\n  }\n}\n\nfunction commitLayoutEffectOnFiber(finishedRoot, current, finishedWork, committedLanes) {\n  if ((finishedWork.flags & LayoutMask) !== NoFlags) {\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent:\n        {\n          {\n            // At this point layout effects have already been destroyed (during mutation phase).\n            // This is done to prevent sibling component effects from interfering with each other,\n            // e.g. a destroy function in one component should never override a ref set\n            // by a create function in another component during the same commit.\n            if ( finishedWork.mode & ProfileMode) {\n              try {\n                startLayoutEffectTimer();\n                commitHookEffectListMount(Layout | HasEffect, finishedWork);\n              } finally {\n                recordLayoutEffectDuration(finishedWork);\n              }\n            } else {\n              commitHookEffectListMount(Layout | HasEffect, finishedWork);\n            }\n          }\n\n          break;\n        }\n\n      case ClassComponent:\n        {\n          var instance = finishedWork.stateNode;\n\n          if (finishedWork.flags & Update) {\n            {\n              if (current === null) {\n                // We could update instance props and state here,\n                // but instead we rely on them being set during last render.\n                // TODO: revisit this when we implement resuming.\n                {\n                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                    if (instance.props !== finishedWork.memoizedProps) {\n                      error('Expected %s props to match memoized props before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\n                    }\n\n                    if (instance.state !== finishedWork.memoizedState) {\n                      error('Expected %s state to match memoized state before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\n                    }\n                  }\n                }\n\n                if ( finishedWork.mode & ProfileMode) {\n                  try {\n                    startLayoutEffectTimer();\n                    instance.componentDidMount();\n                  } finally {\n                    recordLayoutEffectDuration(finishedWork);\n                  }\n                } else {\n                  instance.componentDidMount();\n                }\n              } else {\n                var prevProps = finishedWork.elementType === finishedWork.type ? current.memoizedProps : resolveDefaultProps(finishedWork.type, current.memoizedProps);\n                var prevState = current.memoizedState; // We could update instance props and state here,\n                // but instead we rely on them being set during last render.\n                // TODO: revisit this when we implement resuming.\n\n                {\n                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                    if (instance.props !== finishedWork.memoizedProps) {\n                      error('Expected %s props to match memoized props before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\n                    }\n\n                    if (instance.state !== finishedWork.memoizedState) {\n                      error('Expected %s state to match memoized state before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\n                    }\n                  }\n                }\n\n                if ( finishedWork.mode & ProfileMode) {\n                  try {\n                    startLayoutEffectTimer();\n                    instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);\n                  } finally {\n                    recordLayoutEffectDuration(finishedWork);\n                  }\n                } else {\n                  instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);\n                }\n              }\n            }\n          } // TODO: I think this is now always non-null by the time it reaches the\n          // commit phase. Consider removing the type check.\n\n\n          var updateQueue = finishedWork.updateQueue;\n\n          if (updateQueue !== null) {\n            {\n              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                if (instance.props !== finishedWork.memoizedProps) {\n                  error('Expected %s props to match memoized props before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\n                }\n\n                if (instance.state !== finishedWork.memoizedState) {\n                  error('Expected %s state to match memoized state before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');\n                }\n              }\n            } // We could update instance props and state here,\n            // but instead we rely on them being set during last render.\n            // TODO: revisit this when we implement resuming.\n\n\n            commitUpdateQueue(finishedWork, updateQueue, instance);\n          }\n\n          break;\n        }\n\n      case HostRoot:\n        {\n          // TODO: I think this is now always non-null by the time it reaches the\n          // commit phase. Consider removing the type check.\n          var _updateQueue = finishedWork.updateQueue;\n\n          if (_updateQueue !== null) {\n            var _instance = null;\n\n            if (finishedWork.child !== null) {\n              switch (finishedWork.child.tag) {\n                case HostComponent:\n                  _instance = getPublicInstance(finishedWork.child.stateNode);\n                  break;\n\n                case ClassComponent:\n                  _instance = finishedWork.child.stateNode;\n                  break;\n              }\n            }\n\n            commitUpdateQueue(finishedWork, _updateQueue, _instance);\n          }\n\n          break;\n        }\n\n      case HostComponent:\n        {\n          var _instance2 = finishedWork.stateNode; // Renderers may schedule work to be done after host components are mounted\n          // (eg DOM renderer may schedule auto-focus for inputs and form controls).\n          // These effects should only be committed when components are first mounted,\n          // aka when there is no current/alternate.\n\n          if (current === null && finishedWork.flags & Update) {\n            var type = finishedWork.type;\n            var props = finishedWork.memoizedProps;\n          }\n\n          break;\n        }\n\n      case HostText:\n        {\n          // We have no life-cycles associated with text.\n          break;\n        }\n\n      case HostPortal:\n        {\n          // We have no life-cycles associated with portals.\n          break;\n        }\n\n      case Profiler:\n        {\n          {\n            var _finishedWork$memoize2 = finishedWork.memoizedProps,\n                onCommit = _finishedWork$memoize2.onCommit,\n                onRender = _finishedWork$memoize2.onRender;\n            var effectDuration = finishedWork.stateNode.effectDuration;\n            var commitTime = getCommitTime();\n            var phase = current === null ? 'mount' : 'update';\n\n            {\n              if (isCurrentUpdateNested()) {\n                phase = 'nested-update';\n              }\n            }\n\n            if (typeof onRender === 'function') {\n              onRender(finishedWork.memoizedProps.id, phase, finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime);\n            }\n\n            {\n              if (typeof onCommit === 'function') {\n                onCommit(finishedWork.memoizedProps.id, phase, effectDuration, commitTime);\n              } // Schedule a passive effect for this Profiler to call onPostCommit hooks.\n              // This effect should be scheduled even if there is no onPostCommit callback for this Profiler,\n              // because the effect is also where times bubble to parent Profilers.\n\n\n              enqueuePendingPassiveProfilerEffect(finishedWork); // Propagate layout effect durations to the next nearest Profiler ancestor.\n              // Do not reset these values until the next render so DevTools has a chance to read them first.\n\n              var parentFiber = finishedWork.return;\n\n              outer: while (parentFiber !== null) {\n                switch (parentFiber.tag) {\n                  case HostRoot:\n                    var root = parentFiber.stateNode;\n                    root.effectDuration += effectDuration;\n                    break outer;\n\n                  case Profiler:\n                    var parentStateNode = parentFiber.stateNode;\n                    parentStateNode.effectDuration += effectDuration;\n                    break outer;\n                }\n\n                parentFiber = parentFiber.return;\n              }\n            }\n          }\n\n          break;\n        }\n\n      case SuspenseComponent:\n        {\n          break;\n        }\n\n      case SuspenseListComponent:\n      case IncompleteClassComponent:\n      case ScopeComponent:\n      case OffscreenComponent:\n      case LegacyHiddenComponent:\n        {\n          break;\n        }\n\n      default:\n        throw new Error('This unit of work tag should not have side-effects. This error is ' + 'likely caused by a bug in React. Please file an issue.');\n    }\n  }\n\n  {\n    {\n      if (finishedWork.flags & Ref) {\n        commitAttachRef(finishedWork);\n      }\n    }\n  }\n}\n\nfunction hideOrUnhideAllChildren(finishedWork, isHidden) {\n  // Only hide or unhide the top-most host nodes.\n  var hostSubtreeRoot = null;\n\n  {\n    // We only have the top Fiber that was inserted but we need to recurse down its\n    // children to find all the terminal nodes.\n    var node = finishedWork;\n\n    while (true) {\n      if (node.tag === HostComponent) {\n        if (hostSubtreeRoot === null) {\n          hostSubtreeRoot = node;\n          var instance = node.stateNode;\n\n          if (isHidden) {\n            hideInstance(instance);\n          } else {\n            unhideInstance(node.stateNode, node.memoizedProps);\n          }\n        }\n      } else if (node.tag === HostText) {\n        if (hostSubtreeRoot === null) {\n          var _instance3 = node.stateNode;\n\n          if (isHidden) {\n            hideTextInstance(_instance3);\n          } else {\n            unhideTextInstance(_instance3, node.memoizedProps);\n          }\n        }\n      } else if ((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork) ; else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n\n      if (node === finishedWork) {\n        return;\n      }\n\n      while (node.sibling === null) {\n        if (node.return === null || node.return === finishedWork) {\n          return;\n        }\n\n        if (hostSubtreeRoot === node) {\n          hostSubtreeRoot = null;\n        }\n\n        node = node.return;\n      }\n\n      if (hostSubtreeRoot === node) {\n        hostSubtreeRoot = null;\n      }\n\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n}\n\nfunction commitAttachRef(finishedWork) {\n  var ref = finishedWork.ref;\n\n  if (ref !== null) {\n    var instance = finishedWork.stateNode;\n    var instanceToUse;\n\n    switch (finishedWork.tag) {\n      case HostComponent:\n        instanceToUse = getPublicInstance(instance);\n        break;\n\n      default:\n        instanceToUse = instance;\n    } // Moved outside to ensure DCE works with this flag\n\n    if (typeof ref === 'function') {\n      var retVal;\n\n      if ( finishedWork.mode & ProfileMode) {\n        try {\n          startLayoutEffectTimer();\n          retVal = ref(instanceToUse);\n        } finally {\n          recordLayoutEffectDuration(finishedWork);\n        }\n      } else {\n        retVal = ref(instanceToUse);\n      }\n\n      {\n        if (typeof retVal === 'function') {\n          error('Unexpected return value from a callback ref in %s. ' + 'A callback ref should not return a function.', getComponentNameFromFiber(finishedWork));\n        }\n      }\n    } else {\n      {\n        if (!ref.hasOwnProperty('current')) {\n          error('Unexpected ref object provided for %s. ' + 'Use either a ref-setter function or React.createRef().', getComponentNameFromFiber(finishedWork));\n        }\n      }\n\n      ref.current = instanceToUse;\n    }\n  }\n}\n\nfunction commitDetachRef(current) {\n  var currentRef = current.ref;\n\n  if (currentRef !== null) {\n    if (typeof currentRef === 'function') {\n      if ( current.mode & ProfileMode) {\n        try {\n          startLayoutEffectTimer();\n          currentRef(null);\n        } finally {\n          recordLayoutEffectDuration(current);\n        }\n      } else {\n        currentRef(null);\n      }\n    } else {\n      currentRef.current = null;\n    }\n  }\n} // User-originating errors (lifecycles and refs) should not interrupt\n// deletion, so don't let them throw. Host-originating errors should\n// interrupt deletion, so it's okay\n\n\nfunction commitUnmount(finishedRoot, current, nearestMountedAncestor) {\n  onCommitUnmount(current);\n\n  switch (current.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent:\n      {\n        var updateQueue = current.updateQueue;\n\n        if (updateQueue !== null) {\n          var lastEffect = updateQueue.lastEffect;\n\n          if (lastEffect !== null) {\n            var firstEffect = lastEffect.next;\n            var effect = firstEffect;\n\n            do {\n              var _effect = effect,\n                  destroy = _effect.destroy,\n                  tag = _effect.tag;\n\n              if (destroy !== undefined) {\n                if ((tag & Insertion) !== NoFlags$1) {\n                  safelyCallDestroy(current, nearestMountedAncestor, destroy);\n                } else if ((tag & Layout) !== NoFlags$1) {\n\n                  if ( current.mode & ProfileMode) {\n                    startLayoutEffectTimer();\n                    safelyCallDestroy(current, nearestMountedAncestor, destroy);\n                    recordLayoutEffectDuration(current);\n                  } else {\n                    safelyCallDestroy(current, nearestMountedAncestor, destroy);\n                  }\n                }\n              }\n\n              effect = effect.next;\n            } while (effect !== firstEffect);\n          }\n        }\n\n        return;\n      }\n\n    case ClassComponent:\n      {\n        safelyDetachRef(current, nearestMountedAncestor);\n        var instance = current.stateNode;\n\n        if (typeof instance.componentWillUnmount === 'function') {\n          safelyCallComponentWillUnmount(current, nearestMountedAncestor, instance);\n        }\n\n        return;\n      }\n\n    case HostComponent:\n      {\n        safelyDetachRef(current, nearestMountedAncestor);\n        return;\n      }\n\n    case HostPortal:\n      {\n        // TODO: this is recursive.\n        // We are also not using this parent because\n        // the portal will get pushed immediately.\n        {\n          unmountHostComponents(finishedRoot, current, nearestMountedAncestor);\n        }\n\n        return;\n      }\n\n    case DehydratedFragment:\n      {\n\n        return;\n      }\n\n    case ScopeComponent:\n      {\n\n        return;\n      }\n  }\n}\n\nfunction commitNestedUnmounts(finishedRoot, root, nearestMountedAncestor) {\n  // While we're inside a removed host node we don't want to call\n  // removeChild on the inner nodes because they're removed by the top\n  // call anyway. We also want to call componentWillUnmount on all\n  // composites before this host node is removed from the tree. Therefore\n  // we do an inner loop while we're still inside the host node.\n  var node = root;\n\n  while (true) {\n    commitUnmount(finishedRoot, node, nearestMountedAncestor); // Visit children because they may contain more composite or host nodes.\n    // Skip portals because commitUnmount() currently visits them recursively.\n\n    if (node.child !== null && ( // If we use mutation we drill down into portals using commitUnmount above.\n    // If we don't use mutation we drill down into portals here instead.\n     node.tag !== HostPortal)) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n\n    if (node === root) {\n      return;\n    }\n\n    while (node.sibling === null) {\n      if (node.return === null || node.return === root) {\n        return;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction detachFiberMutation(fiber) {\n  // Cut off the return pointer to disconnect it from the tree.\n  // This enables us to detect and warn against state updates on an unmounted component.\n  // It also prevents events from bubbling from within disconnected components.\n  //\n  // Ideally, we should also clear the child pointer of the parent alternate to let this\n  // get GC:ed but we don't know which for sure which parent is the current\n  // one so we'll settle for GC:ing the subtree of this child.\n  // This child itself will be GC:ed when the parent updates the next time.\n  //\n  // Note that we can't clear child or sibling pointers yet.\n  // They're needed for passive effects and for findDOMNode.\n  // We defer those fields, and all other cleanup, to the passive phase (see detachFiberAfterEffects).\n  //\n  // Don't reset the alternate yet, either. We need that so we can detach the\n  // alternate's fields in the passive phase. Clearing the return pointer is\n  // sufficient for findDOMNode semantics.\n  var alternate = fiber.alternate;\n\n  if (alternate !== null) {\n    alternate.return = null;\n  }\n\n  fiber.return = null;\n}\n\nfunction detachFiberAfterEffects(fiber) {\n  var alternate = fiber.alternate;\n\n  if (alternate !== null) {\n    fiber.alternate = null;\n    detachFiberAfterEffects(alternate);\n  } // Note: Defensively using negation instead of < in case\n  // `deletedTreeCleanUpLevel` is undefined.\n\n\n  {\n    // Clear cyclical Fiber fields. This level alone is designed to roughly\n    // approximate the planned Fiber refactor. In that world, `setState` will be\n    // bound to a special \"instance\" object instead of a Fiber. The Instance\n    // object will not have any of these fields. It will only be connected to\n    // the fiber tree via a single link at the root. So if this level alone is\n    // sufficient to fix memory issues, that bodes well for our plans.\n    fiber.child = null;\n    fiber.deletions = null;\n    fiber.sibling = null; // The `stateNode` is cyclical because on host nodes it points to the host\n    // tree, which has its own pointers to children, parents, and siblings.\n    // The other host nodes also point back to fibers, so we should detach that\n    // one, too.\n\n    if (fiber.tag === HostComponent) {\n      var hostInstance = fiber.stateNode;\n    }\n\n    fiber.stateNode = null; // I'm intentionally not clearing the `return` field in this level. We\n    // already disconnect the `return` pointer at the root of the deleted\n    // subtree (in `detachFiberMutation`). Besides, `return` by itself is not\n    // cyclical — it's only cyclical when combined with `child`, `sibling`, and\n    // `alternate`. But we'll clear it in the next level anyway, just in case.\n\n    {\n      fiber._debugOwner = null;\n    }\n\n    {\n      // Theoretically, nothing in here should be necessary, because we already\n      // disconnected the fiber from the tree. So even if something leaks this\n      // particular fiber, it won't leak anything else\n      //\n      // The purpose of this branch is to be super aggressive so we can measure\n      // if there's any difference in memory impact. If there is, that could\n      // indicate a React leak we don't know about.\n      fiber.return = null;\n      fiber.dependencies = null;\n      fiber.memoizedProps = null;\n      fiber.memoizedState = null;\n      fiber.pendingProps = null;\n      fiber.stateNode = null; // TODO: Move to `commitPassiveUnmountInsideDeletedTreeOnFiber` instead.\n\n      fiber.updateQueue = null;\n    }\n  }\n}\n\nfunction getHostParentFiber(fiber) {\n  var parent = fiber.return;\n\n  while (parent !== null) {\n    if (isHostParent(parent)) {\n      return parent;\n    }\n\n    parent = parent.return;\n  }\n\n  throw new Error('Expected to find a host parent. This error is likely caused by a bug ' + 'in React. Please file an issue.');\n}\n\nfunction isHostParent(fiber) {\n  return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;\n}\n\nfunction getHostSibling(fiber) {\n  // We're going to search forward into the tree until we find a sibling host\n  // node. Unfortunately, if multiple insertions are done in a row we have to\n  // search past them. This leads to exponential search for the next sibling.\n  // TODO: Find a more efficient way to do this.\n  var node = fiber;\n\n  siblings: while (true) {\n    // If we didn't find anything, let's try the next sibling.\n    while (node.sibling === null) {\n      if (node.return === null || isHostParent(node.return)) {\n        // If we pop out of the root or hit the parent the fiber we are the\n        // last sibling.\n        return null;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n\n    while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment) {\n      // If it is not host node and, we might have a host node inside it.\n      // Try to search down until we find one.\n      if (node.flags & Placement) {\n        // If we don't have a child, try the siblings instead.\n        continue siblings;\n      } // If we don't have a child, try the siblings instead.\n      // We also skip portals because they are not part of this host tree.\n\n\n      if (node.child === null || node.tag === HostPortal) {\n        continue siblings;\n      } else {\n        node.child.return = node;\n        node = node.child;\n      }\n    } // Check if this host node is stable or about to be placed.\n\n\n    if (!(node.flags & Placement)) {\n      // Found it!\n      return node.stateNode;\n    }\n  }\n}\n\nfunction commitPlacement(finishedWork) {\n\n\n  var parentFiber = getHostParentFiber(finishedWork); // Note: these two variables *must* always be updated together.\n\n  switch (parentFiber.tag) {\n    case HostComponent:\n      {\n        var parent = parentFiber.stateNode;\n\n        if (parentFiber.flags & ContentReset) {\n\n          parentFiber.flags &= ~ContentReset;\n        }\n\n        var before = getHostSibling(finishedWork); // We only have the top Fiber that was inserted but we need to recurse down its\n        // children to find all the terminal nodes.\n\n        insertOrAppendPlacementNode(finishedWork, before, parent);\n        break;\n      }\n\n    case HostRoot:\n    case HostPortal:\n      {\n        var _parent = parentFiber.stateNode.containerInfo;\n\n        var _before = getHostSibling(finishedWork);\n\n        insertOrAppendPlacementNodeIntoContainer(finishedWork, _before, _parent);\n        break;\n      }\n    // eslint-disable-next-line-no-fallthrough\n\n    default:\n      throw new Error('Invalid host parent fiber. This error is likely caused by a bug ' + 'in React. Please file an issue.');\n  }\n}\n\nfunction insertOrAppendPlacementNodeIntoContainer(node, before, parent) {\n  var tag = node.tag;\n  var isHost = tag === HostComponent || tag === HostText;\n\n  if (isHost) {\n    var stateNode = node.stateNode;\n\n    if (before) {\n      insertInContainerBefore(parent, stateNode, before);\n    } else {\n      appendChildToContainer(parent, stateNode);\n    }\n  } else if (tag === HostPortal) ; else {\n    var child = node.child;\n\n    if (child !== null) {\n      insertOrAppendPlacementNodeIntoContainer(child, before, parent);\n      var sibling = child.sibling;\n\n      while (sibling !== null) {\n        insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);\n        sibling = sibling.sibling;\n      }\n    }\n  }\n}\n\nfunction insertOrAppendPlacementNode(node, before, parent) {\n  var tag = node.tag;\n  var isHost = tag === HostComponent || tag === HostText;\n\n  if (isHost) {\n    var stateNode = node.stateNode;\n\n    if (before) {\n      insertBefore(parent, stateNode, before);\n    } else {\n      appendChild(parent, stateNode);\n    }\n  } else if (tag === HostPortal) ; else {\n    var child = node.child;\n\n    if (child !== null) {\n      insertOrAppendPlacementNode(child, before, parent);\n      var sibling = child.sibling;\n\n      while (sibling !== null) {\n        insertOrAppendPlacementNode(sibling, before, parent);\n        sibling = sibling.sibling;\n      }\n    }\n  }\n}\n\nfunction unmountHostComponents(finishedRoot, current, nearestMountedAncestor) {\n  // We only have the top Fiber that was deleted but we need to recurse down its\n  // children to find all the terminal nodes.\n  var node = current; // Each iteration, currentParent is populated with node's host parent if not\n  // currentParentIsValid.\n\n  var currentParentIsValid = false; // Note: these two variables *must* always be updated together.\n\n  var currentParent;\n  var currentParentIsContainer;\n\n  while (true) {\n    if (!currentParentIsValid) {\n      var parent = node.return;\n\n      findParent: while (true) {\n        if (parent === null) {\n          throw new Error('Expected to find a host parent. This error is likely caused by ' + 'a bug in React. Please file an issue.');\n        }\n\n        var parentStateNode = parent.stateNode;\n\n        switch (parent.tag) {\n          case HostComponent:\n            currentParent = parentStateNode;\n            currentParentIsContainer = false;\n            break findParent;\n\n          case HostRoot:\n            currentParent = parentStateNode.containerInfo;\n            currentParentIsContainer = true;\n            break findParent;\n\n          case HostPortal:\n            currentParent = parentStateNode.containerInfo;\n            currentParentIsContainer = true;\n            break findParent;\n        }\n\n        parent = parent.return;\n      }\n\n      currentParentIsValid = true;\n    }\n\n    if (node.tag === HostComponent || node.tag === HostText) {\n      commitNestedUnmounts(finishedRoot, node, nearestMountedAncestor); // After all the children have unmounted, it is now safe to remove the\n      // node from the tree.\n\n      if (currentParentIsContainer) {\n        removeChildFromContainer(currentParent, node.stateNode);\n      } else {\n        removeChild(currentParent, node.stateNode);\n      } // Don't visit children because we already visited them.\n\n    } else if (node.tag === HostPortal) {\n      if (node.child !== null) {\n        // When we go into a portal, it becomes the parent to remove from.\n        // We will reassign it back when we pop the portal on the way up.\n        currentParent = node.stateNode.containerInfo;\n        currentParentIsContainer = true; // Visit children because portals might contain host components.\n\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n    } else {\n      commitUnmount(finishedRoot, node, nearestMountedAncestor); // Visit children because we may find more host components below.\n\n      if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n    }\n\n    if (node === current) {\n      return;\n    }\n\n    while (node.sibling === null) {\n      if (node.return === null || node.return === current) {\n        return;\n      }\n\n      node = node.return;\n\n      if (node.tag === HostPortal) {\n        // When we go out of the portal, we need to restore the parent.\n        // Since we don't keep a stack of them, we will search for it.\n        currentParentIsValid = false;\n      }\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction commitDeletion(finishedRoot, current, nearestMountedAncestor) {\n  {\n    // Recursively delete all host nodes from the parent.\n    // Detach refs and call componentWillUnmount() on the whole subtree.\n    unmountHostComponents(finishedRoot, current, nearestMountedAncestor);\n  }\n\n  detachFiberMutation(current);\n}\n\nfunction commitWork(current, finishedWork) {\n\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent:\n      {\n        commitHookEffectListUnmount(Insertion | HasEffect, finishedWork, finishedWork.return);\n        commitHookEffectListMount(Insertion | HasEffect, finishedWork); // Layout effects are destroyed during the mutation phase so that all\n        // destroy functions for all fibers are called before any create functions.\n        // This prevents sibling component effects from interfering with each other,\n        // e.g. a destroy function in one component should never override a ref set\n        // by a create function in another component during the same commit.\n\n        if ( finishedWork.mode & ProfileMode) {\n          try {\n            startLayoutEffectTimer();\n            commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);\n          } finally {\n            recordLayoutEffectDuration(finishedWork);\n          }\n        } else {\n          commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);\n        }\n\n        return;\n      }\n\n    case ClassComponent:\n      {\n        return;\n      }\n\n    case HostComponent:\n      {\n        var instance = finishedWork.stateNode;\n\n        if (instance != null) {\n          // Commit the work prepared earlier.\n          var newProps = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps\n          // as the newProps. The updatePayload will contain the real change in\n          // this case.\n\n          var oldProps = current !== null ? current.memoizedProps : newProps;\n          var type = finishedWork.type; // TODO: Type the updateQueue to be specific to host components.\n\n          var updatePayload = finishedWork.updateQueue;\n          finishedWork.updateQueue = null;\n\n          if (updatePayload !== null) {\n            commitUpdate(instance, updatePayload, type, oldProps, newProps);\n          }\n        }\n\n        return;\n      }\n\n    case HostText:\n      {\n        if (finishedWork.stateNode === null) {\n          throw new Error('This should have a text node initialized. This error is likely ' + 'caused by a bug in React. Please file an issue.');\n        }\n\n        var textInstance = finishedWork.stateNode;\n        var newText = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps\n        // as the newProps. The updatePayload will contain the real change in\n        // this case.\n\n        var oldText = current !== null ? current.memoizedProps : newText;\n        commitTextUpdate(textInstance, oldText, newText);\n        return;\n      }\n\n    case HostRoot:\n      {\n\n        return;\n      }\n\n    case Profiler:\n      {\n        return;\n      }\n\n    case SuspenseComponent:\n      {\n        commitSuspenseCallback(finishedWork);\n        attachSuspenseRetryListeners(finishedWork);\n        return;\n      }\n\n    case SuspenseListComponent:\n      {\n        attachSuspenseRetryListeners(finishedWork);\n        return;\n      }\n\n    case IncompleteClassComponent:\n      {\n        return;\n      }\n  }\n\n  throw new Error('This unit of work tag should not have side-effects. This error is ' + 'likely caused by a bug in React. Please file an issue.');\n}\n\nfunction commitSuspenseCallback(finishedWork) {\n  // TODO: Move this to passive phase\n  var newState = finishedWork.memoizedState;\n}\n\nfunction attachSuspenseRetryListeners(finishedWork) {\n  // If this boundary just timed out, then it will have a set of wakeables.\n  // For each wakeable, attach a listener so that when it resolves, React\n  // attempts to re-render the boundary in the primary (pre-timeout) state.\n  var wakeables = finishedWork.updateQueue;\n\n  if (wakeables !== null) {\n    finishedWork.updateQueue = null;\n    var retryCache = finishedWork.stateNode;\n\n    if (retryCache === null) {\n      retryCache = finishedWork.stateNode = new PossiblyWeakSet();\n    }\n\n    wakeables.forEach(function (wakeable) {\n      // Memoize using the boundary fiber to prevent redundant listeners.\n      var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\n\n      if (!retryCache.has(wakeable)) {\n        retryCache.add(wakeable);\n\n        wakeable.then(retry, retry);\n      }\n    });\n  }\n} // This function detects when a Suspense boundary goes from visible to hidden.\n\nfunction commitResetTextContent(current) {\n\n  resetTextContent(current.stateNode);\n}\n\nfunction commitMutationEffects(root, firstChild, committedLanes) {\n  nextEffect = firstChild;\n  commitMutationEffects_begin(root, committedLanes);\n}\n\nfunction commitMutationEffects_begin(root, lanes) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect; // TODO: Should wrap this in flags check, too, as optimization\n\n    var deletions = fiber.deletions;\n\n    if (deletions !== null) {\n      for (var i = 0; i < deletions.length; i++) {\n        var childToDelete = deletions[i];\n\n        try {\n          commitDeletion(root, childToDelete, fiber);\n        } catch (error) {\n          reportUncaughtErrorInDEV(error);\n          captureCommitPhaseError(childToDelete, fiber, error);\n        }\n      }\n    }\n\n    var child = fiber.child;\n\n    if ((fiber.subtreeFlags & MutationMask) !== NoFlags && child !== null) {\n      ensureCorrectReturnPointer(child, fiber);\n      nextEffect = child;\n    } else {\n      commitMutationEffects_complete(root, lanes);\n    }\n  }\n}\n\nfunction commitMutationEffects_complete(root, lanes) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    setCurrentFiber(fiber);\n\n    try {\n      commitMutationEffectsOnFiber(fiber, root, lanes);\n    } catch (error) {\n      reportUncaughtErrorInDEV(error);\n      captureCommitPhaseError(fiber, fiber.return, error);\n    }\n\n    resetCurrentFiber();\n    var sibling = fiber.sibling;\n\n    if (sibling !== null) {\n      ensureCorrectReturnPointer(sibling, fiber.return);\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitMutationEffectsOnFiber(finishedWork, root, lanes) {\n  // TODO: The factoring of this phase could probably be improved. Consider\n  // switching on the type of work before checking the flags. That's what\n  // we do in all the other phases. I think this one is only different\n  // because of the shared reconciliation logic below.\n  var flags = finishedWork.flags;\n\n  if (flags & ContentReset) {\n    commitResetTextContent(finishedWork);\n  }\n\n  if (flags & Ref) {\n    var current = finishedWork.alternate;\n\n    if (current !== null) {\n      commitDetachRef(current);\n    }\n  }\n\n  if (flags & Visibility) {\n    switch (finishedWork.tag) {\n      case SuspenseComponent:\n        {\n          var newState = finishedWork.memoizedState;\n          var isHidden = newState !== null;\n\n          if (isHidden) {\n            var _current = finishedWork.alternate;\n            var wasHidden = _current !== null && _current.memoizedState !== null;\n\n            if (!wasHidden) {\n              // TODO: Move to passive phase\n              markCommitTimeOfFallback();\n            }\n          }\n\n          break;\n        }\n\n      case OffscreenComponent:\n        {\n          var _newState = finishedWork.memoizedState;\n\n          var _isHidden = _newState !== null;\n\n          var _current2 = finishedWork.alternate;\n\n          var _wasHidden = _current2 !== null && _current2.memoizedState !== null;\n\n          var offscreenBoundary = finishedWork;\n\n          {\n            // TODO: This needs to run whenever there's an insertion or update\n            // inside a hidden Offscreen tree.\n            hideOrUnhideAllChildren(offscreenBoundary, _isHidden);\n          }\n        }\n    }\n  } // The following switch statement is only concerned about placement,\n  // updates, and deletions. To avoid needing to add a case for every possible\n  // bitmap value, we remove the secondary effects from the effect tag and\n  // switch on that value.\n\n\n  var primaryFlags = flags & (Placement | Update | Hydrating);\n\n   switch (primaryFlags) {\n    case Placement:\n      {\n        commitPlacement(finishedWork); // Clear the \"placement\" from effect tag so that we know that this is\n        // inserted, before any life-cycles like componentDidMount gets called.\n        // TODO: findDOMNode doesn't rely on this any more but isMounted does\n        // and isMounted is deprecated anyway so we should be able to kill this.\n\n        finishedWork.flags &= ~Placement;\n        break;\n      }\n\n    case PlacementAndUpdate:\n      {\n        // Placement\n        commitPlacement(finishedWork); // Clear the \"placement\" from effect tag so that we know that this is\n        // inserted, before any life-cycles like componentDidMount gets called.\n\n        finishedWork.flags &= ~Placement; // Update\n\n        var _current3 = finishedWork.alternate;\n        commitWork(_current3, finishedWork);\n        break;\n      }\n\n    case Hydrating:\n      {\n        finishedWork.flags &= ~Hydrating;\n        break;\n      }\n\n    case HydratingAndUpdate:\n      {\n        finishedWork.flags &= ~Hydrating; // Update\n\n        var _current4 = finishedWork.alternate;\n        commitWork(_current4, finishedWork);\n        break;\n      }\n\n    case Update:\n      {\n        var _current5 = finishedWork.alternate;\n        commitWork(_current5, finishedWork);\n        break;\n      }\n  }\n}\n\nfunction commitLayoutEffects(finishedWork, root, committedLanes) {\n  nextEffect = finishedWork;\n  commitLayoutEffects_begin(finishedWork, root, committedLanes);\n}\n\nfunction commitLayoutEffects_begin(subtreeRoot, root, committedLanes) {\n  // Suspense layout effects semantics don't change for legacy roots.\n  var isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;\n\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    var firstChild = fiber.child;\n\n    if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {\n      ensureCorrectReturnPointer(firstChild, fiber);\n      nextEffect = firstChild;\n    } else {\n      commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);\n    }\n  }\n}\n\nfunction commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n\n    if ((fiber.flags & LayoutMask) !== NoFlags) {\n      var current = fiber.alternate;\n      setCurrentFiber(fiber);\n\n      try {\n        commitLayoutEffectOnFiber(root, current, fiber, committedLanes);\n      } catch (error) {\n        reportUncaughtErrorInDEV(error);\n        captureCommitPhaseError(fiber, fiber.return, error);\n      }\n\n      resetCurrentFiber();\n    }\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    var sibling = fiber.sibling;\n\n    if (sibling !== null) {\n      ensureCorrectReturnPointer(sibling, fiber.return);\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitPassiveMountEffects(root, finishedWork) {\n  nextEffect = finishedWork;\n  commitPassiveMountEffects_begin(finishedWork, root);\n}\n\nfunction commitPassiveMountEffects_begin(subtreeRoot, root) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    var firstChild = fiber.child;\n\n    if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {\n      ensureCorrectReturnPointer(firstChild, fiber);\n      nextEffect = firstChild;\n    } else {\n      commitPassiveMountEffects_complete(subtreeRoot, root);\n    }\n  }\n}\n\nfunction commitPassiveMountEffects_complete(subtreeRoot, root) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n\n    if ((fiber.flags & Passive) !== NoFlags) {\n      setCurrentFiber(fiber);\n\n      try {\n        commitPassiveMountOnFiber(root, fiber);\n      } catch (error) {\n        reportUncaughtErrorInDEV(error);\n        captureCommitPhaseError(fiber, fiber.return, error);\n      }\n\n      resetCurrentFiber();\n    }\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    var sibling = fiber.sibling;\n\n    if (sibling !== null) {\n      ensureCorrectReturnPointer(sibling, fiber.return);\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitPassiveMountOnFiber(finishedRoot, finishedWork) {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent:\n      {\n        if ( finishedWork.mode & ProfileMode) {\n          startPassiveEffectTimer();\n\n          try {\n            commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);\n          } finally {\n            recordPassiveEffectDuration(finishedWork);\n          }\n        } else {\n          commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);\n        }\n\n        break;\n      }\n  }\n}\n\nfunction commitPassiveUnmountEffects(firstChild) {\n  nextEffect = firstChild;\n  commitPassiveUnmountEffects_begin();\n}\n\nfunction commitPassiveUnmountEffects_begin() {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    var child = fiber.child;\n\n    if ((nextEffect.flags & ChildDeletion) !== NoFlags) {\n      var deletions = fiber.deletions;\n\n      if (deletions !== null) {\n        for (var i = 0; i < deletions.length; i++) {\n          var fiberToDelete = deletions[i];\n          nextEffect = fiberToDelete;\n          commitPassiveUnmountEffectsInsideOfDeletedTree_begin(fiberToDelete, fiber);\n        }\n\n        {\n          // A fiber was deleted from this parent fiber, but it's still part of\n          // the previous (alternate) parent fiber's list of children. Because\n          // children are a linked list, an earlier sibling that's still alive\n          // will be connected to the deleted fiber via its `alternate`:\n          //\n          //   live fiber\n          //   --alternate--> previous live fiber\n          //   --sibling--> deleted fiber\n          //\n          // We can't disconnect `alternate` on nodes that haven't been deleted\n          // yet, but we can disconnect the `sibling` and `child` pointers.\n          var previousFiber = fiber.alternate;\n\n          if (previousFiber !== null) {\n            var detachedChild = previousFiber.child;\n\n            if (detachedChild !== null) {\n              previousFiber.child = null;\n\n              do {\n                var detachedSibling = detachedChild.sibling;\n                detachedChild.sibling = null;\n                detachedChild = detachedSibling;\n              } while (detachedChild !== null);\n            }\n          }\n        }\n\n        nextEffect = fiber;\n      }\n    }\n\n    if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {\n      ensureCorrectReturnPointer(child, fiber);\n      nextEffect = child;\n    } else {\n      commitPassiveUnmountEffects_complete();\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffects_complete() {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n\n    if ((fiber.flags & Passive) !== NoFlags) {\n      setCurrentFiber(fiber);\n      commitPassiveUnmountOnFiber(fiber);\n      resetCurrentFiber();\n    }\n\n    var sibling = fiber.sibling;\n\n    if (sibling !== null) {\n      ensureCorrectReturnPointer(sibling, fiber.return);\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitPassiveUnmountOnFiber(finishedWork) {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent:\n      {\n        if ( finishedWork.mode & ProfileMode) {\n          startPassiveEffectTimer();\n          commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);\n          recordPassiveEffectDuration(finishedWork);\n        } else {\n          commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);\n        }\n\n        break;\n      }\n  }\n}\n\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot, nearestMountedAncestor) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect; // Deletion effects fire in parent -> child order\n    // TODO: Check if fiber has a PassiveStatic flag\n\n    setCurrentFiber(fiber);\n    commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);\n    resetCurrentFiber();\n    var child = fiber.child; // TODO: Only traverse subtree if it has a PassiveStatic flag. (But, if we\n    // do this, still need to handle `deletedTreeCleanUpLevel` correctly.)\n\n    if (child !== null) {\n      ensureCorrectReturnPointer(child, fiber);\n      nextEffect = child;\n    } else {\n      commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot);\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot) {\n  while (nextEffect !== null) {\n    var fiber = nextEffect;\n    var sibling = fiber.sibling;\n    var returnFiber = fiber.return;\n\n    {\n      // Recursively traverse the entire deleted tree and clean up fiber fields.\n      // This is more aggressive than ideal, and the long term goal is to only\n      // have to detach the deleted tree at the root.\n      detachFiberAfterEffects(fiber);\n\n      if (fiber === deletedSubtreeRoot) {\n        nextEffect = null;\n        return;\n      }\n    }\n\n    if (sibling !== null) {\n      ensureCorrectReturnPointer(sibling, returnFiber);\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = returnFiber;\n  }\n}\n\nfunction commitPassiveUnmountInsideDeletedTreeOnFiber(current, nearestMountedAncestor) {\n  switch (current.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent:\n      {\n        if ( current.mode & ProfileMode) {\n          startPassiveEffectTimer();\n          commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);\n          recordPassiveEffectDuration(current);\n        } else {\n          commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);\n        }\n\n        break;\n      }\n  }\n}\n\nvar didWarnWrongReturnPointer = false;\n\nfunction ensureCorrectReturnPointer(fiber, expectedReturnFiber) {\n  {\n    if (!didWarnWrongReturnPointer && fiber.return !== expectedReturnFiber) {\n      didWarnWrongReturnPointer = true;\n\n      error('Internal React error: Return pointer is inconsistent ' + 'with parent.');\n    }\n  } // TODO: Remove this assignment once we're confident that it won't break\n  // anything, by checking the warning logs for the above invariant\n\n\n  fiber.return = expectedReturnFiber;\n} // TODO: Reuse reappearLayoutEffects traversal here?\n\nvar COMPONENT_TYPE = 0;\nvar HAS_PSEUDO_CLASS_TYPE = 1;\nvar ROLE_TYPE = 2;\nvar TEST_NAME_TYPE = 3;\nvar TEXT_TYPE = 4;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  var symbolFor = Symbol.for;\n  COMPONENT_TYPE = symbolFor('selector.component');\n  HAS_PSEUDO_CLASS_TYPE = symbolFor('selector.has_pseudo_class');\n  ROLE_TYPE = symbolFor('selector.role');\n  TEST_NAME_TYPE = symbolFor('selector.test_id');\n  TEXT_TYPE = symbolFor('selector.text');\n}\n\nvar ReactCurrentActQueue = ReactSharedInternals.ReactCurrentActQueue;\nfunction isLegacyActEnvironment(fiber) {\n  {\n    // Legacy mode. We preserve the behavior of React 17's act. It assumes an\n    // act environment whenever `jest` is defined, but you can still turn off\n    // spurious warnings by setting IS_REACT_ACT_ENVIRONMENT explicitly\n    // to false.\n    var isReactActEnvironmentGlobal = // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global\n    typeof IS_REACT_ACT_ENVIRONMENT !== 'undefined' ? IS_REACT_ACT_ENVIRONMENT : undefined; // $FlowExpectedError - Flow doesn't know about jest\n\n    var jestIsDefined = typeof jest !== 'undefined';\n    return  jestIsDefined && isReactActEnvironmentGlobal !== false;\n  }\n}\nfunction isConcurrentActEnvironment() {\n  {\n    var isReactActEnvironmentGlobal = // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global\n    typeof IS_REACT_ACT_ENVIRONMENT !== 'undefined' ? IS_REACT_ACT_ENVIRONMENT : undefined;\n\n    if (!isReactActEnvironmentGlobal && ReactCurrentActQueue.current !== null) {\n      // TODO: Include link to relevant documentation page.\n      error('The current testing environment is not configured to support ' + 'act(...)');\n    }\n\n    return isReactActEnvironmentGlobal;\n  }\n}\n\nvar ceil = Math.ceil;\nvar ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher,\n    ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,\n    ReactCurrentBatchConfig$2 = ReactSharedInternals.ReactCurrentBatchConfig,\n    ReactCurrentActQueue$1 = ReactSharedInternals.ReactCurrentActQueue;\nvar NoContext =\n/*             */\n0;\nvar BatchedContext =\n/*               */\n1;\nvar RenderContext =\n/*                */\n2;\nvar CommitContext =\n/*                */\n4;\nvar RootInProgress = 0;\nvar RootFatalErrored = 1;\nvar RootErrored = 2;\nvar RootSuspended = 3;\nvar RootSuspendedWithDelay = 4;\nvar RootCompleted = 5;\nvar RootDidNotComplete = 6; // Describes where we are in the React execution stack\n\nvar executionContext = NoContext; // The root we're working on\n\nvar workInProgressRoot = null; // The fiber we're working on\n\nvar workInProgress = null; // The lanes we're rendering\n\nvar workInProgressRootRenderLanes = NoLanes; // Stack that allows components to change the render lanes for its subtree\n// This is a superset of the lanes we started working on at the root. The only\n// case where it's different from `workInProgressRootRenderLanes` is when we\n// enter a subtree that is hidden and needs to be unhidden: Suspense and\n// Offscreen component.\n//\n// Most things in the work loop should deal with workInProgressRootRenderLanes.\n// Most things in begin/complete phases should deal with subtreeRenderLanes.\n\nvar subtreeRenderLanes = NoLanes;\nvar subtreeRenderLanesCursor = createCursor(NoLanes); // Whether to root completed, errored, suspended, etc.\n\nvar workInProgressRootExitStatus = RootInProgress; // A fatal error, if one is thrown\n\nvar workInProgressRootFatalError = null; // \"Included\" lanes refer to lanes that were worked on during this render. It's\n// slightly different than `renderLanes` because `renderLanes` can change as you\n// enter and exit an Offscreen tree. This value is the combination of all render\n// lanes for the entire render phase.\n\nvar workInProgressRootIncludedLanes = NoLanes; // The work left over by components that were visited during this render. Only\n// includes unprocessed updates, not work in bailed out children.\n\nvar workInProgressRootSkippedLanes = NoLanes; // Lanes that were updated (in an interleaved event) during this render.\n\nvar workInProgressRootInterleavedUpdatedLanes = NoLanes; // Lanes that were updated during the render phase (*not* an interleaved event).\n\nvar workInProgressRootPingedLanes = NoLanes; // Errors that are thrown during the render phase.\n\nvar workInProgressRootConcurrentErrors = null; // These are errors that we recovered from without surfacing them to the UI.\n// We will log them once the tree commits.\n\nvar workInProgressRootRecoverableErrors = null; // The most recent time we committed a fallback. This lets us ensure a train\n// model where we don't commit new loading states in too quick succession.\n\nvar globalMostRecentFallbackTime = 0;\nvar FALLBACK_THROTTLE_MS = 500; // The absolute time for when we should start giving up on rendering\n// more and prefer CPU suspense heuristics instead.\n\nvar workInProgressRootRenderTargetTime = Infinity; // How long a render is supposed to take before we start following CPU\n// suspense heuristics and opt out of rendering more content.\n\nvar RENDER_TIMEOUT_MS = 500;\n\nfunction resetRenderTimer() {\n  workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;\n}\n\nfunction getRenderTargetTime() {\n  return workInProgressRootRenderTargetTime;\n}\nvar hasUncaughtError = false;\nvar firstUncaughtError = null;\nvar legacyErrorBoundariesThatAlreadyFailed = null; // Only used when enableProfilerNestedUpdateScheduledHook is true;\nvar rootDoesHavePassiveEffects = false;\nvar rootWithPendingPassiveEffects = null;\nvar pendingPassiveEffectsLanes = NoLanes;\nvar pendingPassiveProfilerEffects = [];\n\nvar NESTED_UPDATE_LIMIT = 50;\nvar nestedUpdateCount = 0;\nvar rootWithNestedUpdates = null;\nvar NESTED_PASSIVE_UPDATE_LIMIT = 50;\nvar nestedPassiveUpdateCount = 0; // If two updates are scheduled within the same event, we should treat their\n// event times as simultaneous, even if the actual clock time has advanced\n// between the first and second call.\n\nvar currentEventTime = NoTimestamp;\nvar currentEventTransitionLane = NoLanes;\nfunction getWorkInProgressRoot() {\n  return workInProgressRoot;\n}\nfunction requestEventTime() {\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    // We're inside React, so it's fine to read the actual time.\n    return now();\n  } // We're not inside React, so we may be in the middle of a browser event.\n\n\n  if (currentEventTime !== NoTimestamp) {\n    // Use the same start time for all updates until we enter React again.\n    return currentEventTime;\n  } // This is the first update since React yielded. Compute a new start time.\n\n\n  currentEventTime = now();\n  return currentEventTime;\n}\nfunction requestUpdateLane(fiber) {\n  // Special cases\n  var mode = fiber.mode;\n\n  if ((mode & ConcurrentMode) === NoMode) {\n    return SyncLane;\n  } else if ( (executionContext & RenderContext) !== NoContext && workInProgressRootRenderLanes !== NoLanes) {\n    // This is a render phase update. These are not officially supported. The\n    // old behavior is to give this the same \"thread\" (lanes) as\n    // whatever is currently rendering. So if you call `setState` on a component\n    // that happens later in the same render, it will flush. Ideally, we want to\n    // remove the special case and treat them as if they came from an\n    // interleaved event. Regardless, this pattern is not officially supported.\n    // This behavior is only a fallback. The flag only exists until we can roll\n    // out the setState warning, since existing code might accidentally rely on\n    // the current behavior.\n    return pickArbitraryLane(workInProgressRootRenderLanes);\n  }\n\n  var isTransition = requestCurrentTransition() !== NoTransition;\n\n  if (isTransition) {\n    if ( ReactCurrentBatchConfig$2.transition !== null) {\n      var transition = ReactCurrentBatchConfig$2.transition;\n\n      if (!transition._updatedFibers) {\n        transition._updatedFibers = new Set();\n      }\n\n      transition._updatedFibers.add(fiber);\n    } // The algorithm for assigning an update to a lane should be stable for all\n    // updates at the same priority within the same event. To do this, the\n    // inputs to the algorithm must be the same.\n    //\n    // The trick we use is to cache the first of each of these inputs within an\n    // event. Then reset the cached values once we can be sure the event is\n    // over. Our heuristic for that is whenever we enter a concurrent work loop.\n\n\n    if (currentEventTransitionLane === NoLane) {\n      // All transitions within the same event are assigned the same lane.\n      currentEventTransitionLane = claimNextTransitionLane();\n    }\n\n    return currentEventTransitionLane;\n  } // Updates originating inside certain React methods, like flushSync, have\n  // their priority set by tracking it with a context variable.\n  //\n  // The opaque type returned by the host config is internally a lane, so we can\n  // use that directly.\n  // TODO: Move this type conversion to the event priority module.\n\n\n  var updateLane = getCurrentUpdatePriority();\n\n  if (updateLane !== NoLane) {\n    return updateLane;\n  } // This update originated outside React. Ask the host environment for an\n  // appropriate priority, based on the type of event.\n  //\n  // The opaque type returned by the host config is internally a lane, so we can\n  // use that directly.\n  // TODO: Move this type conversion to the event priority module.\n\n\n  var eventLane = getCurrentEventPriority();\n  return eventLane;\n}\n\nfunction requestRetryLane(fiber) {\n  // This is a fork of `requestUpdateLane` designed specifically for Suspense\n  // \"retries\" — a special update that attempts to flip a Suspense boundary\n  // from its placeholder state to its primary/resolved state.\n  // Special cases\n  var mode = fiber.mode;\n\n  if ((mode & ConcurrentMode) === NoMode) {\n    return SyncLane;\n  }\n\n  return claimNextRetryLane();\n}\n\nfunction scheduleUpdateOnFiber(fiber, lane, eventTime) {\n  checkForNestedUpdates();\n  var root = markUpdateLaneFromFiberToRoot(fiber, lane);\n\n  if (root === null) {\n    return null;\n  } // Mark that the root has a pending update.\n\n\n  markRootUpdated(root, lane, eventTime);\n\n  if ((executionContext & RenderContext) !== NoLanes && root === workInProgressRoot) {\n    // This update was dispatched during the render phase. This is a mistake\n    // if the update originates from user space (with the exception of local\n    // hook updates, which are handled differently and don't reach this\n    // function), but there are some internal React features that use this as\n    // an implementation detail, like selective hydration.\n    warnAboutRenderPhaseUpdatesInDEV(fiber); // Track lanes that were updated during the render phase\n  } else {\n\n    warnIfUpdatesNotWrappedWithActDEV(fiber);\n\n    if (root === workInProgressRoot) {\n      // TODO: Consolidate with `isInterleavedUpdate` check\n      // Received an update to a tree that's in the middle of rendering. Mark\n      // that there was an interleaved update work on this root. Unless the\n      // `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render\n      // phase update. In that case, we don't treat render phase updates as if\n      // they were interleaved, for backwards compat reasons.\n      if ( (executionContext & RenderContext) === NoContext) {\n        workInProgressRootInterleavedUpdatedLanes = mergeLanes(workInProgressRootInterleavedUpdatedLanes, lane);\n      }\n\n      if (workInProgressRootExitStatus === RootSuspendedWithDelay) {\n        // The root already suspended with a delay, which means this render\n        // definitely won't finish. Since we have a new update, let's mark it as\n        // suspended now, right before marking the incoming update. This has the\n        // effect of interrupting the current render and switching to the update.\n        // TODO: Make sure this doesn't override pings that happen while we've\n        // already started rendering.\n        markRootSuspended$1(root, workInProgressRootRenderLanes);\n      }\n    }\n\n    ensureRootIsScheduled(root, eventTime);\n\n    if (lane === SyncLane && executionContext === NoContext && (fiber.mode & ConcurrentMode) === NoMode && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.\n    !( ReactCurrentActQueue$1.isBatchingLegacy)) {\n      // Flush the synchronous work now, unless we're already working or inside\n      // a batch. This is intentionally inside scheduleUpdateOnFiber instead of\n      // scheduleCallbackForFiber to preserve the ability to schedule a callback\n      // without immediately flushing it. We only do this for user-initiated\n      // updates, to preserve historical behavior of legacy mode.\n      resetRenderTimer();\n      flushSyncCallbacksOnlyInLegacyMode();\n    }\n  }\n\n  return root;\n}\n// work without treating it as a typical update that originates from an event;\n// e.g. retrying a Suspense boundary isn't an update, but it does schedule work\n// on a fiber.\n\nfunction markUpdateLaneFromFiberToRoot(sourceFiber, lane) {\n  // Update the source fiber's lanes\n  sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);\n  var alternate = sourceFiber.alternate;\n\n  if (alternate !== null) {\n    alternate.lanes = mergeLanes(alternate.lanes, lane);\n  }\n\n  {\n    if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) {\n      warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n    }\n  } // Walk the parent path to the root and update the child lanes.\n\n\n  var node = sourceFiber;\n  var parent = sourceFiber.return;\n\n  while (parent !== null) {\n    parent.childLanes = mergeLanes(parent.childLanes, lane);\n    alternate = parent.alternate;\n\n    if (alternate !== null) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, lane);\n    } else {\n      {\n        if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {\n          warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n        }\n      }\n    }\n\n    node = parent;\n    parent = parent.return;\n  }\n\n  if (node.tag === HostRoot) {\n    var root = node.stateNode;\n    return root;\n  } else {\n    return null;\n  }\n}\n\nfunction isInterleavedUpdate(fiber, lane) {\n  return (// TODO: Optimize slightly by comparing to root that fiber belongs to.\n    // Requires some refactoring. Not a big deal though since it's rare for\n    // concurrent apps to have more than a single root.\n    workInProgressRoot !== null && (fiber.mode & ConcurrentMode) !== NoMode && ( // If this is a render phase update (i.e. UNSAFE_componentWillReceiveProps),\n    // then don't treat this as an interleaved update. This pattern is\n    // accompanied by a warning but we haven't fully deprecated it yet. We can\n    // remove once the deferRenderPhaseUpdateToNextBatch flag is enabled.\n     (executionContext & RenderContext) === NoContext)\n  );\n} // Use this function to schedule a task for a root. There's only one task per\n// root; if a task was already scheduled, we'll check to make sure the priority\n// of the existing task is the same as the priority of the next level that the\n// root has work on. This function is called on every update, and right before\n// exiting a task.\n\nfunction ensureRootIsScheduled(root, currentTime) {\n  var existingCallbackNode = root.callbackNode; // Check if any lanes are being starved by other work. If so, mark them as\n  // expired so we know to work on those next.\n\n  markStarvedLanesAsExpired(root, currentTime); // Determine the next lanes to work on, and their priority.\n\n  var nextLanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);\n\n  if (nextLanes === NoLanes) {\n    // Special case: There's nothing to work on.\n    if (existingCallbackNode !== null) {\n      cancelCallback$1(existingCallbackNode);\n    }\n\n    root.callbackNode = null;\n    root.callbackPriority = NoLane;\n    return;\n  } // We use the highest priority lane to represent the priority of the callback.\n\n\n  var newCallbackPriority = getHighestPriorityLane(nextLanes); // Check if there's an existing task. We may be able to reuse it.\n\n  var existingCallbackPriority = root.callbackPriority;\n\n  if (existingCallbackPriority === newCallbackPriority && // Special case related to `act`. If the currently scheduled task is a\n  // Scheduler task, rather than an `act` task, cancel it and re-scheduled\n  // on the `act` queue.\n  !( ReactCurrentActQueue$1.current !== null && existingCallbackNode !== fakeActCallbackNode)) {\n    {\n      // If we're going to re-use an existing task, it needs to exist.\n      // Assume that discrete update microtasks are non-cancellable and null.\n      // TODO: Temporary until we confirm this warning is not fired.\n      if (existingCallbackNode == null && existingCallbackPriority !== SyncLane) {\n        error('Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.');\n      }\n    } // The priority hasn't changed. We can reuse the existing task. Exit.\n\n\n    return;\n  }\n\n  if (existingCallbackNode != null) {\n    // Cancel the existing callback. We'll schedule a new one below.\n    cancelCallback$1(existingCallbackNode);\n  } // Schedule a new callback.\n\n\n  var newCallbackNode;\n\n  if (newCallbackPriority === SyncLane) {\n    // Special case: Sync React callbacks are scheduled on a special\n    // internal queue\n    if (root.tag === LegacyRoot) {\n      if ( ReactCurrentActQueue$1.isBatchingLegacy !== null) {\n        ReactCurrentActQueue$1.didScheduleLegacyUpdate = true;\n      }\n\n      scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root));\n    } else {\n      scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));\n    }\n\n    {\n      // Flush the queue in an Immediate task.\n      scheduleCallback$1(ImmediatePriority, flushSyncCallbacks);\n    }\n\n    newCallbackNode = null;\n  } else {\n    var schedulerPriorityLevel;\n\n    switch (lanesToEventPriority(nextLanes)) {\n      case DiscreteEventPriority:\n        schedulerPriorityLevel = ImmediatePriority;\n        break;\n\n      case ContinuousEventPriority:\n        schedulerPriorityLevel = UserBlockingPriority;\n        break;\n\n      case DefaultEventPriority:\n        schedulerPriorityLevel = NormalPriority;\n        break;\n\n      case IdleEventPriority:\n        schedulerPriorityLevel = IdlePriority;\n        break;\n\n      default:\n        schedulerPriorityLevel = NormalPriority;\n        break;\n    }\n\n    newCallbackNode = scheduleCallback$1(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root));\n  }\n\n  root.callbackPriority = newCallbackPriority;\n  root.callbackNode = newCallbackNode;\n} // This is the entry point for every concurrent task, i.e. anything that\n// goes through Scheduler.\n\n\nfunction performConcurrentWorkOnRoot(root, didTimeout) {\n  {\n    resetNestedUpdateFlag();\n  } // Since we know we're in a React event, we can clear the current\n  // event time. The next update will compute a new event time.\n\n\n  currentEventTime = NoTimestamp;\n  currentEventTransitionLane = NoLanes;\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error('Should not already be working.');\n  } // Flush any pending passive effects before deciding which lanes to work on,\n  // in case they schedule additional work.\n\n\n  var originalCallbackNode = root.callbackNode;\n  var didFlushPassiveEffects = flushPassiveEffects();\n\n  if (didFlushPassiveEffects) {\n    // Something in the passive effect phase may have canceled the current task.\n    // Check if the task node for this root was changed.\n    if (root.callbackNode !== originalCallbackNode) {\n      // The current task was canceled. Exit. We don't need to call\n      // `ensureRootIsScheduled` because the check above implies either that\n      // there's a new task, or that there's no remaining work on this root.\n      return null;\n    }\n  } // Determine the next lanes to work on, using the fields stored\n  // on the root.\n\n\n  var lanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);\n\n  if (lanes === NoLanes) {\n    // Defensive coding. This is never expected to happen.\n    return null;\n  } // We disable time-slicing in some cases: if the work has been CPU-bound\n  // for too long (\"expired\" work, to prevent starvation), or we're in\n  // sync-updates-by-default mode.\n  // TODO: We only check `didTimeout` defensively, to account for a Scheduler\n  // bug we're still investigating. Once the bug in Scheduler is fixed,\n  // we can remove this, since we track expiration ourselves.\n\n\n  var shouldTimeSlice = !includesBlockingLane(root, lanes) && !includesExpiredLane(root, lanes) && ( !didTimeout);\n  var exitStatus = shouldTimeSlice ? renderRootConcurrent(root, lanes) : renderRootSync(root, lanes);\n\n  if (exitStatus !== RootInProgress) {\n    if (exitStatus === RootErrored) {\n      // If something threw an error, try rendering one more time. We'll\n      // render synchronously to block concurrent data mutations, and we'll\n      // includes all pending updates are included. If it still fails after\n      // the second attempt, we'll give up and commit the resulting tree.\n      var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n\n      if (errorRetryLanes !== NoLanes) {\n        lanes = errorRetryLanes;\n        exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\n      }\n    }\n\n    if (exitStatus === RootFatalErrored) {\n      var fatalError = workInProgressRootFatalError;\n      prepareFreshStack(root, NoLanes);\n      markRootSuspended$1(root, lanes);\n      ensureRootIsScheduled(root, now());\n      throw fatalError;\n    }\n\n    if (exitStatus === RootDidNotComplete) {\n      // The render unwound without completing the tree. This happens in special\n      // cases where need to exit the current render without producing a\n      // consistent tree or committing.\n      //\n      // This should only happen during a concurrent render, not a discrete or\n      // synchronous update. We should have already checked for this when we\n      // unwound the stack.\n      markRootSuspended$1(root, lanes);\n    } else {\n      // The render completed.\n      // Check if this render may have yielded to a concurrent event, and if so,\n      // confirm that any newly rendered stores are consistent.\n      // TODO: It's possible that even a concurrent render may never have yielded\n      // to the main thread, if it was fast enough, or if it expired. We could\n      // skip the consistency check in that case, too.\n      var renderWasConcurrent = !includesBlockingLane(root, lanes);\n      var finishedWork = root.current.alternate;\n\n      if (renderWasConcurrent && !isRenderConsistentWithExternalStores(finishedWork)) {\n        // A store was mutated in an interleaved event. Render again,\n        // synchronously, to block further mutations.\n        exitStatus = renderRootSync(root, lanes); // We need to check again if something threw\n\n        if (exitStatus === RootErrored) {\n          var _errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n\n          if (_errorRetryLanes !== NoLanes) {\n            lanes = _errorRetryLanes;\n            exitStatus = recoverFromConcurrentError(root, _errorRetryLanes); // We assume the tree is now consistent because we didn't yield to any\n            // concurrent events.\n          }\n        }\n\n        if (exitStatus === RootFatalErrored) {\n          var _fatalError = workInProgressRootFatalError;\n          prepareFreshStack(root, NoLanes);\n          markRootSuspended$1(root, lanes);\n          ensureRootIsScheduled(root, now());\n          throw _fatalError;\n        }\n      } // We now have a consistent tree. The next step is either to commit it,\n      // or, if something suspended, wait to commit it after a timeout.\n\n\n      root.finishedWork = finishedWork;\n      root.finishedLanes = lanes;\n      finishConcurrentRender(root, exitStatus, lanes);\n    }\n  }\n\n  ensureRootIsScheduled(root, now());\n\n  if (root.callbackNode === originalCallbackNode) {\n    // The task node scheduled for this root is the same one that's\n    // currently executed. Need to return a continuation.\n    return performConcurrentWorkOnRoot.bind(null, root);\n  }\n\n  return null;\n}\n\nfunction recoverFromConcurrentError(root, errorRetryLanes) {\n  // If an error occurred during hydration, discard server response and fall\n  // back to client side render.\n  // Before rendering again, save the errors from the previous attempt.\n  var errorsFromFirstAttempt = workInProgressRootConcurrentErrors;\n\n  if (isRootDehydrated(root)) {\n    // The shell failed to hydrate. Set a flag to force a client rendering\n    // during the next attempt. To do this, we call prepareFreshStack now\n    // to create the root work-in-progress fiber. This is a bit weird in terms\n    // of factoring, because it relies on renderRootSync not calling\n    // prepareFreshStack again in the call below, which happens because the\n    // root and lanes haven't changed.\n    //\n    // TODO: I think what we should do is set ForceClientRender inside\n    // throwException, like we do for nested Suspense boundaries. The reason\n    // it's here instead is so we can switch to the synchronous work loop, too.\n    // Something to consider for a future refactor.\n    var rootWorkInProgress = prepareFreshStack(root, errorRetryLanes);\n    rootWorkInProgress.flags |= ForceClientRender;\n\n    {\n      errorHydratingContainer(root.containerInfo);\n    }\n  }\n\n  var exitStatus = renderRootSync(root, errorRetryLanes);\n\n  if (exitStatus !== RootErrored) {\n    // Successfully finished rendering on retry\n    // The errors from the failed first attempt have been recovered. Add\n    // them to the collection of recoverable errors. We'll log them in the\n    // commit phase.\n    var errorsFromSecondAttempt = workInProgressRootRecoverableErrors;\n    workInProgressRootRecoverableErrors = errorsFromFirstAttempt; // The errors from the second attempt should be queued after the errors\n    // from the first attempt, to preserve the causal sequence.\n\n    if (errorsFromSecondAttempt !== null) {\n      queueRecoverableErrors(errorsFromSecondAttempt);\n    }\n  }\n\n  return exitStatus;\n}\n\nfunction queueRecoverableErrors(errors) {\n  if (workInProgressRootRecoverableErrors === null) {\n    workInProgressRootRecoverableErrors = errors;\n  } else {\n    workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, errors);\n  }\n}\n\nfunction finishConcurrentRender(root, exitStatus, lanes) {\n  switch (exitStatus) {\n    case RootInProgress:\n    case RootFatalErrored:\n      {\n        throw new Error('Root did not complete. This is a bug in React.');\n      }\n    // Flow knows about invariant, so it complains if I add a break\n    // statement, but eslint doesn't know about invariant, so it complains\n    // if I do. eslint-disable-next-line no-fallthrough\n\n    case RootErrored:\n      {\n        // We should have already attempted to retry this tree. If we reached\n        // this point, it errored again. Commit it.\n        commitRoot(root, workInProgressRootRecoverableErrors);\n        break;\n      }\n\n    case RootSuspended:\n      {\n        markRootSuspended$1(root, lanes); // We have an acceptable loading state. We need to figure out if we\n        // should immediately commit it or wait a bit.\n\n        if (includesOnlyRetries(lanes) && // do not delay if we're inside an act() scope\n        !shouldForceFlushFallbacksInDEV()) {\n          // This render only included retries, no updates. Throttle committing\n          // retries so that we don't show too many loading states too quickly.\n          var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(); // Don't bother with a very short suspense time.\n\n          if (msUntilTimeout > 10) {\n            var nextLanes = getNextLanes(root, NoLanes);\n\n            if (nextLanes !== NoLanes) {\n              // There's additional work on this root.\n              break;\n            }\n\n            var suspendedLanes = root.suspendedLanes;\n\n            if (!isSubsetOfLanes(suspendedLanes, lanes)) {\n              // We should prefer to render the fallback of at the last\n              // suspended level. Ping the last suspended level to try\n              // rendering it again.\n              // FIXME: What if the suspended lanes are Idle? Should not restart.\n              var eventTime = requestEventTime();\n              markRootPinged(root, suspendedLanes);\n              break;\n            } // The render is suspended, it hasn't timed out, and there's no\n            // lower priority work to do. Instead of committing the fallback\n            // immediately, wait for more data to arrive.\n\n\n            root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors), msUntilTimeout);\n            break;\n          }\n        } // The work expired. Commit immediately.\n\n\n        commitRoot(root, workInProgressRootRecoverableErrors);\n        break;\n      }\n\n    case RootSuspendedWithDelay:\n      {\n        markRootSuspended$1(root, lanes);\n\n        if (includesOnlyTransitions(lanes)) {\n          // This is a transition, so we should exit without committing a\n          // placeholder and without scheduling a timeout. Delay indefinitely\n          // until we receive more data.\n          break;\n        }\n\n        if (!shouldForceFlushFallbacksInDEV()) {\n          // This is not a transition, but we did trigger an avoided state.\n          // Schedule a placeholder to display after a short delay, using the Just\n          // Noticeable Difference.\n          // TODO: Is the JND optimization worth the added complexity? If this is\n          // the only reason we track the event time, then probably not.\n          // Consider removing.\n          var mostRecentEventTime = getMostRecentEventTime(root, lanes);\n          var eventTimeMs = mostRecentEventTime;\n          var timeElapsedMs = now() - eventTimeMs;\n\n          var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs; // Don't bother with a very short suspense time.\n\n\n          if (_msUntilTimeout > 10) {\n            // Instead of committing the fallback immediately, wait for more data\n            // to arrive.\n            root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors), _msUntilTimeout);\n            break;\n          }\n        } // Commit the placeholder.\n\n\n        commitRoot(root, workInProgressRootRecoverableErrors);\n        break;\n      }\n\n    case RootCompleted:\n      {\n        // The work completed. Ready to commit.\n        commitRoot(root, workInProgressRootRecoverableErrors);\n        break;\n      }\n\n    default:\n      {\n        throw new Error('Unknown root exit status.');\n      }\n  }\n}\n\nfunction isRenderConsistentWithExternalStores(finishedWork) {\n  // Search the rendered tree for external store reads, and check whether the\n  // stores were mutated in a concurrent event. Intentionally using an iterative\n  // loop instead of recursion so we can exit early.\n  var node = finishedWork;\n\n  while (true) {\n    if (node.flags & StoreConsistency) {\n      var updateQueue = node.updateQueue;\n\n      if (updateQueue !== null) {\n        var checks = updateQueue.stores;\n\n        if (checks !== null) {\n          for (var i = 0; i < checks.length; i++) {\n            var check = checks[i];\n            var getSnapshot = check.getSnapshot;\n            var renderedValue = check.value;\n\n            try {\n              if (!objectIs(getSnapshot(), renderedValue)) {\n                // Found an inconsistent store.\n                return false;\n              }\n            } catch (error) {\n              // If `getSnapshot` throws, return `false`. This will schedule\n              // a re-render, and the error will be rethrown during render.\n              return false;\n            }\n          }\n        }\n      }\n    }\n\n    var child = node.child;\n\n    if (node.subtreeFlags & StoreConsistency && child !== null) {\n      child.return = node;\n      node = child;\n      continue;\n    }\n\n    if (node === finishedWork) {\n      return true;\n    }\n\n    while (node.sibling === null) {\n      if (node.return === null || node.return === finishedWork) {\n        return true;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n  } // Flow doesn't know this is unreachable, but eslint does\n  // eslint-disable-next-line no-unreachable\n\n\n  return true;\n}\n\nfunction markRootSuspended$1(root, suspendedLanes) {\n  // When suspending, we should always exclude lanes that were pinged or (more\n  // rarely, since we try to avoid it) updated during the render phase.\n  // TODO: Lol maybe there's a better way to factor this besides this\n  // obnoxiously named function :)\n  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);\n  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootInterleavedUpdatedLanes);\n  markRootSuspended(root, suspendedLanes);\n} // This is the entry point for synchronous tasks that don't go\n// through Scheduler\n\n\nfunction performSyncWorkOnRoot(root) {\n  {\n    syncNestedUpdateFlag();\n  }\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error('Should not already be working.');\n  }\n\n  flushPassiveEffects();\n  var lanes = getNextLanes(root, NoLanes);\n\n  if (!includesSomeLane(lanes, SyncLane)) {\n    // There's no remaining sync work left.\n    ensureRootIsScheduled(root, now());\n    return null;\n  }\n\n  var exitStatus = renderRootSync(root, lanes);\n\n  if (root.tag !== LegacyRoot && exitStatus === RootErrored) {\n    // If something threw an error, try rendering one more time. We'll render\n    // synchronously to block concurrent data mutations, and we'll includes\n    // all pending updates are included. If it still fails after the second\n    // attempt, we'll give up and commit the resulting tree.\n    var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n\n    if (errorRetryLanes !== NoLanes) {\n      lanes = errorRetryLanes;\n      exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\n    }\n  }\n\n  if (exitStatus === RootFatalErrored) {\n    var fatalError = workInProgressRootFatalError;\n    prepareFreshStack(root, NoLanes);\n    markRootSuspended$1(root, lanes);\n    ensureRootIsScheduled(root, now());\n    throw fatalError;\n  }\n\n  if (exitStatus === RootDidNotComplete) {\n    throw new Error('Root did not complete. This is a bug in React.');\n  } // We now have a consistent tree. Because this is a sync render, we\n  // will commit it even if something suspended.\n\n\n  var finishedWork = root.current.alternate;\n  root.finishedWork = finishedWork;\n  root.finishedLanes = lanes;\n  commitRoot(root, workInProgressRootRecoverableErrors); // Before exiting, make sure there's a callback scheduled for the next\n  // pending level.\n\n  ensureRootIsScheduled(root, now());\n  return null;\n}\nfunction batchedUpdates(fn, a) {\n  var prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n\n  try {\n    return fn(a);\n  } finally {\n    executionContext = prevExecutionContext; // If there were legacy sync updates, flush them at the end of the outer\n    // most batchedUpdates-like method.\n\n    if (executionContext === NoContext && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.\n    !( ReactCurrentActQueue$1.isBatchingLegacy)) {\n      resetRenderTimer();\n      flushSyncCallbacksOnlyInLegacyMode();\n    }\n  }\n}\n// Warning, this opts-out of checking the function body.\n\n// eslint-disable-next-line no-redeclare\nfunction flushSync(fn) {\n  // In legacy mode, we flush pending passive effects at the beginning of the\n  // next event, not at the end of the previous one.\n  if (rootWithPendingPassiveEffects !== null && rootWithPendingPassiveEffects.tag === LegacyRoot && (executionContext & (RenderContext | CommitContext)) === NoContext) {\n    flushPassiveEffects();\n  }\n\n  var prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n  var prevTransition = ReactCurrentBatchConfig$2.transition;\n  var previousPriority = getCurrentUpdatePriority();\n\n  try {\n    ReactCurrentBatchConfig$2.transition = null;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n\n    if (fn) {\n      return fn();\n    } else {\n      return undefined;\n    }\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig$2.transition = prevTransition;\n    executionContext = prevExecutionContext; // Flush the immediate callbacks that were scheduled during this batch.\n    // Note that this will happen even if batchedUpdates is higher up\n    // the stack.\n\n    if ((executionContext & (RenderContext | CommitContext)) === NoContext) {\n      flushSyncCallbacks();\n    }\n  }\n}\nfunction pushRenderLanes(fiber, lanes) {\n  push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);\n  subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);\n  workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);\n}\nfunction popRenderLanes(fiber) {\n  subtreeRenderLanes = subtreeRenderLanesCursor.current;\n  pop(subtreeRenderLanesCursor, fiber);\n}\n\nfunction prepareFreshStack(root, lanes) {\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n  var timeoutHandle = root.timeoutHandle;\n\n  if (timeoutHandle !== noTimeout) {\n    // The root previous suspended and scheduled a timeout to commit a fallback\n    // state. Now that we have additional work, cancel the timeout.\n    root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above\n\n    cancelTimeout(timeoutHandle);\n  }\n\n  if (workInProgress !== null) {\n    var interruptedWork = workInProgress.return;\n\n    while (interruptedWork !== null) {\n      var current = interruptedWork.alternate;\n      unwindInterruptedWork(current, interruptedWork);\n      interruptedWork = interruptedWork.return;\n    }\n  }\n\n  workInProgressRoot = root;\n  var rootWorkInProgress = createWorkInProgress(root.current, null);\n  workInProgress = rootWorkInProgress;\n  workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;\n  workInProgressRootExitStatus = RootInProgress;\n  workInProgressRootFatalError = null;\n  workInProgressRootSkippedLanes = NoLanes;\n  workInProgressRootInterleavedUpdatedLanes = NoLanes;\n  workInProgressRootPingedLanes = NoLanes;\n  workInProgressRootConcurrentErrors = null;\n  workInProgressRootRecoverableErrors = null;\n  enqueueInterleavedUpdates();\n\n  {\n    ReactStrictModeWarnings.discardPendingWarnings();\n  }\n\n  return rootWorkInProgress;\n}\n\nfunction handleError(root, thrownValue) {\n  do {\n    var erroredWork = workInProgress;\n\n    try {\n      // Reset module-level state that was set during the render phase.\n      resetContextDependencies();\n      resetHooksAfterThrow();\n      resetCurrentFiber(); // TODO: I found and added this missing line while investigating a\n      // separate issue. Write a regression test using string refs.\n\n      ReactCurrentOwner$2.current = null;\n\n      if (erroredWork === null || erroredWork.return === null) {\n        // Expected to be working on a non-root fiber. This is a fatal error\n        // because there's no ancestor that can handle it; the root is\n        // supposed to capture all errors that weren't caught by an error\n        // boundary.\n        workInProgressRootExitStatus = RootFatalErrored;\n        workInProgressRootFatalError = thrownValue; // Set `workInProgress` to null. This represents advancing to the next\n        // sibling, or the parent if there are no siblings. But since the root\n        // has no siblings nor a parent, we set it to null. Usually this is\n        // handled by `completeUnitOfWork` or `unwindWork`, but since we're\n        // intentionally not calling those, we need set it here.\n        // TODO: Consider calling `unwindWork` to pop the contexts.\n\n        workInProgress = null;\n        return;\n      }\n\n      if (enableProfilerTimer && erroredWork.mode & ProfileMode) {\n        // Record the time spent rendering before an error was thrown. This\n        // avoids inaccurate Profiler durations in the case of a\n        // suspended render.\n        stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);\n      }\n\n      if (enableSchedulingProfiler) {\n        markComponentRenderStopped();\n\n        if (thrownValue !== null && typeof thrownValue === 'object' && typeof thrownValue.then === 'function') {\n          var wakeable = thrownValue;\n          markComponentSuspended(erroredWork, wakeable, workInProgressRootRenderLanes);\n        } else {\n          markComponentErrored(erroredWork, thrownValue, workInProgressRootRenderLanes);\n        }\n      }\n\n      throwException(root, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);\n      completeUnitOfWork(erroredWork);\n    } catch (yetAnotherThrownValue) {\n      // Something in the return path also threw.\n      thrownValue = yetAnotherThrownValue;\n\n      if (workInProgress === erroredWork && erroredWork !== null) {\n        // If this boundary has already errored, then we had trouble processing\n        // the error. Bubble it to the next boundary.\n        erroredWork = erroredWork.return;\n        workInProgress = erroredWork;\n      } else {\n        erroredWork = workInProgress;\n      }\n\n      continue;\n    } // Return to the normal work loop.\n\n\n    return;\n  } while (true);\n}\n\nfunction pushDispatcher() {\n  var prevDispatcher = ReactCurrentDispatcher$2.current;\n  ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;\n\n  if (prevDispatcher === null) {\n    // The React isomorphic package does not include a default dispatcher.\n    // Instead the first renderer will lazily attach one, in order to give\n    // nicer error messages.\n    return ContextOnlyDispatcher;\n  } else {\n    return prevDispatcher;\n  }\n}\n\nfunction popDispatcher(prevDispatcher) {\n  ReactCurrentDispatcher$2.current = prevDispatcher;\n}\n\nfunction markCommitTimeOfFallback() {\n  globalMostRecentFallbackTime = now();\n}\nfunction markSkippedUpdateLanes(lane) {\n  workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);\n}\nfunction renderDidSuspend() {\n  if (workInProgressRootExitStatus === RootInProgress) {\n    workInProgressRootExitStatus = RootSuspended;\n  }\n}\nfunction renderDidSuspendDelayIfPossible() {\n  if (workInProgressRootExitStatus === RootInProgress || workInProgressRootExitStatus === RootSuspended || workInProgressRootExitStatus === RootErrored) {\n    workInProgressRootExitStatus = RootSuspendedWithDelay;\n  } // Check if there are updates that we skipped tree that might have unblocked\n  // this render.\n\n\n  if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))) {\n    // Mark the current render as suspended so that we switch to working on\n    // the updates that were skipped. Usually we only suspend at the end of\n    // the render phase.\n    // TODO: We should probably always mark the root as suspended immediately\n    // (inside this function), since by suspending at the end of the render\n    // phase introduces a potential mistake where we suspend lanes that were\n    // pinged or updated while we were rendering.\n    markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);\n  }\n}\nfunction renderDidError(error) {\n  if (workInProgressRootExitStatus !== RootSuspendedWithDelay) {\n    workInProgressRootExitStatus = RootErrored;\n  }\n\n  if (workInProgressRootConcurrentErrors === null) {\n    workInProgressRootConcurrentErrors = [error];\n  } else {\n    workInProgressRootConcurrentErrors.push(error);\n  }\n} // Called during render to determine if anything has suspended.\n// Returns false if we're not sure.\n\nfunction renderHasNotSuspendedYet() {\n  // If something errored or completed, we can't really be sure,\n  // so those are false.\n  return workInProgressRootExitStatus === RootInProgress;\n}\n\nfunction renderRootSync(root, lanes) {\n  var prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\n\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    prepareFreshStack(root, lanes);\n  }\n\n  do {\n    try {\n      workLoopSync();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n\n  resetContextDependencies();\n  executionContext = prevExecutionContext;\n  popDispatcher(prevDispatcher);\n\n  if (workInProgress !== null) {\n    // This is a sync render, so we should have finished the whole tree.\n    throw new Error('Cannot commit an incomplete root. This error is likely caused by a ' + 'bug in React. Please file an issue.');\n  }\n\n\n  workInProgressRoot = null;\n  workInProgressRootRenderLanes = NoLanes;\n  return workInProgressRootExitStatus;\n} // The work loop is an extremely hot path. Tell Closure not to inline it.\n\n/** @noinline */\n\n\nfunction workLoopSync() {\n  // Already timed out, so perform work without checking if we need to yield.\n  while (workInProgress !== null) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction renderRootConcurrent(root, lanes) {\n  var prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\n\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    resetRenderTimer();\n    prepareFreshStack(root, lanes);\n  }\n\n  do {\n    try {\n      workLoopConcurrent();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n\n  resetContextDependencies();\n  popDispatcher(prevDispatcher);\n  executionContext = prevExecutionContext;\n\n\n  if (workInProgress !== null) {\n\n    return RootInProgress;\n  } else {\n\n\n    workInProgressRoot = null;\n    workInProgressRootRenderLanes = NoLanes; // Return the final exit status.\n\n    return workInProgressRootExitStatus;\n  }\n}\n/** @noinline */\n\n\nfunction workLoopConcurrent() {\n  // Perform work until Scheduler asks us to yield\n  while (workInProgress !== null && !shouldYield()) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction performUnitOfWork(unitOfWork) {\n  // The current, flushed, state of this fiber is the alternate. Ideally\n  // nothing should rely on this, but relying on it here means that we don't\n  // need an additional field on the work in progress.\n  var current = unitOfWork.alternate;\n  setCurrentFiber(unitOfWork);\n  var next;\n\n  if ( (unitOfWork.mode & ProfileMode) !== NoMode) {\n    startProfilerTimer(unitOfWork);\n    next = beginWork$1(current, unitOfWork, subtreeRenderLanes);\n    stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);\n  } else {\n    next = beginWork$1(current, unitOfWork, subtreeRenderLanes);\n  }\n\n  resetCurrentFiber();\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n\n  if (next === null) {\n    // If this doesn't spawn new work, complete the current work.\n    completeUnitOfWork(unitOfWork);\n  } else {\n    workInProgress = next;\n  }\n\n  ReactCurrentOwner$2.current = null;\n}\n\nfunction completeUnitOfWork(unitOfWork) {\n  // Attempt to complete the current unit of work, then move to the next\n  // sibling. If there are no more siblings, return to the parent fiber.\n  var completedWork = unitOfWork;\n\n  do {\n    // The current, flushed, state of this fiber is the alternate. Ideally\n    // nothing should rely on this, but relying on it here means that we don't\n    // need an additional field on the work in progress.\n    var current = completedWork.alternate;\n    var returnFiber = completedWork.return; // Check if the work completed or if something threw.\n\n    if ((completedWork.flags & Incomplete) === NoFlags) {\n      setCurrentFiber(completedWork);\n      var next = void 0;\n\n      if ( (completedWork.mode & ProfileMode) === NoMode) {\n        next = completeWork(current, completedWork, subtreeRenderLanes);\n      } else {\n        startProfilerTimer(completedWork);\n        next = completeWork(current, completedWork, subtreeRenderLanes); // Update render duration assuming we didn't error.\n\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n      }\n\n      resetCurrentFiber();\n\n      if (next !== null) {\n        // Completing this fiber spawned new work. Work on that next.\n        workInProgress = next;\n        return;\n      }\n    } else {\n      // This fiber did not complete because something threw. Pop values off\n      // the stack without entering the complete phase. If this is a boundary,\n      // capture values if possible.\n      var _next = unwindWork(current, completedWork); // Because this fiber did not complete, don't reset its lanes.\n\n\n      if (_next !== null) {\n        // If completing this work spawned new work, do that next. We'll come\n        // back here again.\n        // Since we're restarting, remove anything that is not a host effect\n        // from the effect tag.\n        _next.flags &= HostEffectMask;\n        workInProgress = _next;\n        return;\n      }\n\n      if ( (completedWork.mode & ProfileMode) !== NoMode) {\n        // Record the render duration for the fiber that errored.\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false); // Include the time spent working on failed children before continuing.\n\n        var actualDuration = completedWork.actualDuration;\n        var child = completedWork.child;\n\n        while (child !== null) {\n          actualDuration += child.actualDuration;\n          child = child.sibling;\n        }\n\n        completedWork.actualDuration = actualDuration;\n      }\n\n      if (returnFiber !== null) {\n        // Mark the parent fiber as incomplete and clear its subtree flags.\n        returnFiber.flags |= Incomplete;\n        returnFiber.subtreeFlags = NoFlags;\n        returnFiber.deletions = null;\n      } else {\n        // We've unwound all the way to the root.\n        workInProgressRootExitStatus = RootDidNotComplete;\n        workInProgress = null;\n        return;\n      }\n    }\n\n    var siblingFiber = completedWork.sibling;\n\n    if (siblingFiber !== null) {\n      // If there is more work to do in this returnFiber, do that next.\n      workInProgress = siblingFiber;\n      return;\n    } // Otherwise, return to the parent\n\n\n    completedWork = returnFiber; // Update the next thing we're working on in case something throws.\n\n    workInProgress = completedWork;\n  } while (completedWork !== null); // We've reached the root.\n\n\n  if (workInProgressRootExitStatus === RootInProgress) {\n    workInProgressRootExitStatus = RootCompleted;\n  }\n}\n\nfunction commitRoot(root, recoverableErrors) {\n  // TODO: This no longer makes any sense. We already wrap the mutation and\n  // layout phases. Should be able to remove.\n  var previousUpdateLanePriority = getCurrentUpdatePriority();\n  var prevTransition = ReactCurrentBatchConfig$2.transition;\n\n  try {\n    ReactCurrentBatchConfig$2.transition = null;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    commitRootImpl(root, recoverableErrors, previousUpdateLanePriority);\n  } finally {\n    ReactCurrentBatchConfig$2.transition = prevTransition;\n    setCurrentUpdatePriority(previousUpdateLanePriority);\n  }\n\n  return null;\n}\n\nfunction commitRootImpl(root, recoverableErrors, renderPriorityLevel) {\n  do {\n    // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which\n    // means `flushPassiveEffects` will sometimes result in additional\n    // passive effects. So we need to keep flushing in a loop until there are\n    // no more pending effects.\n    // TODO: Might be better if `flushPassiveEffects` did not automatically\n    // flush synchronous work at the end, to avoid factoring hazards like this.\n    flushPassiveEffects();\n  } while (rootWithPendingPassiveEffects !== null);\n\n  flushRenderPhaseStrictModeWarningsInDEV();\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error('Should not already be working.');\n  }\n\n  var finishedWork = root.finishedWork;\n  var lanes = root.finishedLanes;\n\n  if (finishedWork === null) {\n\n    return null;\n  } else {\n    {\n      if (lanes === NoLanes) {\n        error('root.finishedLanes should not be empty during a commit. This is a ' + 'bug in React.');\n      }\n    }\n  }\n\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n\n  if (finishedWork === root.current) {\n    throw new Error('Cannot commit the same tree as before. This error is likely caused by ' + 'a bug in React. Please file an issue.');\n  } // commitRoot never returns a continuation; it always finishes synchronously.\n  // So we can clear these now to allow a new callback to be scheduled.\n\n\n  root.callbackNode = null;\n  root.callbackPriority = NoLane; // Update the first and last pending times on this root. The new first\n  // pending time is whatever is left on the root fiber.\n\n  var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);\n  markRootFinished(root, remainingLanes);\n\n  if (root === workInProgressRoot) {\n    // We can reset these now that they are finished.\n    workInProgressRoot = null;\n    workInProgress = null;\n    workInProgressRootRenderLanes = NoLanes;\n  } // If there are pending passive effects, schedule a callback to process them.\n  // Do this as early as possible, so it is queued before anything else that\n  // might get scheduled in the commit phase. (See #16714.)\n  // TODO: Delete all other places that schedule the passive effect callback\n  // They're redundant.\n\n\n  if ((finishedWork.subtreeFlags & PassiveMask) !== NoFlags || (finishedWork.flags & PassiveMask) !== NoFlags) {\n    if (!rootDoesHavePassiveEffects) {\n      rootDoesHavePassiveEffects = true;\n      scheduleCallback$1(NormalPriority, function () {\n        flushPassiveEffects(); // This render triggered passive effects: release the root cache pool\n        // *after* passive effects fire to avoid freeing a cache pool that may\n        // be referenced by a node in the tree (HostRoot, Cache boundary etc)\n\n        return null;\n      });\n    }\n  } // Check if there are any effects in the whole tree.\n  // TODO: This is left over from the effect list implementation, where we had\n  // to check for the existence of `firstEffect` to satisfy Flow. I think the\n  // only other reason this optimization exists is because it affects profiling.\n  // Reconsider whether this is necessary.\n\n\n  var subtreeHasEffects = (finishedWork.subtreeFlags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;\n  var rootHasEffect = (finishedWork.flags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;\n\n  if (subtreeHasEffects || rootHasEffect) {\n    var prevTransition = ReactCurrentBatchConfig$2.transition;\n    ReactCurrentBatchConfig$2.transition = null;\n    var previousPriority = getCurrentUpdatePriority();\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    var prevExecutionContext = executionContext;\n    executionContext |= CommitContext; // Reset this to null before calling lifecycles\n\n    ReactCurrentOwner$2.current = null; // The commit phase is broken into several sub-phases. We do a separate pass\n    // of the effect list for each phase: all mutation effects come before all\n    // layout effects, and so on.\n    // The first phase a \"before mutation\" phase. We use this phase to read the\n    // state of the host tree right before we mutate it. This is where\n    // getSnapshotBeforeUpdate is called.\n\n    var shouldFireAfterActiveInstanceBlur = commitBeforeMutationEffects(root, finishedWork);\n\n    {\n      // Mark the current commit time to be shared by all Profilers in this\n      // batch. This enables them to be grouped later.\n      recordCommitTime();\n    }\n\n\n    commitMutationEffects(root, finishedWork, lanes);\n\n    resetAfterCommit(root.containerInfo); // The work-in-progress tree is now the current tree. This must come after\n    // the mutation phase, so that the previous tree is still current during\n    // componentWillUnmount, but before the layout phase, so that the finished\n    // work is current during componentDidMount/Update.\n\n    root.current = finishedWork; // The next phase is the layout phase, where we call effects that read\n\n    commitLayoutEffects(finishedWork, root, lanes);\n    // opportunity to paint.\n\n\n    requestPaint();\n    executionContext = prevExecutionContext; // Reset the priority to the previous non-sync value.\n\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig$2.transition = prevTransition;\n  } else {\n    // No effects.\n    root.current = finishedWork; // Measure these anyway so the flamegraph explicitly shows that there were\n    // no effects.\n    // TODO: Maybe there's a better way to report this.\n\n    {\n      recordCommitTime();\n    }\n  }\n\n  if (rootDoesHavePassiveEffects) {\n    // This commit has passive effects. Stash a reference to them. But don't\n    // schedule a callback until after flushing layout work.\n    rootDoesHavePassiveEffects = false;\n    rootWithPendingPassiveEffects = root;\n    pendingPassiveEffectsLanes = lanes;\n  } // Read this again, since an effect might have updated it\n\n\n  remainingLanes = root.pendingLanes; // Check if there's remaining work on this root\n  // TODO: This is part of the `componentDidCatch` implementation. Its purpose\n  // is to detect whether something might have called setState inside\n  // `componentDidCatch`. The mechanism is known to be flawed because `setState`\n  // inside `componentDidCatch` is itself flawed — that's why we recommend\n  // `getDerivedStateFromError` instead. However, it could be improved by\n  // checking if remainingLanes includes Sync work, instead of whether there's\n  // any work remaining at all (which would also include stuff like Suspense\n  // retries or transitions). It's been like this for a while, though, so fixing\n  // it probably isn't that urgent.\n\n  if (remainingLanes === NoLanes) {\n    // If there's no remaining work, we can clear the set of already failed\n    // error boundaries.\n    legacyErrorBoundariesThatAlreadyFailed = null;\n  }\n\n  onCommitRoot(finishedWork.stateNode, renderPriorityLevel);\n  // additional work on this root is scheduled.\n\n\n  ensureRootIsScheduled(root, now());\n\n  if (recoverableErrors !== null) {\n    // There were errors during this render, but recovered from them without\n    // needing to surface it to the UI. We log them here.\n    var onRecoverableError = root.onRecoverableError;\n\n    for (var i = 0; i < recoverableErrors.length; i++) {\n      var recoverableError = recoverableErrors[i];\n      onRecoverableError(recoverableError);\n    }\n  }\n\n  if (hasUncaughtError) {\n    hasUncaughtError = false;\n    var error$1 = firstUncaughtError;\n    firstUncaughtError = null;\n    throw error$1;\n  } // If the passive effects are the result of a discrete render, flush them\n  // synchronously at the end of the current task so that the result is\n  // immediately observable. Otherwise, we assume that they are not\n  // order-dependent and do not need to be observed by external systems, so we\n  // can wait until after paint.\n  // TODO: We can optimize this by not scheduling the callback earlier. Since we\n  // currently schedule the callback in multiple places, will wait until those\n  // are consolidated.\n\n\n  if (includesSomeLane(pendingPassiveEffectsLanes, SyncLane) && root.tag !== LegacyRoot) {\n    flushPassiveEffects();\n  } // Read this again, since a passive effect might have updated it\n\n\n  remainingLanes = root.pendingLanes;\n\n  if (includesSomeLane(remainingLanes, SyncLane)) {\n    {\n      markNestedUpdateScheduled();\n    } // Count the number of times the root synchronously re-renders without\n    // finishing. If there are too many, it indicates an infinite update loop.\n\n\n    if (root === rootWithNestedUpdates) {\n      nestedUpdateCount++;\n    } else {\n      nestedUpdateCount = 0;\n      rootWithNestedUpdates = root;\n    }\n  } else {\n    nestedUpdateCount = 0;\n  } // If layout work was scheduled, flush it now.\n\n\n  flushSyncCallbacks();\n\n  return null;\n}\n\nfunction flushPassiveEffects() {\n  // Returns whether passive effects were flushed.\n  // TODO: Combine this check with the one in flushPassiveEFfectsImpl. We should\n  // probably just combine the two functions. I believe they were only separate\n  // in the first place because we used to wrap it with\n  // `Scheduler.runWithPriority`, which accepts a function. But now we track the\n  // priority within React itself, so we can mutate the variable directly.\n  if (rootWithPendingPassiveEffects !== null) {\n    var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);\n    var priority = lowerEventPriority(DefaultEventPriority, renderPriority);\n    var prevTransition = ReactCurrentBatchConfig$2.transition;\n    var previousPriority = getCurrentUpdatePriority();\n\n    try {\n      ReactCurrentBatchConfig$2.transition = null;\n      setCurrentUpdatePriority(priority);\n      return flushPassiveEffectsImpl();\n    } finally {\n      setCurrentUpdatePriority(previousPriority);\n      ReactCurrentBatchConfig$2.transition = prevTransition; // Once passive effects have run for the tree - giving components a\n    }\n  }\n\n  return false;\n}\nfunction enqueuePendingPassiveProfilerEffect(fiber) {\n  {\n    pendingPassiveProfilerEffects.push(fiber);\n\n    if (!rootDoesHavePassiveEffects) {\n      rootDoesHavePassiveEffects = true;\n      scheduleCallback$1(NormalPriority, function () {\n        flushPassiveEffects();\n        return null;\n      });\n    }\n  }\n}\n\nfunction flushPassiveEffectsImpl() {\n  if (rootWithPendingPassiveEffects === null) {\n    return false;\n  }\n\n  var root = rootWithPendingPassiveEffects;\n  rootWithPendingPassiveEffects = null; // TODO: This is sometimes out of sync with rootWithPendingPassiveEffects.\n  // Figure out why and fix it. It's not causing any known issues (probably\n  // because it's only used for profiling), but it's a refactor hazard.\n\n  pendingPassiveEffectsLanes = NoLanes;\n\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    throw new Error('Cannot flush passive effects while already rendering.');\n  }\n\n  var prevExecutionContext = executionContext;\n  executionContext |= CommitContext;\n  commitPassiveUnmountEffects(root.current);\n  commitPassiveMountEffects(root, root.current); // TODO: Move to commitPassiveMountEffects\n\n  {\n    var profilerEffects = pendingPassiveProfilerEffects;\n    pendingPassiveProfilerEffects = [];\n\n    for (var i = 0; i < profilerEffects.length; i++) {\n      var _fiber = profilerEffects[i];\n      commitPassiveEffectDurations(root, _fiber);\n    }\n  }\n\n  executionContext = prevExecutionContext;\n  flushSyncCallbacks(); // If additional passive effects were scheduled, increment a counter. If this\n  // exceeds the limit, we'll fire a warning.\n\n  nestedPassiveUpdateCount = rootWithPendingPassiveEffects === null ? 0 : nestedPassiveUpdateCount + 1; // TODO: Move to commitPassiveMountEffects\n\n  onPostCommitRoot(root);\n\n  {\n    var stateNode = root.current.stateNode;\n    stateNode.effectDuration = 0;\n    stateNode.passiveEffectDuration = 0;\n  }\n\n  return true;\n}\n\nfunction isAlreadyFailedLegacyErrorBoundary(instance) {\n  return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);\n}\nfunction markLegacyErrorBoundaryAsFailed(instance) {\n  if (legacyErrorBoundariesThatAlreadyFailed === null) {\n    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);\n  } else {\n    legacyErrorBoundariesThatAlreadyFailed.add(instance);\n  }\n}\n\nfunction prepareToThrowUncaughtError(error) {\n  if (!hasUncaughtError) {\n    hasUncaughtError = true;\n    firstUncaughtError = error;\n  }\n}\n\nvar onUncaughtError = prepareToThrowUncaughtError;\n\nfunction captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {\n  var errorInfo = createCapturedValue(error, sourceFiber);\n  var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);\n  enqueueUpdate(rootFiber, update);\n  var eventTime = requestEventTime();\n  var root = markUpdateLaneFromFiberToRoot(rootFiber, SyncLane);\n\n  if (root !== null) {\n    markRootUpdated(root, SyncLane, eventTime);\n    ensureRootIsScheduled(root, eventTime);\n  }\n}\n\nfunction captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error$1) {\n  if (sourceFiber.tag === HostRoot) {\n    // Error was thrown at the root. There is no parent, so the root\n    // itself should capture it.\n    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error$1);\n    return;\n  }\n\n  var fiber = null;\n\n  {\n    fiber = sourceFiber.return;\n  }\n\n  while (fiber !== null) {\n    if (fiber.tag === HostRoot) {\n      captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error$1);\n      return;\n    } else if (fiber.tag === ClassComponent) {\n      var ctor = fiber.type;\n      var instance = fiber.stateNode;\n\n      if (typeof ctor.getDerivedStateFromError === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {\n        var errorInfo = createCapturedValue(error$1, sourceFiber);\n        var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);\n        enqueueUpdate(fiber, update);\n        var eventTime = requestEventTime();\n        var root = markUpdateLaneFromFiberToRoot(fiber, SyncLane);\n\n        if (root !== null) {\n          markRootUpdated(root, SyncLane, eventTime);\n          ensureRootIsScheduled(root, eventTime);\n        }\n\n        return;\n      }\n    }\n\n    fiber = fiber.return;\n  }\n\n  {\n    // TODO: Until we re-land skipUnmountedBoundaries (see #20147), this warning\n    // will fire for errors that are thrown by destroy functions inside deleted\n    // trees. What it should instead do is propagate the error to the parent of\n    // the deleted tree. In the meantime, do not add this warning to the\n    // allowlist; this is only for our internal use.\n    error('Internal React error: Attempted to capture a commit phase error ' + 'inside a detached tree. This indicates a bug in React. Likely ' + 'causes include deleting the same fiber more than once, committing an ' + 'already-finished tree, or an inconsistent return pointer.\\n\\n' + 'Error message:\\n\\n%s', error$1);\n  }\n}\nfunction pingSuspendedRoot(root, wakeable, pingedLanes) {\n  var pingCache = root.pingCache;\n\n  if (pingCache !== null) {\n    // The wakeable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    pingCache.delete(wakeable);\n  }\n\n  var eventTime = requestEventTime();\n  markRootPinged(root, pingedLanes);\n  warnIfSuspenseResolutionNotWrappedWithActDEV(root);\n\n  if (workInProgressRoot === root && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {\n    // Received a ping at the same priority level at which we're currently\n    // rendering. We might want to restart this render. This should mirror\n    // the logic of whether or not a root suspends once it completes.\n    // TODO: If we're rendering sync either due to Sync, Batched or expired,\n    // we should probably never restart.\n    // If we're suspended with delay, or if it's a retry, we'll always suspend\n    // so we can always restart.\n    if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {\n      // Restart from the root.\n      prepareFreshStack(root, NoLanes);\n    } else {\n      // Even though we can't restart right now, we might get an\n      // opportunity later. So we mark this render as having a ping.\n      workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);\n    }\n  }\n\n  ensureRootIsScheduled(root, eventTime);\n}\n\nfunction retryTimedOutBoundary(boundaryFiber, retryLane) {\n  // The boundary fiber (a Suspense component or SuspenseList component)\n  // previously was rendered in its fallback state. One of the promises that\n  // suspended it has resolved, which means at least part of the tree was\n  // likely unblocked. Try rendering again, at a new lanes.\n  if (retryLane === NoLane) {\n    // TODO: Assign this to `suspenseState.retryLane`? to avoid\n    // unnecessary entanglement?\n    retryLane = requestRetryLane(boundaryFiber);\n  } // TODO: Special case idle priority?\n\n\n  var eventTime = requestEventTime();\n  var root = markUpdateLaneFromFiberToRoot(boundaryFiber, retryLane);\n\n  if (root !== null) {\n    markRootUpdated(root, retryLane, eventTime);\n    ensureRootIsScheduled(root, eventTime);\n  }\n}\nfunction resolveRetryWakeable(boundaryFiber, wakeable) {\n  var retryLane = NoLane; // Default\n\n  var retryCache;\n\n  {\n    retryCache = boundaryFiber.stateNode;\n  }\n\n  if (retryCache !== null) {\n    // The wakeable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    retryCache.delete(wakeable);\n  }\n\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n} // Computes the next Just Noticeable Difference (JND) boundary.\n// The theory is that a person can't tell the difference between small differences in time.\n// Therefore, if we wait a bit longer than necessary that won't translate to a noticeable\n// difference in the experience. However, waiting for longer might mean that we can avoid\n// showing an intermediate loading state. The longer we have already waited, the harder it\n// is to tell small differences in time. Therefore, the longer we've already waited,\n// the longer we can wait additionally. At some point we have to give up though.\n// We pick a train model where the next boundary commits at a consistent schedule.\n// These particular numbers are vague estimates. We expect to adjust them based on research.\n\nfunction jnd(timeElapsed) {\n  return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3000 ? 3000 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;\n}\n\nfunction checkForNestedUpdates() {\n  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {\n    nestedUpdateCount = 0;\n    rootWithNestedUpdates = null;\n    throw new Error('Maximum update depth exceeded. This can happen when a component ' + 'repeatedly calls setState inside componentWillUpdate or ' + 'componentDidUpdate. React limits the number of nested updates to ' + 'prevent infinite loops.');\n  }\n\n  {\n    if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {\n      nestedPassiveUpdateCount = 0;\n\n      error('Maximum update depth exceeded. This can happen when a component ' + \"calls setState inside useEffect, but useEffect either doesn't \" + 'have a dependency array, or one of the dependencies changes on ' + 'every render.');\n    }\n  }\n}\n\nfunction flushRenderPhaseStrictModeWarningsInDEV() {\n  {\n    ReactStrictModeWarnings.flushLegacyContextWarning();\n\n    {\n      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();\n    }\n  }\n}\n\nvar didWarnStateUpdateForNotYetMountedComponent = null;\n\nfunction warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {\n  {\n    if ((executionContext & RenderContext) !== NoContext) {\n      // We let the other warning about render phase updates deal with this one.\n      return;\n    }\n\n    if (!(fiber.mode & ConcurrentMode)) {\n      return;\n    }\n\n    var tag = fiber.tag;\n\n    if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent) {\n      // Only warn for user-defined components, not internal ones like Suspense.\n      return;\n    } // We show the whole stack but dedupe on the top component's name because\n    // the problematic code almost always lies inside that component.\n\n\n    var componentName = getComponentNameFromFiber(fiber) || 'ReactComponent';\n\n    if (didWarnStateUpdateForNotYetMountedComponent !== null) {\n      if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {\n        return;\n      }\n\n      didWarnStateUpdateForNotYetMountedComponent.add(componentName);\n    } else {\n      didWarnStateUpdateForNotYetMountedComponent = new Set([componentName]);\n    }\n\n    var previousFiber = current;\n\n    try {\n      setCurrentFiber(fiber);\n\n      error(\"Can't perform a React state update on a component that hasn't mounted yet. \" + 'This indicates that you have a side-effect in your render function that ' + 'asynchronously later calls tries to update the component. Move this work to ' + 'useEffect instead.');\n    } finally {\n      if (previousFiber) {\n        setCurrentFiber(fiber);\n      } else {\n        resetCurrentFiber();\n      }\n    }\n  }\n}\n\nvar beginWork$1;\n\n{\n  beginWork$1 = beginWork;\n}\n\nvar didWarnAboutUpdateInRender = false;\nvar didWarnAboutUpdateInRenderForAnotherComponent;\n\n{\n  didWarnAboutUpdateInRenderForAnotherComponent = new Set();\n}\n\nfunction warnAboutRenderPhaseUpdatesInDEV(fiber) {\n  {\n    if (isRendering && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) {\n      switch (fiber.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent:\n          {\n            var renderingComponentName = workInProgress && getComponentNameFromFiber(workInProgress) || 'Unknown'; // Dedupe by the rendering component because it's the one that needs to be fixed.\n\n            var dedupeKey = renderingComponentName;\n\n            if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {\n              didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);\n              var setStateComponentName = getComponentNameFromFiber(fiber) || 'Unknown';\n\n              error('Cannot update a component (`%s`) while rendering a ' + 'different component (`%s`). To locate the bad setState() call inside `%s`, ' + 'follow the stack trace as described in https://reactjs.org/link/setstate-in-render', setStateComponentName, renderingComponentName, renderingComponentName);\n            }\n\n            break;\n          }\n\n        case ClassComponent:\n          {\n            if (!didWarnAboutUpdateInRender) {\n              error('Cannot update during an existing state transition (such as ' + 'within `render`). Render methods should be a pure ' + 'function of props and state.');\n\n              didWarnAboutUpdateInRender = true;\n            }\n\n            break;\n          }\n      }\n    }\n  }\n}\nvar fakeActCallbackNode = {};\n\nfunction scheduleCallback$1(priorityLevel, callback) {\n  {\n    // If we're currently inside an `act` scope, bypass Scheduler and push to\n    // the `act` queue instead.\n    var actQueue = ReactCurrentActQueue$1.current;\n\n    if (actQueue !== null) {\n      actQueue.push(callback);\n      return fakeActCallbackNode;\n    } else {\n      return scheduleCallback(priorityLevel, callback);\n    }\n  }\n}\n\nfunction cancelCallback$1(callbackNode) {\n  if ( callbackNode === fakeActCallbackNode) {\n    return;\n  } // In production, always call Scheduler. This function will be stripped out.\n\n\n  return cancelCallback(callbackNode);\n}\n\nfunction shouldForceFlushFallbacksInDEV() {\n  // Never force flush in production. This function should get stripped out.\n  return  ReactCurrentActQueue$1.current !== null;\n}\n\nfunction warnIfUpdatesNotWrappedWithActDEV(fiber) {\n  {\n    if (fiber.mode & ConcurrentMode) {\n      if (!isConcurrentActEnvironment()) {\n        // Not in an act environment. No need to warn.\n        return;\n      }\n    } else {\n      // Legacy mode has additional cases where we suppress a warning.\n      if (!isLegacyActEnvironment()) {\n        // Not in an act environment. No need to warn.\n        return;\n      }\n\n      if (executionContext !== NoContext) {\n        // Legacy mode doesn't warn if the update is batched, i.e.\n        // batchedUpdates or flushSync.\n        return;\n      }\n\n      if (fiber.tag !== FunctionComponent && fiber.tag !== ForwardRef && fiber.tag !== SimpleMemoComponent) {\n        // For backwards compatibility with pre-hooks code, legacy mode only\n        // warns for updates that originate from a hook.\n        return;\n      }\n    }\n\n    if (ReactCurrentActQueue$1.current === null) {\n      var previousFiber = current;\n\n      try {\n        setCurrentFiber(fiber);\n\n        error('An update to %s inside a test was not wrapped in act(...).\\n\\n' + 'When testing, code that causes React state updates should be ' + 'wrapped into act(...):\\n\\n' + 'act(() => {\\n' + '  /* fire events that update state */\\n' + '});\\n' + '/* assert on the output */\\n\\n' + \"This ensures that you're testing the behavior the user would see \" + 'in the browser.' + ' Learn more at https://reactjs.org/link/wrap-tests-with-act', getComponentNameFromFiber(fiber));\n      } finally {\n        if (previousFiber) {\n          setCurrentFiber(fiber);\n        } else {\n          resetCurrentFiber();\n        }\n      }\n    }\n  }\n}\n\nfunction warnIfSuspenseResolutionNotWrappedWithActDEV(root) {\n  {\n    if (root.tag !== LegacyRoot && isConcurrentActEnvironment() && ReactCurrentActQueue$1.current === null) {\n      error('A suspended resource finished loading inside a test, but the event ' + 'was not wrapped in act(...).\\n\\n' + 'When testing, code that resolves suspended data should be wrapped ' + 'into act(...):\\n\\n' + 'act(() => {\\n' + '  /* finish loading suspended data */\\n' + '});\\n' + '/* assert on the output */\\n\\n' + \"This ensures that you're testing the behavior the user would see \" + 'in the browser.' + ' Learn more at https://reactjs.org/link/wrap-tests-with-act');\n    }\n  }\n}\n\n/* eslint-disable react-internal/prod-error-codes */\nvar resolveFamily = null; // $FlowFixMe Flow gets confused by a WeakSet feature check below.\n\nvar failedBoundaries = null;\nvar setRefreshHandler = function (handler) {\n  {\n    resolveFamily = handler;\n  }\n};\nfunction resolveFunctionForHotReloading(type) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return type;\n    }\n\n    var family = resolveFamily(type);\n\n    if (family === undefined) {\n      return type;\n    } // Use the latest known implementation.\n\n\n    return family.current;\n  }\n}\nfunction resolveClassForHotReloading(type) {\n  // No implementation differences.\n  return resolveFunctionForHotReloading(type);\n}\nfunction resolveForwardRefForHotReloading(type) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return type;\n    }\n\n    var family = resolveFamily(type);\n\n    if (family === undefined) {\n      // Check if we're dealing with a real forwardRef. Don't want to crash early.\n      if (type !== null && type !== undefined && typeof type.render === 'function') {\n        // ForwardRef is special because its resolved .type is an object,\n        // but it's possible that we only have its inner render function in the map.\n        // If that inner render function is different, we'll build a new forwardRef type.\n        var currentRender = resolveFunctionForHotReloading(type.render);\n\n        if (type.render !== currentRender) {\n          var syntheticType = {\n            $$typeof: REACT_FORWARD_REF_TYPE,\n            render: currentRender\n          };\n\n          if (type.displayName !== undefined) {\n            syntheticType.displayName = type.displayName;\n          }\n\n          return syntheticType;\n        }\n      }\n\n      return type;\n    } // Use the latest known implementation.\n\n\n    return family.current;\n  }\n}\nfunction isCompatibleFamilyForHotReloading(fiber, element) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return false;\n    }\n\n    var prevType = fiber.elementType;\n    var nextType = element.type; // If we got here, we know types aren't === equal.\n\n    var needsCompareFamilies = false;\n    var $$typeofNextType = typeof nextType === 'object' && nextType !== null ? nextType.$$typeof : null;\n\n    switch (fiber.tag) {\n      case ClassComponent:\n        {\n          if (typeof nextType === 'function') {\n            needsCompareFamilies = true;\n          }\n\n          break;\n        }\n\n      case FunctionComponent:\n        {\n          if (typeof nextType === 'function') {\n            needsCompareFamilies = true;\n          } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n            // We don't know the inner type yet.\n            // We're going to assume that the lazy inner type is stable,\n            // and so it is sufficient to avoid reconciling it away.\n            // We're not going to unwrap or actually use the new lazy type.\n            needsCompareFamilies = true;\n          }\n\n          break;\n        }\n\n      case ForwardRef:\n        {\n          if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {\n            needsCompareFamilies = true;\n          } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n            needsCompareFamilies = true;\n          }\n\n          break;\n        }\n\n      case MemoComponent:\n      case SimpleMemoComponent:\n        {\n          if ($$typeofNextType === REACT_MEMO_TYPE) {\n            // TODO: if it was but can no longer be simple,\n            // we shouldn't set this.\n            needsCompareFamilies = true;\n          } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n            needsCompareFamilies = true;\n          }\n\n          break;\n        }\n\n      default:\n        return false;\n    } // Check if both types have a family and it's the same one.\n\n\n    if (needsCompareFamilies) {\n      // Note: memo() and forwardRef() we'll compare outer rather than inner type.\n      // This means both of them need to be registered to preserve state.\n      // If we unwrapped and compared the inner types for wrappers instead,\n      // then we would risk falsely saying two separate memo(Foo)\n      // calls are equivalent because they wrap the same Foo function.\n      var prevFamily = resolveFamily(prevType);\n\n      if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\nfunction markFailedErrorBoundaryForHotReloading(fiber) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return;\n    }\n\n    if (typeof WeakSet !== 'function') {\n      return;\n    }\n\n    if (failedBoundaries === null) {\n      failedBoundaries = new WeakSet();\n    }\n\n    failedBoundaries.add(fiber);\n  }\n}\nvar scheduleRefresh = function (root, update) {\n  {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return;\n    }\n\n    var staleFamilies = update.staleFamilies,\n        updatedFamilies = update.updatedFamilies;\n    flushPassiveEffects();\n    flushSync(function () {\n      scheduleFibersWithFamiliesRecursively(root.current, updatedFamilies, staleFamilies);\n    });\n  }\n};\nvar scheduleRoot = function (root, element) {\n  {\n    if (root.context !== emptyContextObject) {\n      // Super edge case: root has a legacy _renderSubtree context\n      // but we don't know the parentComponent so we can't pass it.\n      // Just ignore. We'll delete this with _renderSubtree code path later.\n      return;\n    }\n\n    flushPassiveEffects();\n    flushSync(function () {\n      updateContainer(element, root, null, null);\n    });\n  }\n};\n\nfunction scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {\n  {\n    var alternate = fiber.alternate,\n        child = fiber.child,\n        sibling = fiber.sibling,\n        tag = fiber.tag,\n        type = fiber.type;\n    var candidateType = null;\n\n    switch (tag) {\n      case FunctionComponent:\n      case SimpleMemoComponent:\n      case ClassComponent:\n        candidateType = type;\n        break;\n\n      case ForwardRef:\n        candidateType = type.render;\n        break;\n    }\n\n    if (resolveFamily === null) {\n      throw new Error('Expected resolveFamily to be set during hot reload.');\n    }\n\n    var needsRender = false;\n    var needsRemount = false;\n\n    if (candidateType !== null) {\n      var family = resolveFamily(candidateType);\n\n      if (family !== undefined) {\n        if (staleFamilies.has(family)) {\n          needsRemount = true;\n        } else if (updatedFamilies.has(family)) {\n          if (tag === ClassComponent) {\n            needsRemount = true;\n          } else {\n            needsRender = true;\n          }\n        }\n      }\n    }\n\n    if (failedBoundaries !== null) {\n      if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) {\n        needsRemount = true;\n      }\n    }\n\n    if (needsRemount) {\n      fiber._debugNeedsRemount = true;\n    }\n\n    if (needsRemount || needsRender) {\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n\n    if (child !== null && !needsRemount) {\n      scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);\n    }\n\n    if (sibling !== null) {\n      scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);\n    }\n  }\n}\n\nvar findHostInstancesForRefresh = function (root, families) {\n  {\n    var hostInstances = new Set();\n    var types = new Set(families.map(function (family) {\n      return family.current;\n    }));\n    findHostInstancesForMatchingFibersRecursively(root.current, types, hostInstances);\n    return hostInstances;\n  }\n};\n\nfunction findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {\n  {\n    var child = fiber.child,\n        sibling = fiber.sibling,\n        tag = fiber.tag,\n        type = fiber.type;\n    var candidateType = null;\n\n    switch (tag) {\n      case FunctionComponent:\n      case SimpleMemoComponent:\n      case ClassComponent:\n        candidateType = type;\n        break;\n\n      case ForwardRef:\n        candidateType = type.render;\n        break;\n    }\n\n    var didMatch = false;\n\n    if (candidateType !== null) {\n      if (types.has(candidateType)) {\n        didMatch = true;\n      }\n    }\n\n    if (didMatch) {\n      // We have a match. This only drills down to the closest host components.\n      // There's no need to search deeper because for the purpose of giving\n      // visual feedback, \"flashing\" outermost parent rectangles is sufficient.\n      findHostInstancesForFiberShallowly(fiber, hostInstances);\n    } else {\n      // If there's no match, maybe there will be one further down in the child tree.\n      if (child !== null) {\n        findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);\n      }\n    }\n\n    if (sibling !== null) {\n      findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);\n    }\n  }\n}\n\nfunction findHostInstancesForFiberShallowly(fiber, hostInstances) {\n  {\n    var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);\n\n    if (foundHostInstances) {\n      return;\n    } // If we didn't find any host children, fallback to closest host parent.\n\n\n    var node = fiber;\n\n    while (true) {\n      switch (node.tag) {\n        case HostComponent:\n          hostInstances.add(node.stateNode);\n          return;\n\n        case HostPortal:\n          hostInstances.add(node.stateNode.containerInfo);\n          return;\n\n        case HostRoot:\n          hostInstances.add(node.stateNode.containerInfo);\n          return;\n      }\n\n      if (node.return === null) {\n        throw new Error('Expected to reach root first.');\n      }\n\n      node = node.return;\n    }\n  }\n}\n\nfunction findChildHostInstancesForFiberShallowly(fiber, hostInstances) {\n  {\n    var node = fiber;\n    var foundHostInstances = false;\n\n    while (true) {\n      if (node.tag === HostComponent) {\n        // We got a match.\n        foundHostInstances = true;\n        hostInstances.add(node.stateNode); // There may still be more, so keep searching.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n\n      if (node === fiber) {\n        return foundHostInstances;\n      }\n\n      while (node.sibling === null) {\n        if (node.return === null || node.return === fiber) {\n          return foundHostInstances;\n        }\n\n        node = node.return;\n      }\n\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n\n  return false;\n}\n\nvar hasBadMapPolyfill;\n\n{\n  hasBadMapPolyfill = false;\n\n  try {\n    var nonExtensibleObject = Object.preventExtensions({});\n    /* eslint-disable no-new */\n\n    new Map([[nonExtensibleObject, null]]);\n    new Set([nonExtensibleObject]);\n    /* eslint-enable no-new */\n  } catch (e) {\n    // TODO: Consider warning about bad polyfills\n    hasBadMapPolyfill = true;\n  }\n}\n\nfunction FiberNode(tag, pendingProps, key, mode) {\n  // Instance\n  this.tag = tag;\n  this.key = key;\n  this.elementType = null;\n  this.type = null;\n  this.stateNode = null; // Fiber\n\n  this.return = null;\n  this.child = null;\n  this.sibling = null;\n  this.index = 0;\n  this.ref = null;\n  this.pendingProps = pendingProps;\n  this.memoizedProps = null;\n  this.updateQueue = null;\n  this.memoizedState = null;\n  this.dependencies = null;\n  this.mode = mode; // Effects\n\n  this.flags = NoFlags;\n  this.subtreeFlags = NoFlags;\n  this.deletions = null;\n  this.lanes = NoLanes;\n  this.childLanes = NoLanes;\n  this.alternate = null;\n\n  {\n    // Note: The following is done to avoid a v8 performance cliff.\n    //\n    // Initializing the fields below to smis and later updating them with\n    // double values will cause Fibers to end up having separate shapes.\n    // This behavior/bug has something to do with Object.preventExtension().\n    // Fortunately this only impacts DEV builds.\n    // Unfortunately it makes React unusably slow for some applications.\n    // To work around this, initialize the fields below with doubles.\n    //\n    // Learn more about this here:\n    // https://github.com/facebook/react/issues/14365\n    // https://bugs.chromium.org/p/v8/issues/detail?id=8538\n    this.actualDuration = Number.NaN;\n    this.actualStartTime = Number.NaN;\n    this.selfBaseDuration = Number.NaN;\n    this.treeBaseDuration = Number.NaN; // It's okay to replace the initial doubles with smis after initialization.\n    // This won't trigger the performance cliff mentioned above,\n    // and it simplifies other profiler code (including DevTools).\n\n    this.actualDuration = 0;\n    this.actualStartTime = -1;\n    this.selfBaseDuration = 0;\n    this.treeBaseDuration = 0;\n  }\n\n  {\n    // This isn't directly used but is handy for debugging internals:\n    this._debugSource = null;\n    this._debugOwner = null;\n    this._debugNeedsRemount = false;\n    this._debugHookTypes = null;\n\n    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {\n      Object.preventExtensions(this);\n    }\n  }\n} // This is a constructor function, rather than a POJO constructor, still\n// please ensure we do the following:\n// 1) Nobody should add any instance methods on this. Instance methods can be\n//    more difficult to predict when they get optimized and they are almost\n//    never inlined properly in static compilers.\n// 2) Nobody should rely on `instanceof Fiber` for type testing. We should\n//    always know when it is a fiber.\n// 3) We might want to experiment with using numeric keys since they are easier\n//    to optimize in a non-JIT environment.\n// 4) We can easily go from a constructor to a createFiber object literal if that\n//    is faster.\n// 5) It should be easy to port this to a C struct and keep a C implementation\n//    compatible.\n\n\nvar createFiber = function (tag, pendingProps, key, mode) {\n  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors\n  return new FiberNode(tag, pendingProps, key, mode);\n};\n\nfunction shouldConstruct$1(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction isSimpleFunctionComponent(type) {\n  return typeof type === 'function' && !shouldConstruct$1(type) && type.defaultProps === undefined;\n}\nfunction resolveLazyComponentTag(Component) {\n  if (typeof Component === 'function') {\n    return shouldConstruct$1(Component) ? ClassComponent : FunctionComponent;\n  } else if (Component !== undefined && Component !== null) {\n    var $$typeof = Component.$$typeof;\n\n    if ($$typeof === REACT_FORWARD_REF_TYPE) {\n      return ForwardRef;\n    }\n\n    if ($$typeof === REACT_MEMO_TYPE) {\n      return MemoComponent;\n    }\n  }\n\n  return IndeterminateComponent;\n} // This is used to create an alternate fiber to do work on.\n\nfunction createWorkInProgress(current, pendingProps) {\n  var workInProgress = current.alternate;\n\n  if (workInProgress === null) {\n    // We use a double buffering pooling technique because we know that we'll\n    // only ever need at most two versions of a tree. We pool the \"other\" unused\n    // node that we're free to reuse. This is lazily created to avoid allocating\n    // extra objects for things that are never updated. It also allow us to\n    // reclaim the extra memory if needed.\n    workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);\n    workInProgress.elementType = current.elementType;\n    workInProgress.type = current.type;\n    workInProgress.stateNode = current.stateNode;\n\n    {\n      // DEV-only fields\n      workInProgress._debugSource = current._debugSource;\n      workInProgress._debugOwner = current._debugOwner;\n      workInProgress._debugHookTypes = current._debugHookTypes;\n    }\n\n    workInProgress.alternate = current;\n    current.alternate = workInProgress;\n  } else {\n    workInProgress.pendingProps = pendingProps; // Needed because Blocks store data on type.\n\n    workInProgress.type = current.type; // We already have an alternate.\n    // Reset the effect tag.\n\n    workInProgress.flags = NoFlags; // The effects are no longer valid.\n\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.deletions = null;\n\n    {\n      // We intentionally reset, rather than copy, actualDuration & actualStartTime.\n      // This prevents time from endlessly accumulating in new commits.\n      // This has the downside of resetting values for different priority renders,\n      // But works for yielding (the common case) and should support resuming.\n      workInProgress.actualDuration = 0;\n      workInProgress.actualStartTime = -1;\n    }\n  } // Reset all effects except static ones.\n  // Static effects are not specific to a render.\n\n\n  workInProgress.flags = current.flags & StaticMask;\n  workInProgress.childLanes = current.childLanes;\n  workInProgress.lanes = current.lanes;\n  workInProgress.child = current.child;\n  workInProgress.memoizedProps = current.memoizedProps;\n  workInProgress.memoizedState = current.memoizedState;\n  workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so\n  // it cannot be shared with the current fiber.\n\n  var currentDependencies = current.dependencies;\n  workInProgress.dependencies = currentDependencies === null ? null : {\n    lanes: currentDependencies.lanes,\n    firstContext: currentDependencies.firstContext\n  }; // These will be overridden during the parent's reconciliation\n\n  workInProgress.sibling = current.sibling;\n  workInProgress.index = current.index;\n  workInProgress.ref = current.ref;\n\n  {\n    workInProgress.selfBaseDuration = current.selfBaseDuration;\n    workInProgress.treeBaseDuration = current.treeBaseDuration;\n  }\n\n  {\n    workInProgress._debugNeedsRemount = current._debugNeedsRemount;\n\n    switch (workInProgress.tag) {\n      case IndeterminateComponent:\n      case FunctionComponent:\n      case SimpleMemoComponent:\n        workInProgress.type = resolveFunctionForHotReloading(current.type);\n        break;\n\n      case ClassComponent:\n        workInProgress.type = resolveClassForHotReloading(current.type);\n        break;\n\n      case ForwardRef:\n        workInProgress.type = resolveForwardRefForHotReloading(current.type);\n        break;\n    }\n  }\n\n  return workInProgress;\n} // Used to reuse a Fiber for a second pass.\n\nfunction resetWorkInProgress(workInProgress, renderLanes) {\n  // This resets the Fiber to what createFiber or createWorkInProgress would\n  // have set the values to before during the first pass. Ideally this wouldn't\n  // be necessary but unfortunately many code paths reads from the workInProgress\n  // when they should be reading from current and writing to workInProgress.\n  // We assume pendingProps, index, key, ref, return are still untouched to\n  // avoid doing another reconciliation.\n  // Reset the effect flags but keep any Placement tags, since that's something\n  // that child fiber is setting, not the reconciliation.\n  workInProgress.flags &= StaticMask | Placement; // The effects are no longer valid.\n\n  var current = workInProgress.alternate;\n\n  if (current === null) {\n    // Reset to createFiber's initial values.\n    workInProgress.childLanes = NoLanes;\n    workInProgress.lanes = renderLanes;\n    workInProgress.child = null;\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.memoizedProps = null;\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null;\n    workInProgress.dependencies = null;\n    workInProgress.stateNode = null;\n\n    {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = 0;\n      workInProgress.treeBaseDuration = 0;\n    }\n  } else {\n    // Reset to the cloned values that createWorkInProgress would've.\n    workInProgress.childLanes = current.childLanes;\n    workInProgress.lanes = current.lanes;\n    workInProgress.child = current.child;\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.deletions = null;\n    workInProgress.memoizedProps = current.memoizedProps;\n    workInProgress.memoizedState = current.memoizedState;\n    workInProgress.updateQueue = current.updateQueue; // Needed because Blocks store data on type.\n\n    workInProgress.type = current.type; // Clone the dependencies object. This is mutated during the render phase, so\n    // it cannot be shared with the current fiber.\n\n    var currentDependencies = current.dependencies;\n    workInProgress.dependencies = currentDependencies === null ? null : {\n      lanes: currentDependencies.lanes,\n      firstContext: currentDependencies.firstContext\n    };\n\n    {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = current.selfBaseDuration;\n      workInProgress.treeBaseDuration = current.treeBaseDuration;\n    }\n  }\n\n  return workInProgress;\n}\nfunction createHostRootFiber(tag, isStrictMode, concurrentUpdatesByDefaultOverride) {\n  var mode;\n\n  if (tag === ConcurrentRoot) {\n    mode = ConcurrentMode;\n\n    if (isStrictMode === true) {\n      mode |= StrictLegacyMode;\n    }\n  } else {\n    mode = NoMode;\n  }\n\n  if ( isDevToolsPresent) {\n    // Always collect profile timings when DevTools are present.\n    // This enables DevTools to start capturing timing at any point–\n    // Without some nodes in the tree having empty base times.\n    mode |= ProfileMode;\n  }\n\n  return createFiber(HostRoot, null, null, mode);\n}\nfunction createFiberFromTypeAndProps(type, // React$ElementType\nkey, pendingProps, owner, mode, lanes) {\n  var fiberTag = IndeterminateComponent; // The resolved type is set if we know what the final type will be. I.e. it's not lazy.\n\n  var resolvedType = type;\n\n  if (typeof type === 'function') {\n    if (shouldConstruct$1(type)) {\n      fiberTag = ClassComponent;\n\n      {\n        resolvedType = resolveClassForHotReloading(resolvedType);\n      }\n    } else {\n      {\n        resolvedType = resolveFunctionForHotReloading(resolvedType);\n      }\n    }\n  } else if (typeof type === 'string') {\n    fiberTag = HostComponent;\n  } else {\n    getTag: switch (type) {\n      case REACT_FRAGMENT_TYPE:\n        return createFiberFromFragment(pendingProps.children, mode, lanes, key);\n\n      case REACT_STRICT_MODE_TYPE:\n        fiberTag = Mode;\n        mode |= StrictLegacyMode;\n\n        break;\n\n      case REACT_PROFILER_TYPE:\n        return createFiberFromProfiler(pendingProps, mode, lanes, key);\n\n      case REACT_SUSPENSE_TYPE:\n        return createFiberFromSuspense(pendingProps, mode, lanes, key);\n\n      case REACT_SUSPENSE_LIST_TYPE:\n        return createFiberFromSuspenseList(pendingProps, mode, lanes, key);\n\n      case REACT_OFFSCREEN_TYPE:\n        return createFiberFromOffscreen(pendingProps, mode, lanes, key);\n\n      case REACT_LEGACY_HIDDEN_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      case REACT_SCOPE_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      case REACT_CACHE_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      case REACT_TRACING_MARKER_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      case REACT_DEBUG_TRACING_MODE_TYPE:\n\n      // eslint-disable-next-line no-fallthrough\n\n      default:\n        {\n          if (typeof type === 'object' && type !== null) {\n            switch (type.$$typeof) {\n              case REACT_PROVIDER_TYPE:\n                fiberTag = ContextProvider;\n                break getTag;\n\n              case REACT_CONTEXT_TYPE:\n                // This is a consumer\n                fiberTag = ContextConsumer;\n                break getTag;\n\n              case REACT_FORWARD_REF_TYPE:\n                fiberTag = ForwardRef;\n\n                {\n                  resolvedType = resolveForwardRefForHotReloading(resolvedType);\n                }\n\n                break getTag;\n\n              case REACT_MEMO_TYPE:\n                fiberTag = MemoComponent;\n                break getTag;\n\n              case REACT_LAZY_TYPE:\n                fiberTag = LazyComponent;\n                resolvedType = null;\n                break getTag;\n            }\n          }\n\n          var info = '';\n\n          {\n            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n              info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and \" + 'named imports.';\n            }\n\n            var ownerName = owner ? getComponentNameFromFiber(owner) : null;\n\n            if (ownerName) {\n              info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n            }\n          }\n\n          throw new Error('Element type is invalid: expected a string (for built-in ' + 'components) or a class/function (for composite components) ' + (\"but got: \" + (type == null ? type : typeof type) + \".\" + info));\n        }\n    }\n  }\n\n  var fiber = createFiber(fiberTag, pendingProps, key, mode);\n  fiber.elementType = type;\n  fiber.type = resolvedType;\n  fiber.lanes = lanes;\n\n  {\n    fiber._debugOwner = owner;\n  }\n\n  return fiber;\n}\nfunction createFiberFromElement(element, mode, lanes) {\n  var owner = null;\n\n  {\n    owner = element._owner;\n  }\n\n  var type = element.type;\n  var key = element.key;\n  var pendingProps = element.props;\n  var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);\n\n  {\n    fiber._debugSource = element._source;\n    fiber._debugOwner = element._owner;\n  }\n\n  return fiber;\n}\nfunction createFiberFromFragment(elements, mode, lanes, key) {\n  var fiber = createFiber(Fragment, elements, key, mode);\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nfunction createFiberFromProfiler(pendingProps, mode, lanes, key) {\n  {\n    if (typeof pendingProps.id !== 'string') {\n      error('Profiler must specify an \"id\" of type `string` as a prop. Received the type `%s` instead.', typeof pendingProps.id);\n    }\n  }\n\n  var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);\n  fiber.elementType = REACT_PROFILER_TYPE;\n  fiber.lanes = lanes;\n\n  {\n    fiber.stateNode = {\n      effectDuration: 0,\n      passiveEffectDuration: 0\n    };\n  }\n\n  return fiber;\n}\n\nfunction createFiberFromSuspense(pendingProps, mode, lanes, key) {\n  var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_SUSPENSE_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\nfunction createFiberFromSuspenseList(pendingProps, mode, lanes, key) {\n  var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_SUSPENSE_LIST_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\nfunction createFiberFromOffscreen(pendingProps, mode, lanes, key) {\n  var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_OFFSCREEN_TYPE;\n  fiber.lanes = lanes;\n  var primaryChildInstance = {};\n  fiber.stateNode = primaryChildInstance;\n  return fiber;\n}\nfunction createFiberFromText(content, mode, lanes) {\n  var fiber = createFiber(HostText, content, null, mode);\n  fiber.lanes = lanes;\n  return fiber;\n}\nfunction createFiberFromPortal(portal, mode, lanes) {\n  var pendingProps = portal.children !== null ? portal.children : [];\n  var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);\n  fiber.lanes = lanes;\n  fiber.stateNode = {\n    containerInfo: portal.containerInfo,\n    pendingChildren: null,\n    // Used by persistent updates\n    implementation: portal.implementation\n  };\n  return fiber;\n} // Used for stashing WIP properties to replay failed work in DEV.\n\nfunction FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError) {\n  this.tag = tag;\n  this.containerInfo = containerInfo;\n  this.pendingChildren = null;\n  this.current = null;\n  this.pingCache = null;\n  this.finishedWork = null;\n  this.timeoutHandle = noTimeout;\n  this.context = null;\n  this.pendingContext = null;\n  this.callbackNode = null;\n  this.callbackPriority = NoLane;\n  this.eventTimes = createLaneMap(NoLanes);\n  this.expirationTimes = createLaneMap(NoTimestamp);\n  this.pendingLanes = NoLanes;\n  this.suspendedLanes = NoLanes;\n  this.pingedLanes = NoLanes;\n  this.expiredLanes = NoLanes;\n  this.mutableReadLanes = NoLanes;\n  this.finishedLanes = NoLanes;\n  this.entangledLanes = NoLanes;\n  this.entanglements = createLaneMap(NoLanes);\n  this.identifierPrefix = identifierPrefix;\n  this.onRecoverableError = onRecoverableError;\n\n  {\n    this.effectDuration = 0;\n    this.passiveEffectDuration = 0;\n  }\n\n  {\n    switch (tag) {\n      case ConcurrentRoot:\n        this._debugRootType = hydrate ? 'hydrateRoot()' : 'createRoot()';\n        break;\n\n      case LegacyRoot:\n        this._debugRootType = hydrate ? 'hydrate()' : 'render()';\n        break;\n    }\n  }\n}\n\nfunction createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, // TODO: We have several of these arguments that are conceptually part of the\n// host config, but because they are passed in at runtime, we have to thread\n// them through the root constructor. Perhaps we should put them all into a\n// single type, like a DynamicHostConfig that is defined by the renderer.\nidentifierPrefix, onRecoverableError, transitionCallbacks) {\n  var root = new FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError);\n  // stateNode is any.\n\n\n  var uninitializedFiber = createHostRootFiber(tag, isStrictMode);\n  root.current = uninitializedFiber;\n  uninitializedFiber.stateNode = root;\n\n  {\n    var _initialState = {\n      element: initialChildren,\n      isDehydrated: hydrate,\n      cache: null,\n      // not enabled yet\n      transitions: null\n    };\n    uninitializedFiber.memoizedState = _initialState;\n  }\n\n  initializeUpdateQueue(uninitializedFiber);\n  return root;\n}\n\nvar ReactVersion = '18.0.0-fc46dba67-20220329';\n\nvar didWarnAboutNestedUpdates;\n\n{\n  didWarnAboutNestedUpdates = false;\n}\n\nfunction getContextForSubtree(parentComponent) {\n  if (!parentComponent) {\n    return emptyContextObject;\n  }\n\n  var fiber = get(parentComponent);\n  var parentContext = findCurrentUnmaskedContext(fiber);\n\n  if (fiber.tag === ClassComponent) {\n    var Component = fiber.type;\n\n    if (isContextProvider(Component)) {\n      return processChildContext(fiber, Component, parentContext);\n    }\n  }\n\n  return parentContext;\n}\n\nfunction createContainer(containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {\n  var hydrate = false;\n  var initialChildren = null;\n  return createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);\n}\nfunction updateContainer(element, container, parentComponent, callback) {\n  {\n    onScheduleRoot(container, element);\n  }\n\n  var current$1 = container.current;\n  var eventTime = requestEventTime();\n  var lane = requestUpdateLane(current$1);\n\n  var context = getContextForSubtree(parentComponent);\n\n  if (container.context === null) {\n    container.context = context;\n  } else {\n    container.pendingContext = context;\n  }\n\n  {\n    if (isRendering && current !== null && !didWarnAboutNestedUpdates) {\n      didWarnAboutNestedUpdates = true;\n\n      error('Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\\n\\n' + 'Check the render method of %s.', getComponentNameFromFiber(current) || 'Unknown');\n    }\n  }\n\n  var update = createUpdate(eventTime, lane); // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n\n  update.payload = {\n    element: element\n  };\n  callback = callback === undefined ? null : callback;\n\n  if (callback !== null) {\n    {\n      if (typeof callback !== 'function') {\n        error('render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback);\n      }\n    }\n\n    update.callback = callback;\n  }\n\n  enqueueUpdate(current$1, update);\n  var root = scheduleUpdateOnFiber(current$1, lane, eventTime);\n\n  if (root !== null) {\n    entangleTransitions(root, current$1, lane);\n  }\n\n  return lane;\n}\nfunction getPublicRootInstance(container) {\n  var containerFiber = container.current;\n\n  if (!containerFiber.child) {\n    return null;\n  }\n\n  switch (containerFiber.child.tag) {\n    case HostComponent:\n      return getPublicInstance(containerFiber.child.stateNode);\n\n    default:\n      return containerFiber.child.stateNode;\n  }\n}\n\nvar shouldErrorImpl = function (fiber) {\n  return null;\n};\n\nfunction shouldError(fiber) {\n  return shouldErrorImpl(fiber);\n}\n\nvar shouldSuspendImpl = function (fiber) {\n  return false;\n};\n\nfunction shouldSuspend(fiber) {\n  return shouldSuspendImpl(fiber);\n}\nvar overrideHookState = null;\nvar overrideHookStateDeletePath = null;\nvar overrideHookStateRenamePath = null;\nvar overrideProps = null;\nvar overridePropsDeletePath = null;\nvar overridePropsRenamePath = null;\nvar scheduleUpdate = null;\nvar setErrorHandler = null;\nvar setSuspenseHandler = null;\n\n{\n  var copyWithDeleteImpl = function (obj, path, index) {\n    var key = path[index];\n    var updated = isArray(obj) ? obj.slice() : assign({}, obj);\n\n    if (index + 1 === path.length) {\n      if (isArray(updated)) {\n        updated.splice(key, 1);\n      } else {\n        delete updated[key];\n      }\n\n      return updated;\n    } // $FlowFixMe number or string is fine here\n\n\n    updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);\n    return updated;\n  };\n\n  var copyWithDelete = function (obj, path) {\n    return copyWithDeleteImpl(obj, path, 0);\n  };\n\n  var copyWithRenameImpl = function (obj, oldPath, newPath, index) {\n    var oldKey = oldPath[index];\n    var updated = isArray(obj) ? obj.slice() : assign({}, obj);\n\n    if (index + 1 === oldPath.length) {\n      var newKey = newPath[index]; // $FlowFixMe number or string is fine here\n\n      updated[newKey] = updated[oldKey];\n\n      if (isArray(updated)) {\n        updated.splice(oldKey, 1);\n      } else {\n        delete updated[oldKey];\n      }\n    } else {\n      // $FlowFixMe number or string is fine here\n      updated[oldKey] = copyWithRenameImpl( // $FlowFixMe number or string is fine here\n      obj[oldKey], oldPath, newPath, index + 1);\n    }\n\n    return updated;\n  };\n\n  var copyWithRename = function (obj, oldPath, newPath) {\n    if (oldPath.length !== newPath.length) {\n      warn('copyWithRename() expects paths of the same length');\n\n      return;\n    } else {\n      for (var i = 0; i < newPath.length - 1; i++) {\n        if (oldPath[i] !== newPath[i]) {\n          warn('copyWithRename() expects paths to be the same except for the deepest key');\n\n          return;\n        }\n      }\n    }\n\n    return copyWithRenameImpl(obj, oldPath, newPath, 0);\n  };\n\n  var copyWithSetImpl = function (obj, path, index, value) {\n    if (index >= path.length) {\n      return value;\n    }\n\n    var key = path[index];\n    var updated = isArray(obj) ? obj.slice() : assign({}, obj); // $FlowFixMe number or string is fine here\n\n    updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);\n    return updated;\n  };\n\n  var copyWithSet = function (obj, path, value) {\n    return copyWithSetImpl(obj, path, 0, value);\n  };\n\n  var findHook = function (fiber, id) {\n    // For now, the \"id\" of stateful hooks is just the stateful hook index.\n    // This may change in the future with e.g. nested hooks.\n    var currentHook = fiber.memoizedState;\n\n    while (currentHook !== null && id > 0) {\n      currentHook = currentHook.next;\n      id--;\n    }\n\n    return currentHook;\n  }; // Support DevTools editable values for useState and useReducer.\n\n\n  overrideHookState = function (fiber, id, path, value) {\n    var hook = findHook(fiber, id);\n\n    if (hook !== null) {\n      var newState = copyWithSet(hook.memoizedState, path, value);\n      hook.memoizedState = newState;\n      hook.baseState = newState; // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n\n      fiber.memoizedProps = assign({}, fiber.memoizedProps);\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  overrideHookStateDeletePath = function (fiber, id, path) {\n    var hook = findHook(fiber, id);\n\n    if (hook !== null) {\n      var newState = copyWithDelete(hook.memoizedState, path);\n      hook.memoizedState = newState;\n      hook.baseState = newState; // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n\n      fiber.memoizedProps = assign({}, fiber.memoizedProps);\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  overrideHookStateRenamePath = function (fiber, id, oldPath, newPath) {\n    var hook = findHook(fiber, id);\n\n    if (hook !== null) {\n      var newState = copyWithRename(hook.memoizedState, oldPath, newPath);\n      hook.memoizedState = newState;\n      hook.baseState = newState; // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n\n      fiber.memoizedProps = assign({}, fiber.memoizedProps);\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n  }; // Support DevTools props for function components, forwardRef, memo, host components, etc.\n\n\n  overrideProps = function (fiber, path, value) {\n    fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);\n\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n\n    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n  };\n\n  overridePropsDeletePath = function (fiber, path) {\n    fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);\n\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n\n    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n  };\n\n  overridePropsRenamePath = function (fiber, oldPath, newPath) {\n    fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);\n\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n\n    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n  };\n\n  scheduleUpdate = function (fiber) {\n    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n  };\n\n  setErrorHandler = function (newShouldErrorImpl) {\n    shouldErrorImpl = newShouldErrorImpl;\n  };\n\n  setSuspenseHandler = function (newShouldSuspendImpl) {\n    shouldSuspendImpl = newShouldSuspendImpl;\n  };\n}\n\nfunction findHostInstanceByFiber(fiber) {\n  var hostFiber = findCurrentHostFiber(fiber);\n\n  if (hostFiber === null) {\n    return null;\n  }\n\n  return hostFiber.stateNode;\n}\n\nfunction emptyFindFiberByHostInstance(instance) {\n  return null;\n}\n\nfunction getCurrentFiberForDevTools() {\n  return current;\n}\n\nfunction injectIntoDevTools(devToolsConfig) {\n  var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;\n  var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n  return injectInternals({\n    bundleType: devToolsConfig.bundleType,\n    version: devToolsConfig.version,\n    rendererPackageName: devToolsConfig.rendererPackageName,\n    rendererConfig: devToolsConfig.rendererConfig,\n    overrideHookState: overrideHookState,\n    overrideHookStateDeletePath: overrideHookStateDeletePath,\n    overrideHookStateRenamePath: overrideHookStateRenamePath,\n    overrideProps: overrideProps,\n    overridePropsDeletePath: overridePropsDeletePath,\n    overridePropsRenamePath: overridePropsRenamePath,\n    setErrorHandler: setErrorHandler,\n    setSuspenseHandler: setSuspenseHandler,\n    scheduleUpdate: scheduleUpdate,\n    currentDispatcherRef: ReactCurrentDispatcher,\n    findHostInstanceByFiber: findHostInstanceByFiber,\n    findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,\n    // React Refresh\n    findHostInstancesForRefresh:  findHostInstancesForRefresh ,\n    scheduleRefresh:  scheduleRefresh ,\n    scheduleRoot:  scheduleRoot ,\n    setRefreshHandler:  setRefreshHandler ,\n    // Enables DevTools to append owner stacks to error messages in DEV mode.\n    getCurrentFiber:  getCurrentFiberForDevTools ,\n    // Enables DevTools to detect reconciler version rather than renderer version\n    // which may not match for third party renderers.\n    reconcilerVersion: ReactVersion\n  });\n}\n\nvar act = React.unstable_act; // TODO: Remove from public bundle\n\nvar defaultTestOptions = {\n  createNodeMock: function () {\n    return null;\n  }\n};\n\nfunction toJSON(inst) {\n  if (inst.isHidden) {\n    // Omit timed out children from output entirely. This seems like the least\n    // surprising behavior. We could perhaps add a separate API that includes\n    // them, if it turns out people need it.\n    return null;\n  }\n\n  switch (inst.tag) {\n    case 'TEXT':\n      return inst.text;\n\n    case 'INSTANCE':\n      {\n        /* eslint-disable no-unused-vars */\n        // We don't include the `children` prop in JSON.\n        // Instead, we will include the actual rendered children.\n        var _inst$props = inst.props,\n            children = _inst$props.children,\n            props = _objectWithoutPropertiesLoose(_inst$props, [\"children\"]);\n        /* eslint-enable */\n\n\n        var renderedChildren = null;\n\n        if (inst.children && inst.children.length) {\n          for (var i = 0; i < inst.children.length; i++) {\n            var renderedChild = toJSON(inst.children[i]);\n\n            if (renderedChild !== null) {\n              if (renderedChildren === null) {\n                renderedChildren = [renderedChild];\n              } else {\n                renderedChildren.push(renderedChild);\n              }\n            }\n          }\n        }\n\n        var json = {\n          type: inst.type,\n          props: props,\n          children: renderedChildren\n        };\n        Object.defineProperty(json, '$$typeof', {\n          value: Symbol.for('react.test.json')\n        });\n        return json;\n      }\n\n    default:\n      throw new Error(\"Unexpected node type in toJSON: \" + inst.tag);\n  }\n}\n\nfunction childrenToTree(node) {\n  if (!node) {\n    return null;\n  }\n\n  var children = nodeAndSiblingsArray(node);\n\n  if (children.length === 0) {\n    return null;\n  } else if (children.length === 1) {\n    return toTree(children[0]);\n  }\n\n  return flatten(children.map(toTree));\n}\n\nfunction nodeAndSiblingsArray(nodeWithSibling) {\n  var array = [];\n  var node = nodeWithSibling;\n\n  while (node != null) {\n    array.push(node);\n    node = node.sibling;\n  }\n\n  return array;\n}\n\nfunction flatten(arr) {\n  var result = [];\n  var stack = [{\n    i: 0,\n    array: arr\n  }];\n\n  while (stack.length) {\n    var n = stack.pop();\n\n    while (n.i < n.array.length) {\n      var el = n.array[n.i];\n      n.i += 1;\n\n      if (isArray(el)) {\n        stack.push(n);\n        stack.push({\n          i: 0,\n          array: el\n        });\n        break;\n      }\n\n      result.push(el);\n    }\n  }\n\n  return result;\n}\n\nfunction toTree(node) {\n  if (node == null) {\n    return null;\n  }\n\n  switch (node.tag) {\n    case HostRoot:\n      return childrenToTree(node.child);\n\n    case HostPortal:\n      return childrenToTree(node.child);\n\n    case ClassComponent:\n      return {\n        nodeType: 'component',\n        type: node.type,\n        props: assign({}, node.memoizedProps),\n        instance: node.stateNode,\n        rendered: childrenToTree(node.child)\n      };\n\n    case FunctionComponent:\n    case SimpleMemoComponent:\n      return {\n        nodeType: 'component',\n        type: node.type,\n        props: assign({}, node.memoizedProps),\n        instance: null,\n        rendered: childrenToTree(node.child)\n      };\n\n    case HostComponent:\n      {\n        return {\n          nodeType: 'host',\n          type: node.type,\n          props: assign({}, node.memoizedProps),\n          instance: null,\n          // TODO: use createNodeMock here somehow?\n          rendered: flatten(nodeAndSiblingsArray(node.child).map(toTree))\n        };\n      }\n\n    case HostText:\n      return node.stateNode.text;\n\n    case Fragment:\n    case ContextProvider:\n    case ContextConsumer:\n    case Mode:\n    case Profiler:\n    case ForwardRef:\n    case MemoComponent:\n    case IncompleteClassComponent:\n    case ScopeComponent:\n      return childrenToTree(node.child);\n\n    default:\n      throw new Error(\"toTree() does not yet know how to handle nodes with tag=\" + node.tag);\n  }\n}\n\nvar validWrapperTypes = new Set([FunctionComponent, ClassComponent, HostComponent, ForwardRef, MemoComponent, SimpleMemoComponent, // Normally skipped, but used when there's more than one root child.\nHostRoot]);\n\nfunction getChildren(parent) {\n  var children = [];\n  var startingNode = parent;\n  var node = startingNode;\n\n  if (node.child === null) {\n    return children;\n  }\n\n  node.child.return = node;\n  node = node.child;\n\n  outer: while (true) {\n    var descend = false;\n\n    if (validWrapperTypes.has(node.tag)) {\n      children.push(wrapFiber(node));\n    } else if (node.tag === HostText) {\n      {\n        checkPropStringCoercion(node.memoizedProps, 'memoizedProps');\n      }\n\n      children.push('' + node.memoizedProps);\n    } else {\n      descend = true;\n    }\n\n    if (descend && node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n\n    while (node.sibling === null) {\n      if (node.return === startingNode) {\n        break outer;\n      }\n\n      node = node.return;\n    }\n\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n\n  return children;\n}\n\nvar ReactTestInstance = /*#__PURE__*/function () {\n  var _proto = ReactTestInstance.prototype;\n\n  _proto._currentFiber = function _currentFiber() {\n    // Throws if this component has been unmounted.\n    var fiber = findCurrentFiberUsingSlowPath(this._fiber);\n\n    if (fiber === null) {\n      throw new Error(\"Can't read from currently-mounting component. This error is likely \" + 'caused by a bug in React. Please file an issue.');\n    }\n\n    return fiber;\n  };\n\n  function ReactTestInstance(fiber) {\n    if (!validWrapperTypes.has(fiber.tag)) {\n      throw new Error(\"Unexpected object passed to ReactTestInstance constructor (tag: \" + fiber.tag + \"). \" + 'This is probably a bug in React.');\n    }\n\n    this._fiber = fiber;\n  }\n\n  // Custom search functions\n  _proto.find = function find(predicate) {\n    return expectOne(this.findAll(predicate, {\n      deep: false\n    }), \"matching custom predicate: \" + predicate.toString());\n  };\n\n  _proto.findByType = function findByType(type) {\n    return expectOne(this.findAllByType(type, {\n      deep: false\n    }), \"with node type: \\\"\" + (getComponentNameFromType(type) || 'Unknown') + \"\\\"\");\n  };\n\n  _proto.findByProps = function findByProps(props) {\n    return expectOne(this.findAllByProps(props, {\n      deep: false\n    }), \"with props: \" + JSON.stringify(props));\n  };\n\n  _proto.findAll = function findAll(predicate) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _findAll(this, predicate, options);\n  };\n\n  _proto.findAllByType = function findAllByType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _findAll(this, function (node) {\n      return node.type === type;\n    }, options);\n  };\n\n  _proto.findAllByProps = function findAllByProps(props) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _findAll(this, function (node) {\n      return node.props && propsMatch(node.props, props);\n    }, options);\n  };\n\n  _createClass(ReactTestInstance, [{\n    key: \"instance\",\n    get: function () {\n      if (this._fiber.tag === HostComponent) {\n        return getPublicInstance(this._fiber.stateNode);\n      } else {\n        return this._fiber.stateNode;\n      }\n    }\n  }, {\n    key: \"type\",\n    get: function () {\n      return this._fiber.type;\n    }\n  }, {\n    key: \"props\",\n    get: function () {\n      return this._currentFiber().memoizedProps;\n    }\n  }, {\n    key: \"parent\",\n    get: function () {\n      var parent = this._fiber.return;\n\n      while (parent !== null) {\n        if (validWrapperTypes.has(parent.tag)) {\n          if (parent.tag === HostRoot) {\n            // Special case: we only \"materialize\" instances for roots\n            // if they have more than a single child. So we'll check that now.\n            if (getChildren(parent).length < 2) {\n              return null;\n            }\n          }\n\n          return wrapFiber(parent);\n        }\n\n        parent = parent.return;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"children\",\n    get: function () {\n      return getChildren(this._currentFiber());\n    }\n  }]);\n\n  return ReactTestInstance;\n}();\n\nfunction _findAll(root, predicate, options) {\n  var deep = options ? options.deep : true;\n  var results = [];\n\n  if (predicate(root)) {\n    results.push(root);\n\n    if (!deep) {\n      return results;\n    }\n  }\n\n  root.children.forEach(function (child) {\n    if (typeof child === 'string') {\n      return;\n    }\n\n    results.push.apply(results, _findAll(child, predicate, options));\n  });\n  return results;\n}\n\nfunction expectOne(all, message) {\n  if (all.length === 1) {\n    return all[0];\n  }\n\n  var prefix = all.length === 0 ? 'No instances found ' : \"Expected 1 but found \" + all.length + \" instances \";\n  throw new Error(prefix + message);\n}\n\nfunction propsMatch(props, filter) {\n  for (var key in filter) {\n    if (props[key] !== filter[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction onRecoverableError(error$1) {\n  // TODO: Expose onRecoverableError option to userspace\n  // eslint-disable-next-line react-internal/no-production-logging, react-internal/warning-args\n  error(error$1);\n}\n\nfunction create(element, options) {\n  var createNodeMock = defaultTestOptions.createNodeMock;\n  var isConcurrent = false;\n  var isStrictMode = false;\n  var concurrentUpdatesByDefault = null;\n\n  if (typeof options === 'object' && options !== null) {\n    if (typeof options.createNodeMock === 'function') {\n      createNodeMock = options.createNodeMock;\n    }\n\n    if (options.unstable_isConcurrent === true) {\n      isConcurrent = true;\n    }\n\n    if (options.unstable_strictMode === true) {\n      isStrictMode = true;\n    }\n  }\n\n  var container = {\n    children: [],\n    createNodeMock: createNodeMock,\n    tag: 'CONTAINER'\n  };\n  var root = createContainer(container, isConcurrent ? ConcurrentRoot : LegacyRoot, null, isStrictMode, concurrentUpdatesByDefault, '', onRecoverableError);\n\n  if (root == null) {\n    throw new Error('something went wrong');\n  }\n\n  updateContainer(element, root, null, null);\n  var entry = {\n    _Scheduler: Scheduler,\n    root: undefined,\n    // makes flow happy\n    // we define a 'getter' for 'root' below using 'Object.defineProperty'\n    toJSON: function () {\n      if (root == null || root.current == null || container == null) {\n        return null;\n      }\n\n      if (container.children.length === 0) {\n        return null;\n      }\n\n      if (container.children.length === 1) {\n        return toJSON(container.children[0]);\n      }\n\n      if (container.children.length === 2 && container.children[0].isHidden === true && container.children[1].isHidden === false) {\n        // Omit timed out children from output entirely, including the fact that we\n        // temporarily wrap fallback and timed out children in an array.\n        return toJSON(container.children[1]);\n      }\n\n      var renderedChildren = null;\n\n      if (container.children && container.children.length) {\n        for (var i = 0; i < container.children.length; i++) {\n          var renderedChild = toJSON(container.children[i]);\n\n          if (renderedChild !== null) {\n            if (renderedChildren === null) {\n              renderedChildren = [renderedChild];\n            } else {\n              renderedChildren.push(renderedChild);\n            }\n          }\n        }\n      }\n\n      return renderedChildren;\n    },\n    toTree: function () {\n      if (root == null || root.current == null) {\n        return null;\n      }\n\n      return toTree(root.current);\n    },\n    update: function (newElement) {\n      if (root == null || root.current == null) {\n        return;\n      }\n\n      updateContainer(newElement, root, null, null);\n    },\n    unmount: function () {\n      if (root == null || root.current == null) {\n        return;\n      }\n\n      updateContainer(null, root, null, null);\n      container = null;\n      root = null;\n    },\n    getInstance: function () {\n      if (root == null || root.current == null) {\n        return null;\n      }\n\n      return getPublicRootInstance(root);\n    },\n    unstable_flushSync: flushSync\n  };\n  Object.defineProperty(entry, 'root', {\n    configurable: true,\n    enumerable: true,\n    get: function () {\n      if (root === null) {\n        throw new Error(\"Can't access .root on unmounted test renderer\");\n      }\n\n      var children = getChildren(root.current);\n\n      if (children.length === 0) {\n        throw new Error(\"Can't access .root on unmounted test renderer\");\n      } else if (children.length === 1) {\n        // Normally, we skip the root and just give you the child.\n        return children[0];\n      } else {\n        // However, we give you the root if there's more than one root child.\n        // We could make this the behavior for all cases but it would be a breaking change.\n        return wrapFiber(root.current);\n      }\n    }\n  });\n  return entry;\n}\n\nvar fiberToWrapper = new WeakMap();\n\nfunction wrapFiber(fiber) {\n  var wrapper = fiberToWrapper.get(fiber);\n\n  if (wrapper === undefined && fiber.alternate !== null) {\n    wrapper = fiberToWrapper.get(fiber.alternate);\n  }\n\n  if (wrapper === undefined) {\n    wrapper = new ReactTestInstance(fiber);\n    fiberToWrapper.set(fiber, wrapper);\n  }\n\n  return wrapper;\n} // Enable ReactTestRenderer to be used to test DevTools integration.\n\n\ninjectIntoDevTools({\n  findFiberByHostInstance: function () {\n    throw new Error('TestRenderer does not support findFiberByHostInstance()');\n  },\n  bundleType:  1 ,\n  version: ReactVersion,\n  rendererPackageName: 'react-test-renderer'\n});\n\nexports._Scheduler = Scheduler;\nexports.act = act;\nexports.create = create;\nexports.unstable_batchedUpdates = batchedUpdates;\n  })();\n}\n"],"mappings":"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"}