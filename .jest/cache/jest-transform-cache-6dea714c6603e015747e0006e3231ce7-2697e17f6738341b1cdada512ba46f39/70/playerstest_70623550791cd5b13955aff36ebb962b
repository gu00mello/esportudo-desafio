6d21ac65ee194d92f1c82b29daa24eee
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var React = _interopRequireWildcard(require("react"));

var _Players = require("../src/context/Players");

var _reactTestRenderer = require("react-test-renderer");

var _Players2 = _interopRequireDefault(require("../src/screens/Players"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

jest.useFakeTimers();
var tree = (0, _reactTestRenderer.create)(React.createElement(_Players.PlayersProvider, null, React.createElement(_Players2.default, null)));
describe('Players', function () {
  test('renders correctly', function () {
    expect(tree.toJSON()).toMatchSnapshot();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJqZXN0IiwidXNlRmFrZVRpbWVycyIsInRyZWUiLCJjcmVhdGUiLCJkZXNjcmliZSIsInRlc3QiLCJleHBlY3QiLCJ0b0pTT04iLCJ0b01hdGNoU25hcHNob3QiXSwic291cmNlcyI6WyJwbGF5ZXJzLnRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQge1BsYXllcnNQcm92aWRlcn0gZnJvbSAnLi4vc3JjL2NvbnRleHQvUGxheWVycyc7XHJcbmltcG9ydCB7Y3JlYXRlfSBmcm9tICdyZWFjdC10ZXN0LXJlbmRlcmVyJztcclxuaW1wb3J0IFBsYXllcnMgZnJvbSAnLi4vc3JjL3NjcmVlbnMvUGxheWVycyc7XHJcbmltcG9ydCB7dXNlUGxheWVyc30gZnJvbSAnLi4vc3JjL2NvbnRleHQvUGxheWVycyc7XHJcblxyXG5qZXN0LnVzZUZha2VUaW1lcnMoKTtcclxuXHJcbmNvbnN0IHRyZWUgPSBjcmVhdGUoXHJcbiAgICA8UGxheWVyc1Byb3ZpZGVyPlxyXG4gICAgICAgIDxQbGF5ZXJzIC8+XHJcbiAgICA8L1BsYXllcnNQcm92aWRlcj5cclxuKTtcclxuXHJcbmRlc2NyaWJlKCdQbGF5ZXJzJywgKCkgPT4ge1xyXG4gICAgdGVzdCgncmVuZGVycyBjb3JyZWN0bHknLCAoKSA9PiB7XHJcbiAgICAgICAgZXhwZWN0KHRyZWUudG9KU09OKCkpLnRvTWF0Y2hTbmFwc2hvdCgpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gdGVzdCgnZ2V0IHBsYXllcnMgY29ycmVjdGx5JywgYXN5bmMgKCkgPT4ge1xyXG4gICAgLy8gICAgIGNvbnN0IHBsYXllcnMgPSBhd2FpdCBnZXRQbGF5ZXJzKCk7XHJcbiAgICAvLyAgICAgZXhwZWN0KHBsYXllcnMuZGF0YS5yZXNwb25zZSkudG9FcXVhbChbXSk7XHJcbiAgICAvLyB9KTtcclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7O0FBR0FBLElBQUksQ0FBQ0MsYUFBTDtBQUVBLElBQU1DLElBQUksR0FBRyxJQUFBQyx5QkFBQSxFQUNULG9CQUFDLHdCQUFELFFBQ0ksb0JBQUMsaUJBQUQsT0FESixDQURTLENBQWI7QUFNQUMsUUFBUSxDQUFDLFNBQUQsRUFBWSxZQUFNO0VBQ3RCQyxJQUFJLENBQUMsbUJBQUQsRUFBc0IsWUFBTTtJQUM1QkMsTUFBTSxDQUFDSixJQUFJLENBQUNLLE1BQUwsRUFBRCxDQUFOLENBQXNCQyxlQUF0QjtFQUNILENBRkcsQ0FBSjtBQVFILENBVE8sQ0FBUiJ9